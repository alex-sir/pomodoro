{"version":3,"sources":["bundle.min.js"],"names":["countdown","timer","document","querySelector","timerStarted","play","pause","stop","reset","arrow","querySelectorAll","pomodoros","pomodorosCount","sessionTitle","increaseSession","sessionMinutes","decreaseSession","breakTitle","increaseBreak","breakMinutes","decreaseBreak","longBreak","longBreakPomodoro","longBreakInput","confirmTimeChangeLongBreak","timeInputLabelLongBreak","sessionSeconds","parseInt","textContent","autoStart","notifications","tabTitleTime","breakLongBreakLink","preferences","breakSelected","sessionTimeSelected","breakTimeSelected","longBreakTimeSelected","customThemeSwitch","confirmTimeChanges","sessionInput","confirmTimeChangeSession","breakInput","confirmTimeChangeBreak","timeInputs","timeInputLabels","notificationIcon","notificationTime","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","length","setStorageTime","localStorage","JSON","stringify","checkTimerFont","seconds","matchMedia","matches","style","fontSize","timerDisplay","breakTime","returnRunTimerDisplay","runTimerDisplay","clearInterval","disabled","i","id","checked","classList","add","contains","pointerEvents","getAttribute","forEach","then","Date","now","displayTimeLeft","setInterval","secondsLeft","Math","round","currentActive","titleBorderChange","notificationLongBreakOver","Notification","icon","body","setTimeout","close","bind","console","error","pomodoro","parse","getItem","setAttribute","customValueBody","customValueIcons","remove","split","min","notificationLongBreakStart","notificationBreakStart","notificationBreakOver","notificationTimeOver","addEventListener","keyCode","repeat","pauseTimer","noTitleToggle","background","backgroundSize","backgroundPosition","toggle","timerSession","increase","minutes","decrease","session","runIncrease","isThroughKey","minutesTextContent","runDecrease","breakMinutesContent","altKey","title","floor","remainderSeconds","display","hours","toString","padStart","clickRun","runPauseTimer","breakSessionTitleReset","enableTimeInputs","stopTimerHard","resetPomodoros","backgroundColor","pomodoroBorder","breakLongBreakLinkCheck","returnRunBreakLongBreakLinkCheck","runBreakLongBreakLinkCheck","link","onload","preference","clearStorage","storageWarningBackground","acceptClear","declineClear","clear","location","reload","target","logStorage","storageLogWrapper","closeBtnLog","storageLogContent","hideLogModal","key","value","Object","entries","localStorageProperty","createElement","marginBottom","appendChild","sessionTime","runSessionSelect","runBreakSelect","runLongBreakSelect","sessionBreakSelect","runStopTimer","stopTimer","runResetTimer","resetTimer","requestPermission","toggleNotifications","checkIsDigit","preventDefault","runConfirmTimeChange","input","isSession","isLongBreak","inputValue","changeTimeInput","modalSettings","modalBtnSettings","closeBtnSettings","settings","modalAbout","modalBtnAbout","closeBtnAbout","about","modalHowToUse","closeBtnHowToUse","howToUse","modalWhatIs","closeBtnWhatIs","whatIs","hideModalSettings","modal","opacity","visibility","transform","overflow","hideModalAbout","modalDisplayGeneric","modalBtn","closeBtn","hideModalGeneric","blur","modalDisplaySettings","modalDisplayAbout","timerFontMediaQuery","timerFontListener","addListener","themes","themeClass","themeWarningBackground","themeColor","themeBorder","themeActive","themeTitle","acceptRestart","declineRestart","bodyBackgroundColor","getComputedStyle","getPropertyValue","iconsColor","applyCustomTheme","customThemeActive","colorPicker","$","spectrum","color","rgbHex","showInput","showInitial","showAlpha","preferredFormat","on","accept","decline","themeWarning","bodyValue","contentValue","removeCustomTheme","customThemeChanger","titleBorderColor","timerRestartThemeCustom","isTimerStarted","element","borderColor","fullRemove","customThemeReset","changeTheme","theme","executeChangeTheme","timerRestartTheme","storageTheme","loadStorageTheme"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){// Timer\r\nlet countdown;\r\nconst timer = document.querySelector('#timer');\r\nlet timerStarted = false;\r\n// Timer controls\r\nconst play = document.querySelector('#play');\r\nconst pause = document.querySelector('#pause');\r\nconst stop = document.querySelector('#stop');\r\nconst reset = document.querySelector('#reset');\r\nconst arrow = document.querySelectorAll('.arrow');\r\n// Pomodoros\r\nconst pomodoros = document.querySelectorAll('.pomodoro');\r\nlet pomodorosCount = 0;\r\n// Session\r\nconst sessionTitle = document.querySelector('.session-title h3');\r\nconst increaseSession = document.querySelector('#increase-session');\r\nconst sessionMinutes = document.querySelector('#session-minutes');\r\nconst decreaseSession = document.querySelector('#decrease-session');\r\n// Break\r\nconst breakTitle = document.querySelector('.break-title h3');\r\nconst increaseBreak = document.querySelector('#increase-break');\r\nconst breakMinutes = document.querySelector('#break-minutes');\r\nconst decreaseBreak = document.querySelector('#decrease-break');\r\n// Long break\r\nlet longBreak = 15;\r\nconst longBreakPomodoro = document.querySelector('.pomodoro:last-of-type');\r\nconst longBreakInput = document.querySelector('#long-break-input');\r\nconst confirmTimeChangeLongBreak = document.querySelector('.confirm-time-change-long-break');\r\nconst timeInputLabelLongBreak = document.querySelector('.time-input-wrapper:last-child>label');\r\n// Current seconds\r\nlet sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n// Preferences\r\nconst autoStart = document.querySelector('#auto-start');\r\nconst notifications = document.querySelector('#notifications');\r\nconst tabTitleTime = document.querySelector('#tab-title-time');\r\nconst breakLongBreakLink = document.querySelector('#break-long-break-link');\r\nconst preferences = document.querySelectorAll('.preference');\r\n// Selections\r\nlet breakSelected = false;\r\nlet sessionTimeSelected = true;\r\nlet breakTimeSelected = false;\r\nlet longBreakTimeSelected = false;\r\nlet customThemeSwitch = true;\r\n// Time inputs\r\nconst confirmTimeChanges = document.querySelectorAll('.confirm-time-change');\r\nconst sessionInput = document.querySelector('#session-input');\r\nconst confirmTimeChangeSession = document.querySelector('.confirm-time-change-session');\r\nconst breakInput = document.querySelector('#break-input');\r\nconst confirmTimeChangeBreak = document.querySelector('.confirm-time-change-break');\r\nconst timeInputs = document.querySelectorAll('.time-input');\r\nconst timeInputLabels = document.querySelectorAll('.time-input-wrapper>label');\r\n// Notifications\r\nconst notificationIcon = 'favicon/android-chrome-192x192.png';\r\nconst notificationTime = 5000;\r\n\r\n// TODO: Add statistics showing pomodoro completions and progress\r\n// TODO: Add a to-do list under the timer. It should feature the ability to add, delete, tag, and be expandable with more info (a description)\r\n// FIXME: Delay in time for tab title. Use web workers to solve this\r\n// FIXME: Notifications don't pop up on mobile\r\n// FIXME: Slight nudge to timer when on mobile times of >=60 minutes are selected\r\n\r\n/**\r\n * https://mzl.la/2zJOaCZ\r\n * \r\n * @param {string} type \r\n * @return {boolean}\r\n */\r\nfunction storageAvailable(type) {\r\n    let storage;\r\n    try {\r\n        storage = window[type];\r\n        const x = '__storage_test__';\r\n        storage.setItem(x, x);\r\n        storage.removeItem(x);\r\n        return true;\r\n    } catch (e) {\r\n        return e instanceof DOMException && (\r\n                // everything except Firefox\r\n                e.code === 22 ||\r\n                // Firefox\r\n                e.code === 1014 ||\r\n                // test name field too, because code might not be present\r\n                // everything except Firefox\r\n                e.name === 'QuotaExceededError' ||\r\n                // Firefox\r\n                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n            // acknowledge QuotaExceededError only if there's something already stored\r\n            (storage && storage.length !== 0);\r\n    }\r\n}\r\n\r\nfunction setStorage() {\r\n    if (window.localStorage.length === 0 && storageAvailable('localStorage')) {\r\n        // Time\r\n        localStorage.setItem('session', JSON.stringify(sessionMinutes.textContent));\r\n        localStorage.setItem('break', JSON.stringify(breakMinutes.textContent));\r\n        localStorage.setItem('longBreak', JSON.stringify(longBreak));\r\n        // Preferences\r\n        localStorage.setItem('autoStart', JSON.stringify(true));\r\n        autoStart.checked = true;\r\n        localStorage.setItem('notifications', JSON.stringify(false));\r\n        notifications.checked = false;\r\n        localStorage.setItem('tabTitleTime', JSON.stringify(true));\r\n        tabTitleTime.checked = true;\r\n        localStorage.setItem('breakLongBreakLink', JSON.stringify(true));\r\n        breakLongBreakLink.checked = true;\r\n    }\r\n}\r\n\r\nfunction setStorageTime() {\r\n    localStorage.setItem('session', JSON.stringify(sessionMinutes.textContent));\r\n    localStorage.setItem('break', JSON.stringify(breakMinutes.textContent));\r\n    localStorage.setItem('longBreak', JSON.stringify(longBreak));\r\n}\r\n\r\nfunction setStoragePreferences() {\r\n    preferences.forEach(preference => {\r\n        preference.addEventListener('change', () => {\r\n            localStorage.setItem(preference.getAttribute('data-preference'), JSON.stringify(preference.checked));\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Checks seconds to see if the timer font needs adjusting. Adjusts it if so.\r\n * \r\n * @param {number} seconds\r\n * @param {DOM element} timer\r\n * @return {void}\r\n */\r\nfunction checkTimerFont(seconds, timer) {\r\n    if (seconds === 360000 && window.matchMedia('(max-width: 420px)').matches) {\r\n        timer.style.fontSize = '4.688rem';\r\n    } else if (seconds >= 3600 && window.matchMedia('(max-width: 420px)').matches) {\r\n        timer.style.fontSize = '5rem';\r\n    } else {\r\n        timer.style.fontSize = '5.625rem';\r\n    }\r\n}\r\n\r\nfunction loadStorage() {\r\n    // Time\r\n    sessionMinutes.textContent = JSON.parse(localStorage.getItem('session'));\r\n    sessionSeconds = +sessionMinutes.textContent * 60;\r\n    displayTimeLeft(sessionSeconds, false);\r\n    breakMinutes.textContent = JSON.parse(localStorage.getItem('break'));\r\n    longBreak = JSON.parse(localStorage.getItem('longBreak'));\r\n    // Preferences\r\n    autoStart.checked = JSON.parse(localStorage.getItem('autoStart'));\r\n    notifications.checked = JSON.parse(localStorage.getItem('notifications'));\r\n    tabTitleTime.checked = JSON.parse(localStorage.getItem('tabTitleTime'));\r\n    breakLongBreakLink.checked = JSON.parse(localStorage.getItem('breakLongBreakLink'));\r\n    breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, true)(breakLongBreakLink);\r\n    // Timer font\r\n    checkTimerFont(sessionSeconds, timer);\r\n}\r\n\r\nfunction clearStorage() {\r\n    const clearStorage = document.querySelector('#clear-storage');\r\n    const storageWarningBackground = document.querySelector('.storage-warning-background');\r\n    const acceptClear = document.querySelector('#accept-clear');\r\n    const declineClear = document.querySelector('#decline-clear');\r\n\r\n    clearStorage.addEventListener('click', () => {\r\n        storageWarningBackground.style.display = 'block';\r\n        acceptClear.addEventListener('click', () => {\r\n            localStorage.clear();\r\n            storageWarningBackground.style.display = 'none';\r\n            location.reload(true);\r\n        });\r\n        declineClear.addEventListener('click', () => {\r\n            storageWarningBackground.style.display = 'none';\r\n        });\r\n        window.addEventListener('click', function (e) {\r\n            if (e.target === storageWarningBackground) storageWarningBackground.style.display = 'none';\r\n        });\r\n    });\r\n}\r\n\r\nfunction logStorage() {\r\n    const logStorage = document.querySelector('#log-storage');\r\n    const storageLogWrapper = document.querySelector('.storage-log-wrapper');\r\n    const closeBtnLog = document.querySelector('#close-btn-log');\r\n    const storageLogContent = document.querySelector('#storage-log-content');\r\n\r\n    logStorage.addEventListener('click', () => {\r\n        storageLogWrapper.style.display = 'block';\r\n        for (let [key, value] of Object.entries(localStorage)) {\r\n            let localStorageProperty = document.createElement('div');\r\n            localStorageProperty.textContent = `${key}: ${value}`;\r\n            localStorageProperty.style.marginBottom = '10px';\r\n            storageLogContent.appendChild(localStorageProperty);\r\n        }\r\n        document.querySelector('#storage-log-content>div:last-child').style.marginBottom = '0';\r\n    });\r\n\r\n    function hideLogModal() {\r\n        storageLogWrapper.style.display = 'none';\r\n        storageLogContent.textContent = '';\r\n    }\r\n\r\n    closeBtnLog.addEventListener('click', () => {\r\n        hideLogModal();\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === storageLogWrapper) {\r\n            hideLogModal();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Runs core logic for displaying and counting down the timer.\r\n * \r\n * @param {number} seconds\r\n * @param {boolean} breakTime\r\n * @param {boolean} returnRunTimerDisplay\r\n * @return {function || void}\r\n */\r\nfunction timerDisplay(seconds, breakTime = true, returnRunTimerDisplay) {\r\n    function runTimerDisplay() {\r\n        if (!timerStarted) timerStarted = true;\r\n        if (breakSelected && pomodorosCount !== 4 && !timerStarted) sessionSeconds = breakMinutes.textContent * 60;\r\n        seconds = sessionSeconds;\r\n        clearInterval(countdown);\r\n        pause.disabled = false;\r\n        stop.disabled = false;\r\n        // Disable time inputs and buttons while timer is running\r\n        autoStart.disabled = true;\r\n        breakLongBreakLink.disabled = true;\r\n        play.disabled = true;\r\n        for (let i = 0; i < timeInputs.length; i++) {\r\n            if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else {\r\n                timeInputs[i].disabled = true;\r\n                timeInputs[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n            }\r\n            if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n            else {\r\n                confirmTimeChanges[i].style.pointerEvents = 'none';\r\n                confirmTimeChanges[i].classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            }\r\n            if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else timeInputLabels[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = true;\r\n        });\r\n        const now = Date.now();\r\n        const then = now + seconds * 1000;\r\n        displayTimeLeft(seconds);\r\n\r\n        countdown = setInterval(() => {\r\n            const secondsLeft = Math.round((then - Date.now()) / 1000);\r\n            // const secondsLeft = Math.round((then - then) / 1000);\r\n            sessionSeconds -= 1;\r\n\r\n            if (secondsLeft < 1) {\r\n                clearInterval(countdown);\r\n                if (autoStart.checked) {\r\n                    currentActive = titleBorderChange(false);\r\n                    if (pomodorosCount === 4) {\r\n                        try {\r\n                            const notificationLongBreakOver = new Notification('Long break over', {\r\n                                icon: notificationIcon,\r\n                                body: 'Session started'\r\n                            });\r\n                            setTimeout(notificationLongBreakOver.close.bind(notificationLongBreakOver), notificationTime);\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                        }\r\n                        breakSelected = false;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        longBreakTimeSelected = false;\r\n                        pomodorosCount = 0;\r\n                        // Reset pomodoros to correct colors\r\n                        pomodoros.forEach((pomodoro) => {\r\n                            if (!JSON.parse(localStorage.getItem('customThemeActive'))) pomodoro.classList.remove(`${currentActive.split('-')[0]}-background`);\r\n                            else pomodoro.setAttribute('style', `background-color: ${customValueBody}; border-color: ${customValueIcons};`);\r\n                        });\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    } else if (breakTime && !breakSelected) {\r\n                        // Session finishes, start break or long break\r\n                        breakSelected = true;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        pomodorosCount++;\r\n                        // Fill in next pomodoro\r\n                        if (!JSON.parse(localStorage.getItem('customThemeActive'))) pomodoros[pomodorosCount - 1].classList.add(`${currentActive.split('-')[0]}-background`);\r\n                        else pomodoros[pomodorosCount - 1].setAttribute('style', `background-color: ${customValueIcons}; border-color: ${customValueIcons};`);\r\n                        if (pomodorosCount === 4) {\r\n                            sessionSeconds = Math.min(longBreak * 60, 6000);\r\n                            try {\r\n                                const notificationLongBreakStart = new Notification('Session over', {\r\n                                    icon: notificationIcon,\r\n                                    body: 'Long break started'\r\n                                });\r\n                                setTimeout(notificationLongBreakStart.close.bind(notificationLongBreakStart), notificationTime);\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                            }\r\n                            longBreakTimeSelected = true;\r\n                        } else {\r\n                            sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n                            try {\r\n                                const notificationBreakStart = new Notification('Session over', {\r\n                                    icon: notificationIcon,\r\n                                    body: 'Break started'\r\n                                });\r\n                                setTimeout(notificationBreakStart.close.bind(notificationBreakStart), notificationTime);\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                            }\r\n                        }\r\n                        timerDisplay(sessionSeconds, false, true)();\r\n                        play.disabled = false;\r\n                    } else {\r\n                        try {\r\n                            const notificationBreakOver = new Notification('Break over', {\r\n                                icon: notificationIcon,\r\n                                body: 'Session started'\r\n                            });\r\n                            setTimeout(notificationBreakOver.close.bind(notificationBreakOver), notificationTime);\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                        }\r\n                        breakSelected = false;\r\n                        breakTimeSelected = false;\r\n                        sessionTimeSelected = true;\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    }\r\n                } else {\r\n                    const notificationTimeOver = new Notification('Time over', {\r\n                        icon: notificationIcon,\r\n                    });\r\n                    setTimeout(notificationTimeOver.close.bind(notificationTimeOver), notificationTime);\r\n                }\r\n            }\r\n            displayTimeLeft(secondsLeft);\r\n        }, 1000);\r\n    }\r\n    if (returnRunTimerDisplay) return runTimerDisplay;\r\n    document.addEventListener('keydown', e => {\r\n        if (e.keyCode === 32) {\r\n            if (e.repeat) return;\r\n            if (pause.disabled) runTimerDisplay();\r\n            else pauseTimer(pause, false)();\r\n        }\r\n    });\r\n    play.addEventListener('click', runTimerDisplay);\r\n}\r\n\r\n/**\r\n * Allows selection of a session, break, or long break.\r\n * Displays correct time and selection.\r\n * \r\n * @param {DOM element} sessionTime\r\n * @param {DOM element} breakTime\r\n * @param {DOM element} longBreakPomodoro\r\n * @return {void}\r\n */\r\nfunction sessionBreakSelect(sessionTime, breakTime, longBreakPomodoro) {\r\n    function runSessionSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, true, true);\r\n        if (sessionTimeSelected) null;\r\n        else if (breakTimeSelected) {\r\n            breakTimeSelected = false;\r\n            sessionTimeSelected = true;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runLongBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = true;\r\n        sessionSeconds = parseInt(longBreak) * 60;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        currentActive = titleBorderChange(true);\r\n        pomodorosCount = 4;\r\n        // Fill in all four pomodoros\r\n        pomodoros.forEach(pomodoro => {\r\n            if (!JSON.parse(localStorage.getItem('customThemeActive'))) pomodoro.classList.add(`${currentActive.split('-')[0]}-background`);\r\n            else pomodoro.setAttribute('style', `background-color: ${customValueIcons}; border-color: ${customValueIcons};`);\r\n        });\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 80) {\r\n            if (e.repeat) return\r\n            runSessionSelect();\r\n        }\r\n    });\r\n    sessionTime.addEventListener('click', runSessionSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 66) {\r\n            if (e.repeat) return\r\n            runBreakSelect();\r\n        }\r\n    });\r\n    breakTime.addEventListener('click', runBreakSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 76) {\r\n            if (e.repeat) return;\r\n            runLongBreakSelect();\r\n        }\r\n    });\r\n    longBreakPomodoro.addEventListener('click', runLongBreakSelect);\r\n}\r\n\r\n/**\r\n * Changes border under session or select.\r\n * Adjusts colors and classes as needed.\r\n * \r\n * @param {boolean} noTitleToggle\r\n * @return {DOM class || void}\r\n */\r\nfunction titleBorderChange(noTitleToggle) {\r\n    let currentActive;\r\n    if (!JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n        sessionTitle.classList.length >= 1 ?\r\n            currentActive = sessionTitle.classList[sessionTitle.classList.length - 1] :\r\n            currentActive = breakTitle.classList[breakTitle.classList.length - 1];\r\n        if (noTitleToggle) return currentActive;\r\n        breakTitle.classList.toggle(currentActive);\r\n        sessionTitle.classList.toggle(currentActive);\r\n    } else if (noTitleToggle) {\r\n        return;\r\n    } else {\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n        if (customThemeSwitch) {\r\n            customThemeSwitch = false;\r\n            sessionTitle.style.background = '';\r\n            sessionTitle.style.backgroundSize = '';\r\n            sessionTitle.style.backgroundPosition = '';\r\n            breakTitle.style.background = `linear-gradient(to right, ${customValueIcons}, ${customValueIcons}) no-repeat`;\r\n            breakTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            breakTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        } else {\r\n            customThemeSwitch = true;\r\n            breakTitle.style.background = '';\r\n            breakTitle.style.backgroundSize = '';\r\n            breakTitle.style.backgroundPosition = '';\r\n            sessionTitle.style.background = `linear-gradient(to right, ${customValueIcons}, ${customValueIcons}) no-repeat`;\r\n            sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        }\r\n    }\r\n    return currentActive;\r\n}\r\n\r\n/**\r\n * Increase or decrease time relative to the desired time option.\r\n * \r\n * @param {DOM element} increase\r\n * @param {DOM element} minutes\r\n * @param {DOM element} decrease\r\n * @param {boolean} session\r\n * @return {void}\r\n */\r\nfunction timerSession(increase, minutes, decrease, session = true) {\r\n    function runIncrease(isThroughKey = false) {\r\n        const minutesTextContent = parseInt(minutes.textContent);\r\n        if ((parseInt(minutes.textContent) >= 6000 && !longBreakTimeSelected) ||\r\n            (longBreak >= 6000 && longBreakTimeSelected && !session && minutesTextContent >= 6000) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 6000 && !session && minutesTextContent >= 6000)) {\r\n            return;\r\n        } else {\r\n            if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n                sessionSeconds += 60;\r\n                longBreak += 1;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else minutes.textContent = parseInt(minutes.textContent) + 1;\r\n            if (session) {\r\n                if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!breakSelected && !longBreakTimeSelected) sessionSeconds += 60;\r\n            } else if (breakSelected) {\r\n                if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && minutesTextContent < 2000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n                else if (longBreakTimeSelected) null;\r\n                else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!longBreakTimeSelected) sessionSeconds += 60;\r\n                else if (breakLongBreakLink.checked && minutesTextContent >= 2000) null;\r\n                else if (breakLongBreakLink.checked) sessionSeconds += 60 * 3;\r\n            }\r\n        }\r\n        if (breakLongBreakLink.checked && longBreak !== 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    increase.addEventListener('click', () => {\r\n        runIncrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 38 && !timerStarted) {\r\n            runIncrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n\r\n    function runDecrease(isThroughKey = false) {\r\n        if ((parseInt(minutes.textContent) <= 1 && !longBreakTimeSelected) ||\r\n            (longBreak <= 1 && longBreakTimeSelected && !session) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 3 && !session)) {\r\n            return;\r\n        }\r\n\r\n        const breakMinutesContent = parseInt(breakMinutes.textContent) * 3;\r\n\r\n        if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n            sessionSeconds -= 60;\r\n            longBreak -= 1;\r\n            displayTimeLeft(sessionSeconds, false);\r\n        } else minutes.textContent = parseInt(minutes.textContent) - 1;\r\n        if (session) {\r\n            if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!breakSelected && !longBreakTimeSelected) sessionSeconds -= 60;\r\n        } else if (breakSelected) {\r\n            if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && breakMinutesContent <= 6000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n            else if (longBreakTimeSelected) null;\r\n            else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!longBreakTimeSelected) sessionSeconds -= 60;\r\n            else if (breakLongBreakLink.checked && parseInt(breakMinutes.textContent) >= 2000) null;\r\n            else if (breakLongBreakLink.checked) sessionSeconds -= 60 * 3;\r\n        }\r\n        if (breakLongBreakLink.checked && breakMinutesContent <= 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    decrease.addEventListener('click', () => {\r\n        runDecrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 40 && !timerStarted) {\r\n            runDecrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {number} seconds\r\n * @param {boolean} title\r\n * @return {void}\r\n */\r\nfunction displayTimeLeft(seconds, title = true) {\r\n    let minutes = Math.floor(seconds / 60);\r\n    const remainderSeconds = seconds % 60;\r\n    let display;\r\n    if (minutes >= 60) {\r\n        const hours = Math.floor(minutes / 60);\r\n        minutes %= 60;\r\n        display = `${hours < 10 ? hours.toString().padStart(2, 0) : hours}:${\r\n            minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    } else {\r\n        display = `${minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    }\r\n    timer.textContent = display;\r\n    if (!title || !tabTitleTime.checked) return;\r\n    else document.title = `(${display}) Pomodoro`;\r\n}\r\n\r\n/**\r\n * @param {DOM element} pause\r\n * @param {boolean} clickRun\r\n * @return {function || void}\r\n */\r\nfunction pauseTimer(pause, clickRun) {\r\n    function runPauseTimer() {\r\n        clearInterval(countdown);\r\n        // Resume timer for session or break\r\n        sessionTitle.classList >= 1 ? timerDisplay(0, true, true) : timerDisplay(0, false, true);\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n    }\r\n\r\n    if (!clickRun) return runPauseTimer;\r\n    else {\r\n        pause.disabled = true;\r\n        pause.addEventListener('click', runPauseTimer);\r\n    }\r\n}\r\n\r\n/**\r\n * On timer reset, move bottom border indicator to session.\r\n * \r\n * @return {void}\r\n */\r\nfunction breakSessionTitleReset() {\r\n    if (breakTitle.classList.length >= 1) {\r\n        sessionTitle.classList.add(breakTitle.classList[breakTitle.classList.length - 1]);\r\n        breakTitle.classList = '';\r\n    } else if (JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n        sessionTitle.style.background = `linear-gradient(to right, ${customValueIcons}, ${customValueIcons}) no-repeat`;\r\n        sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n        sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        breakTitle.style.background = '';\r\n        customThemeSwitch = true;\r\n    }\r\n}\r\n\r\n/**\r\n * @return {void}\r\n */\r\nfunction enableTimeInputs() {\r\n    for (let i = 0; i < timeInputs.length; i++) {\r\n        if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else {\r\n            timeInputs[i].disabled = false;\r\n            timeInputs[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n        else {\r\n            confirmTimeChanges[i].style.pointerEvents = 'auto';\r\n            confirmTimeChanges[i].classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n        }\r\n        if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else timeInputLabels[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n    }\r\n}\r\n\r\n/**\r\n * @param {DOM element} stop\r\n * @param {number} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimer(stop, seconds) {\r\n    stop.disabled = true;\r\n\r\n    function runStopTimer() {\r\n        if (breakSelected && pomodorosCount !== 4) seconds = parseInt(breakMinutes.textContent) * 60;\r\n        else if (pomodorosCount === 4) seconds = longBreak * 60;\r\n        else seconds = parseInt(sessionMinutes.textContent) * 60;\r\n        if (!(pomodorosCount >= 1) || longBreakTimeSelected) timerStarted = false;\r\n        sessionSeconds = seconds;\r\n        clearInterval(countdown);\r\n        displayTimeLeft(seconds);\r\n        stop.disabled = true;\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        enableTimeInputs();\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        document.title = 'Pomodoro';\r\n        if (breakSelected) timerDisplay(seconds, false, true);\r\n        else timerDisplay(seconds, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 83) {\r\n            if (e.repeat) return;\r\n            runStopTimer();\r\n        }\r\n    });\r\n    stop.addEventListener('click', runStopTimer);\r\n}\r\n\r\n/**\r\n * Stops timer and resets pomodoros.\r\n * \r\n * @param {DOM element} stop\r\n * @param {*} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimerHard(stop, seconds) {\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    timerStarted = false;\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    sessionSeconds = seconds;\r\n    clearInterval(countdown);\r\n    displayTimeLeft(seconds);\r\n    breakSessionTitleReset();\r\n    resetPomodoros(pomodoros);\r\n    pomodorosCount = 0;\r\n    breakSelected = false;\r\n    sessionTimeSelected = true;\r\n    breakTimeSelected = false;\r\n    longBreakTimeSelected = false;\r\n    stop.disabled = true;\r\n    pause.disabled = true;\r\n    play.disabled = false;\r\n    autoStart.disabled = false;\r\n    breakLongBreakLink.disabled = false;\r\n    enableTimeInputs();\r\n    arrow.forEach(arrow => {\r\n        arrow.disabled = false;\r\n    });\r\n    document.title = 'Pomodoro';\r\n    timerDisplay(seconds, true, true);\r\n    checkTimerFont(sessionSeconds, timer);\r\n}\r\n\r\n/**\r\n * @param {DOM elements} pomodoros\r\n * @return {void}\r\n */\r\nfunction resetPomodoros(pomodoros) {\r\n    pomodoros.forEach((pomodoro) => {\r\n        if (!JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n            const pomodoroBorder = pomodoro.classList[1];\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro', pomodoroBorder);\r\n        } else {\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro');\r\n            pomodoro.style.backgroundColor = '';\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {DOM element} reset\r\n * @return {void}\r\n */\r\nfunction resetTimer(reset) {\r\n    function runResetTimer() {\r\n        timerStarted = false;\r\n        clearInterval(countdown);\r\n        timer.textContent = '25:00';\r\n        sessionMinutes.textContent = '25';\r\n        breakSessionTitleReset();\r\n        breakSelected = false;\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        longBreakTimeSelected = false;\r\n        enableTimeInputs();\r\n        resetPomodoros(pomodoros);\r\n        pomodorosCount = 0;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        breakMinutes.textContent = '5';\r\n        longBreak = 15;\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        play.disabled = false;\r\n        pause.disabled = true;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        document.title = 'Pomodoro';\r\n        timerDisplay(parseInt(timer.textContent.split(':')[0]) * 60, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 82) {\r\n            if (e.repeat) return;\r\n            runResetTimer();\r\n        }\r\n    });\r\n    reset.addEventListener('click', runResetTimer);\r\n}\r\n\r\n/**\r\n * @param {DOM element} notifications\r\n * @return {void}\r\n */\r\nfunction toggleNotifications(notifications) {\r\n    notifications.addEventListener('change', e => {\r\n        if (e.target.checked) Notification.requestPermission().then();\r\n    });\r\n}\r\n\r\n/**\r\n * Change the time of a time option through input.\r\n * \r\n * @param {DOM element} confirmTimeChangeSession\r\n * @param {DOM element} sessionInput\r\n * @param {DOM element} confirmTimeChangeBreak\r\n * @param {DOM element} breakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} longBreakInput\r\n * @return {void}\r\n */\r\nfunction changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput) {\r\n    function checkIsDigit(e) {\r\n        if (e.keyCode === 189 ||\r\n            e.keyCode === 187 ||\r\n            e.keyCode === 69 ||\r\n            e.keyCode === 190) e.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Check which time option is currently selected.\r\n     * Update time option text value, timer display, and session seconds accordingly.\r\n     * \r\n     * @param {DOM element} input\r\n     * @param {DOM element} minutes\r\n     * @param {boolean} isSession\r\n     * @param {boolean} isLongBreak\r\n     * @return {void}\r\n     */\r\n    function runConfirmTimeChange(input, minutes, isSession, isLongBreak) {\r\n        let inputValue = input.value;\r\n        if (inputValue > 6000) {\r\n            inputValue = 6000;\r\n            input.value = 6000;\r\n        } else if (inputValue < 1 || input.length === 0) {\r\n            inputValue = 1;\r\n            input.value = 1;\r\n        }\r\n        if (isSession) {\r\n            if (!breakSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        } else if (!isSession) {\r\n            if (longBreakTimeSelected && breakLongBreakLink.checked) {\r\n                longBreak = Math.min(inputValue * 3, 6000);\r\n                sessionSeconds = longBreak * 60;\r\n                displayTimeLeft(sessionSeconds, false)\r\n            } else if (longBreakTimeSelected && !breakLongBreakLink.checked) {\r\n                if (isLongBreak) {\r\n                    sessionSeconds = inputValue * 60;\r\n                    displayTimeLeft(sessionSeconds, false);\r\n                }\r\n            } else if (breakSelected && !isLongBreak) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else if (isLongBreak && longBreakTimeSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        }\r\n        if (isLongBreak) longBreak = +inputValue;\r\n        if (breakLongBreakLink.checked && !isSession) longBreak = Math.min(inputValue * 3, 6000);\r\n        minutes.textContent = parseInt(inputValue, 10);\r\n    }\r\n\r\n    confirmTimeChangeSession.addEventListener('click', () => {\r\n        runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    sessionInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n\r\n    confirmTimeChangeBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    breakInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n    confirmTimeChangeLongBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    longBreakInput.addEventListener('keydown', e => {\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Adjust long break time in conjunction with break if link active.\r\n * \r\n * @param {DOM element} breakLongBreakLink\r\n * @param {DOM element} longBreakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} timeInputLabelLongBreak\r\n * @param {DOM element} breakMinutes\r\n * @return {void}\r\n */\r\nfunction breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, returnRunBreakLongBreakLinkCheck) {\r\n    function runBreakLongBreakLinkCheck(link) {\r\n        if (link.checked) {\r\n            longBreakInput.classList.add('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.add('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'none';\r\n            longBreakInput.disabled = true;\r\n            longBreak = Math.min(+breakMinutes.textContent * 3, 6000);\r\n            if (longBreakTimeSelected) {\r\n                displayTimeLeft(longBreak * 60, false);\r\n                sessionSeconds = longBreak * 60;\r\n            }\r\n        } else if (!link.checked) {\r\n            longBreakInput.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'auto';\r\n            longBreakInput.disabled = false;\r\n        }\r\n    }\r\n    breakLongBreakLink.addEventListener('change', () => {\r\n        runBreakLongBreakLinkCheck(breakLongBreakLink);\r\n    });\r\n    if (returnRunBreakLongBreakLinkCheck) return runBreakLongBreakLinkCheck;\r\n}\r\n\r\nfunction mainTimer() {\r\n    // Storage\r\n    setStorage();\r\n    setStoragePreferences();\r\n    loadStorage();\r\n    clearStorage();\r\n    logStorage();\r\n    // Timer\r\n    timerDisplay(sessionSeconds, true, false);\r\n    timerSession(increaseSession, sessionMinutes, decreaseSession, true);\r\n    timerSession(increaseBreak, breakMinutes, decreaseBreak, false);\r\n    // Time option select\r\n    sessionBreakSelect(sessionTitle, breakTitle, longBreakPomodoro);\r\n    // Controls\r\n    pauseTimer(pause, true);\r\n    stopTimer(stop, sessionSeconds);\r\n    resetTimer(reset);\r\n    // Preferences\r\n    toggleNotifications(notifications);\r\n    changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput);\r\n    breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, false);\r\n}\r\n\r\nwindow.onload = mainTimer();\n// Settings\r\nconst modalSettings = document.querySelector('#simple-modal-settings');\r\nconst modalBtnSettings = document.querySelector('#modal-btn-settings');\r\nconst closeBtnSettings = document.querySelector('#close-btn-settings');\r\nconst settings = document.querySelector('.settings');\r\n// About\r\nconst modalAbout = document.querySelector('#simple-modal-about');\r\nconst modalBtnAbout = document.querySelector('#modal-btn-about');\r\nconst closeBtnAbout = document.querySelector('#close-btn-about');\r\nconst about = document.querySelector('.about');\r\n// How To Use\r\nconst modalHowToUse = document.querySelector('#modal-how-to-use');\r\nconst closeBtnHowToUse = document.querySelector('#close-btn-how-to-use');\r\nconst howToUse = document.querySelector('#how-to-use');\r\n// What is\r\nconst modalWhatIs = document.querySelector('#modal-what-is');\r\nconst closeBtnWhatIs = document.querySelector('#close-btn-what-is');\r\nconst whatIs = document.querySelector('#what-is');\r\n\r\nfunction modalDisplaySettings(modal, modalBtn, closeBtn, settings) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        settings.style.transform = 'rotate(90deg)';\r\n        body.style.overflow = 'hidden';\r\n        settings.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalSettings(modal, settings);\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === modal) {\r\n            hideModalSettings(modal, settings);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalSettings(modal, settings) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    settings.style.transform = 'rotate(0deg)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction modalDisplayAbout(modal, modalBtn, closeBtn, about) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        about.style.transform = 'scale(0.85)';\r\n        body.style.overflow = 'hidden';\r\n        about.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalAbout(modal);\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === modal) {\r\n            hideModalAbout(modal);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalAbout(modal) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    about.style.transform = 'scale(1)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\n/**\r\n * @param {DOM element} modal\r\n * @param {DOM element} modalBtn\r\n * @param {DOM element} closeBtn\r\n * @return {void}\r\n */\r\nfunction modalDisplayGeneric(modal, modalBtn, closeBtn) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        body.style.overflow = 'hidden';\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalGeneric(modal);\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === modal) hideModalGeneric(modal);\r\n    });\r\n}\r\n\r\n/**\r\n * @param {DOM element} modal\r\n * @return {void}\r\n */\r\nfunction hideModalGeneric(modal) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction mainModal() {\r\n    modalDisplaySettings(modalSettings, modalBtnSettings, closeBtnSettings, settings);\r\n    modalDisplayAbout(modalAbout, modalBtnAbout, closeBtnAbout, about);\r\n    modalDisplayGeneric(modalHowToUse, howToUse, closeBtnHowToUse);\r\n    modalDisplayGeneric(modalWhatIs, whatIs, closeBtnWhatIs);\r\n}\r\n\r\nwindow.onload = mainModal();\nconst timerFontMediaQuery = window.matchMedia('(max-width: 420px)');\r\n\r\n/**\r\n * Changes font size for small screens on large time quantities.\r\n * Prevents overflow.\r\n * \r\n * @param {media query} e \r\n * @return {void}\r\n */\r\nfunction timerFontListener(e) {\r\n    if (e.matches) {\r\n        if (sessionSeconds === 360000) timer.style.fontSize = '4.688rem';\r\n        else if (sessionSeconds >= 3600) timer.style.fontSize = '5rem';\r\n    } else timer.style.fontSize = '5.625rem';\r\n}\r\n\r\nfunction mediaQueryListener() {\r\n    timerFontMediaQuery.addListener(timerFontListener);\r\n    timerFontListener(timerFontMediaQuery);\r\n}\r\n\r\nwindow.onload = mediaQueryListener();\n// Body\r\nconst body = document.querySelector('body');\r\n// Theme\r\nconst themes = document.querySelectorAll('.theme');\r\nlet themeClass = document.querySelector('body').classList[0];\r\nconst themeWarningBackground = document.querySelector('.theme-warning-background');\r\n// Theme color\r\nconst themeColor = document.querySelectorAll('.dark-color');\r\nconst themeBackground = document.querySelectorAll('.dark-background');\r\nconst themeBorder = document.querySelectorAll('.dark-border');\r\nlet themeActive = document.querySelector('.dark-active');\r\nconst themeTitle = document.querySelector('.dark-title');\r\n// Restart\r\nconst acceptRestart = document.querySelector('#accept-restart');\r\nconst declineRestart = document.querySelector('#decline-restart');\r\n// Custom theme\r\nlet customValueBody;\r\nlet customValueIcons;\r\nlet bodyBackgroundColor = window.getComputedStyle(document.querySelector('body')).getPropertyValue('background-color');\r\nlet iconsColor = window.getComputedStyle(sessionTitle).getPropertyValue('color');\r\nconst applyCustomTheme = document.querySelector('#apply-custom-theme');\r\nlet customThemeActive = false;\r\n\r\n// TODO: Modal should also change color OR make it dark mode (not sure which one is better)\r\n// FIXME: User shouldn't be able to select two colors that are very similar, it'll make the icons invisible\r\n\r\nfunction setStorageTheme() {\r\n    if ((window.localStorage.length === 0 || !localStorage.getItem('themeClass')) &&\r\n        storageAvailable('localStorage')) {\r\n        // Theme\r\n        localStorage.setItem('themeClass', JSON.stringify(themeClass));\r\n        // Custom theme\r\n        localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n        localStorage.setItem('bodyBackgroundColor', JSON.stringify('rgb(0, 0, 128)'));\r\n        localStorage.setItem('iconsColor', JSON.stringify('rgb(200, 200, 200)'));\r\n    }\r\n}\r\n\r\nfunction loadStorageTheme() {\r\n    let storageTheme;\r\n    themes.forEach(theme => {\r\n        if (theme.classList.contains(JSON.parse(localStorage.getItem('themeClass')))) storageTheme = theme;\r\n    })\r\n    if (!JSON.parse(localStorage.getItem('customThemeActive'))) executeChangeTheme(storageTheme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, false);\r\n    else customThemeChanger(JSON.parse(localStorage.getItem('bodyBackgroundColor')), JSON.parse(localStorage.getItem('iconsColor'), false));\r\n}\r\n\r\n/**\r\n * Sets color picking for Spectrum.\r\n * Calls and checks application of custom theme.\r\n * \r\n * @return {void}\r\n */\r\nfunction colorPicker() {\r\n    $('#color-picker-body').spectrum({\r\n        color: `#${rgbHex(JSON.parse(localStorage.getItem('bodyBackgroundColor')))}`,\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    $('#color-picker-content').spectrum({\r\n        color: `#${rgbHex(JSON.parse(localStorage.getItem('iconsColor')))}`,\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    customValueBody = $('#color-picker-body').spectrum('get');\r\n    customValueIcons = $('#color-picker-content').spectrum('get');\r\n    $('#color-picker-body').on('change.spectrum', () => {\r\n        customValueBody = $('#color-picker-body').spectrum('get');\r\n    });\r\n    $('#color-picker-content').on('change.spectrum', () => {\r\n        customValueIcons = $('#color-picker-content').spectrum('get');\r\n    });\r\n    applyCustomTheme.addEventListener('click', () => {\r\n        if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartThemeCustom(acceptRestart, declineRestart, themeWarningBackground, customValueBody, customValueIcons);\r\n        else {\r\n            customThemeActive = true;\r\n            localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n            customThemeChanger(customValueBody, customValueIcons, false);\r\n            if (breakSelected) titleBorderColor(true);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Changes the current theme into tone with the selected custom values.\r\n * \r\n * @param {string} bodyValue\r\n * @param {string} contentValue\r\n * @param {boolean} isTimerStarted\r\n * @return {void}\r\n */\r\nfunction customThemeChanger(bodyValue, contentValue, isTimerStarted) {\r\n    body.setAttribute('style', `background-color: ${bodyValue}; color: ${contentValue};`)\r\n    themeColor.forEach(element => {\r\n        element.setAttribute('style', `color: ${contentValue};`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.setAttribute('style', `border-color: ${contentValue}`);\r\n    });\r\n    if (breakSelected) breakTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    else sessionTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    themeTitle.setAttribute('style', `color: ${contentValue}`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = contentValue;\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.style.backgroundColor = contentValue;\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n    bodyBackgroundColor = window.getComputedStyle(document.querySelector('body')).getPropertyValue('background-color');\r\n    iconsColor = window.getComputedStyle(sessionTitle).getPropertyValue('color');\r\n    localStorage.setItem('bodyBackgroundColor', JSON.stringify(bodyBackgroundColor));\r\n    localStorage.setItem('iconsColor', JSON.stringify(iconsColor));\r\n}\r\n\r\n/**\r\n * Removes the current custom theme and applies the new one.\r\n * On full remove, a pre-built theme is applied.\r\n * \r\n * @return {void}\r\n */\r\nfunction removeCustomTheme(fullRemove = false) {\r\n    if (fullRemove) {\r\n        customThemeActive = false;\r\n        localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n    }\r\n    body.style.backgroundColor = '';\r\n    body.style.color = '';\r\n    themeColor.forEach(element => {\r\n        element.style.color = '';\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.style.borderColor = '';\r\n    });\r\n    breakTitle.style.background = '';\r\n    themeActive.style.background = '';\r\n    themeActive.style.backgroundSize = '';\r\n    themeActive.style.backgroundPosition = '';\r\n    themeTitle.style.color = '';\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = '';\r\n        pomodoro.style.backgroundColor = '';\r\n    });\r\n}\r\n\r\n/**\r\n * Asks for a timer restart when a pre-built theme is applied on a timer with progress.\r\n * \r\n * @param {DOM element} accept\r\n * @param {DOM element} decline\r\n * @param {DOM element} themeWarning\r\n * @param {DOM element} theme\r\n * @return {void}\r\n */\r\nfunction timerRestartTheme(accept, decline, themeWarning, theme) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        stopTimerHard(stop, sessionSeconds);\r\n        executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, true);\r\n        if (JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n            removeCustomTheme(true);\r\n        }\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\n/**\r\n * Asks for a timer restart when a custom theme is applied on a timer with progress.\r\n * \r\n * @param {DOM element} accept\r\n * @param {DOM element} decline\r\n * @param {DOM element} themeWarning\r\n * @param {string} bodyValue\r\n * @param {string} contentValue\r\n * @return {void}\r\n */\r\nfunction timerRestartThemeCustom(accept, decline, themeWarning, bodyValue, contentValue) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        customThemeActive = true;\r\n        localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n        removeCustomTheme(false);\r\n        stopTimerHard(stop, sessionSeconds);\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        customThemeChanger(bodyValue, contentValue, true);\r\n        titleBorderColor(true)\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\n/**\r\n * Correctly switches the color of the border color under the session/break titles.\r\n * \r\n * @param {boolean} customThemeReset \r\n * @return {void}\r\n */\r\nfunction titleBorderColor(customThemeReset) {\r\n    if (!JSON.parse(localStorage.getItem('customThemeActive')) && !customThemeReset) {\r\n        let currentActive = sessionTitle.classList[sessionTitle.classList.length - 1];\r\n        breakTitle.classList = '';\r\n        breakTitle.classList.add(currentActive);\r\n        sessionTitle.classList = '';\r\n    } else if (customThemeReset) {\r\n        if (breakSelected) customThemeSwitch = false;\r\n        else customThemeSwitch = true;\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Sets picking for pre-built themes.\r\n * Calls and checks application od custom theme.\r\n * \r\n * @param {DOM element} themes \r\n * @return {void}\r\n */\r\nfunction changeTheme(themes) {\r\n    themes.forEach(theme => {\r\n        theme.addEventListener('click', function () {\r\n            if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartTheme(acceptRestart, declineRestart, themeWarningBackground, theme);\r\n            else {\r\n                if (JSON.parse(localStorage.getItem('customThemeActive'))) removeCustomTheme(true);\r\n                setTimeout(() => {\r\n                    if (breakSelected) titleBorderColor(false);\r\n                }, 0);\r\n                executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, false);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Changes current theme into the selected pre-built theme.\r\n * Uses class switching to achieve this.\r\n * \r\n * @param {DOM element} theme\r\n * @param {DOM element} themeColor\r\n * @param {DOM element} themeBorder\r\n * @param {DOM element} themeActive\r\n * @param {DOM element} themeTitle\r\n * @param {DOM elements} pomodoros\r\n * @param {DOM element} modalSettings\r\n * @param {boolean} isTimerStarted\r\n * @return {void}\r\n */\r\nfunction executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, isTimerStarted) {\r\n    body.classList = '';\r\n    body.classList.add(theme.classList[1]);\r\n    themeColor.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-color`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-border`);\r\n    });\r\n    themeActive.classList.remove(themeActive.classList[themeActive.classList.length - 1]);\r\n    themeActive.classList.add(`${theme.classList[1]}-active`);\r\n    themeActive = document.querySelector(`.${theme.classList[1]}-active`);\r\n    themeTitle.classList.remove(themeTitle.classList[themeTitle.classList.length - 1]);\r\n    themeTitle.classList.add(`${theme.classList[1]}-title`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.classList = '';\r\n        pomodoro.classList.add('pomodoro', `${theme.classList[1]}-border`);\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.classList.add('pomodoro', `${theme.classList[1]}-background`);\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n    localStorage.setItem('themeClass', JSON.stringify(document.querySelector('body').classList[0]));\r\n}\r\n\r\nfunction mainThemes() {\r\n    setStorageTheme();\r\n    loadStorageTheme();\r\n    changeTheme(themes);\r\n    colorPicker();\r\n}\r\n\r\nwindow.onload = mainThemes();})();"]}