{"version":3,"sources":["bundle.min.js"],"names":["countdown","timer","document","querySelector","timerStarted","play","pause","stop","reset","arrow","querySelectorAll","pomodoros","pomodorosCount","sessionTitle","increaseSession","sessionMinutes","decreaseSession","breakTitle","increaseBreak","breakMinutes","decreaseBreak","longBreak","longBreakPomodoro","longBreakInput","confirmTimeChangeLongBreak","timeInputLabelLongBreak","sessionSeconds","parseInt","textContent","autoStart","notifications","tabTitleTime","breakLongBreakLink","preferences","breakSelected","sessionTimeSelected","breakTimeSelected","longBreakTimeSelected","customThemeSwitch","confirmTimeChanges","sessionInput","confirmTimeChangeSession","breakInput","confirmTimeChangeBreak","timeInputs","timeInputLabels","notificationIcon","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","length","setStorageTime","localStorage","JSON","stringify","checkTimerFont","seconds","matchMedia","matches","style","fontSize","timerDisplay","breakTime","returnRunTimerDisplay","runTimerDisplay","clearInterval","disabled","i","id","checked","classList","add","contains","pointerEvents","getAttribute","forEach","then","Date","now","displayTimeLeft","setInterval","secondsLeft","Math","round","currentActive","titleBorderChange","Push","create","body","icon","pomodoro","parse","getItem","setAttribute","customValueBody","customValueContent","remove","split","min","addEventListener","keyCode","repeat","pauseTimer","noTitleToggle","background","backgroundSize","backgroundPosition","toggle","timerSession","increase","minutes","decrease","session","runIncrease","isThroughKey","minutesTextContent","runDecrease","breakMinutesContent","altKey","title","floor","remainderSeconds","display","hours","toString","padStart","clickRun","runPauseTimer","breakSessionTitleReset","enableTimeInputs","stopTimerHard","resetPomodoros","backgroundColor","pomodoroBorder","breakLongBreakLinkCheck","returnRunBreakLongBreakLinkCheck","runBreakLongBreakLinkCheck","link","onload","preference","clearStorage","storageWarningBackground","acceptClear","declineClear","clear","location","reload","target","logStorage","storageLogWrapper","closeBtnLog","storageLogContent","hideLogModal","key","value","Object","entries","localStorageProperty","createElement","marginBottom","appendChild","sessionTime","runSessionSelect","runBreakSelect","runLongBreakSelect","sessionBreakSelect","runStopTimer","stopTimer","runResetTimer","resetTimer","Permission","request","toggleNotifications","checkIsDigit","preventDefault","runConfirmTimeChange","input","isSession","isLongBreak","inputValue","changeTimeInput","modalSettings","modalBtnSettings","closeBtnSettings","settings","modalAbout","modalBtnAbout","closeBtnAbout","about","modalHowToUse","closeBtnHowToUse","howToUse","modalWhatIs","closeBtnWhatIs","whatIs","hideModalSettings","modal","opacity","setTimeout","visibility","transform","overflow","hideModalAbout","modalDisplayGeneric","modalBtn","closeBtn","hideModalGeneric","blur","modalDisplaySettings","modalDisplayAbout","timerFontMediaQuery","timerFontListener","addListener","themes","themeColor","themeBorder","themeActive","themeTitle","themeWarningBackground","acceptRestart","declineRestart","applyCustomTheme","customThemeActive","themeClass","bodyBackgroundColor","getComputedStyle","getPropertyValue","iconsColor","colorPicker","$","spectrum","color","rgbHex","showInput","showInitial","showAlpha","preferredFormat","on","accept","decline","themeWarning","bodyValue","contentValue","removeCustomTheme","customThemeChanger","titleBorderColor","timerRestartThemeCustom","isTimerStarted","element","borderColor","fullRemove","customThemeReset","changeTheme","theme","executeChangeTheme","timerRestartTheme","storageTheme","loadStorageTheme"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){// Timer\r\nlet countdown;\r\nconst timer = document.querySelector('#timer');\r\nlet timerStarted = false;\r\n// Timer controls\r\nconst play = document.querySelector('#play');\r\nconst pause = document.querySelector('#pause');\r\nconst stop = document.querySelector('#stop');\r\nconst reset = document.querySelector('#reset');\r\nconst arrow = document.querySelectorAll('.arrow');\r\n// Pomodoros\r\nconst pomodoros = document.querySelectorAll('.pomodoro');\r\nlet pomodorosCount = 0;\r\n// Session\r\nconst sessionTitle = document.querySelector('.session-title h3');\r\nconst increaseSession = document.querySelector('#increase-session');\r\nconst sessionMinutes = document.querySelector('#session-minutes');\r\nconst decreaseSession = document.querySelector('#decrease-session');\r\n// Break\r\nconst breakTitle = document.querySelector('.break-title h3');\r\nconst increaseBreak = document.querySelector('#increase-break');\r\nconst breakMinutes = document.querySelector('#break-minutes');\r\nconst decreaseBreak = document.querySelector('#decrease-break');\r\n// Long break\r\nlet longBreak = 15;\r\nconst longBreakPomodoro = document.querySelector('.pomodoro:last-of-type');\r\nconst longBreakInput = document.querySelector('#long-break-input');\r\nconst confirmTimeChangeLongBreak = document.querySelector('.confirm-time-change-long-break');\r\nconst timeInputLabelLongBreak = document.querySelector('.time-input-wrapper:last-child>label');\r\n// Current seconds\r\nlet sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n// Preferences\r\nconst autoStart = document.querySelector('#auto-start');\r\nconst notifications = document.querySelector('#notifications');\r\nconst tabTitleTime = document.querySelector('#tab-title-time');\r\nconst breakLongBreakLink = document.querySelector('#break-long-break-link');\r\nconst preferences = document.querySelectorAll('.preference');\r\n// Selections\r\nlet breakSelected = false;\r\nlet sessionTimeSelected = true;\r\nlet breakTimeSelected = false;\r\nlet longBreakTimeSelected = false;\r\nlet customThemeSwitch = true;\r\n// Time inputs\r\nconst confirmTimeChanges = document.querySelectorAll('.confirm-time-change');\r\nconst sessionInput = document.querySelector('#session-input');\r\nconst confirmTimeChangeSession = document.querySelector('.confirm-time-change-session');\r\nconst breakInput = document.querySelector('#break-input');\r\nconst confirmTimeChangeBreak = document.querySelector('.confirm-time-change-break');\r\nconst timeInputs = document.querySelectorAll('.time-input');\r\nconst timeInputLabels = document.querySelectorAll('.time-input-wrapper>label');\r\n// Icon\r\nconst notificationIcon = 'favicon/android-chrome-192x192.png';\r\n\r\n// TODO: Add guide on info modal\r\n// TODO: Switch push.js notifications to use vanilla notifications API (maybe, have to do more research)\r\n// TODO: Add a to-do list under the timer. It should feature the ability to add, delete, tag, and be expandable with more info (a description)\r\n// FIXME: Delay in time for tab title. Use web workers to solve this\r\n// FIXME: Slight nudge to timer when on mobile times of >=60 minutes are selected\r\n\r\n/**\r\n * https://mzl.la/2zJOaCZ\r\n * \r\n * @param {string} type \r\n * @return {boolean}\r\n */\r\nfunction storageAvailable(type) {\r\n    let storage;\r\n    try {\r\n        storage = window[type];\r\n        const x = '__storage_test__';\r\n        storage.setItem(x, x);\r\n        storage.removeItem(x);\r\n        return true;\r\n    } catch (e) {\r\n        return e instanceof DOMException && (\r\n                // everything except Firefox\r\n                e.code === 22 ||\r\n                // Firefox\r\n                e.code === 1014 ||\r\n                // test name field too, because code might not be present\r\n                // everything except Firefox\r\n                e.name === 'QuotaExceededError' ||\r\n                // Firefox\r\n                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n            // acknowledge QuotaExceededError only if there's something already stored\r\n            (storage && storage.length !== 0);\r\n    }\r\n}\r\n\r\nfunction setStorage() {\r\n    if (window.localStorage.length === 0 && storageAvailable('localStorage')) {\r\n        // Time\r\n        localStorage.setItem('session', JSON.stringify(sessionMinutes.textContent));\r\n        localStorage.setItem('break', JSON.stringify(breakMinutes.textContent));\r\n        localStorage.setItem('longBreak', JSON.stringify(longBreak));\r\n        // Preferences\r\n        localStorage.setItem('autoStart', JSON.stringify(true));\r\n        autoStart.checked = true;\r\n        localStorage.setItem('notifications', JSON.stringify(false));\r\n        notifications.checked = false;\r\n        localStorage.setItem('tabTitleTime', JSON.stringify(true));\r\n        tabTitleTime.checked = true;\r\n        localStorage.setItem('breakLongBreakLink', JSON.stringify(true));\r\n        breakLongBreakLink.checked = true;\r\n    }\r\n}\r\n\r\nfunction setStorageTime() {\r\n    localStorage.setItem('session', JSON.stringify(sessionMinutes.textContent));\r\n    localStorage.setItem('break', JSON.stringify(breakMinutes.textContent));\r\n    localStorage.setItem('longBreak', JSON.stringify(longBreak));\r\n}\r\n\r\nfunction setStoragePreferences() {\r\n    preferences.forEach(preference => {\r\n        preference.addEventListener('change', () => {\r\n            localStorage.setItem(preference.getAttribute('data-preference'), JSON.stringify(preference.checked));\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Checks seconds to see if the timer font needs adjusting. Adjusts it if so.\r\n * \r\n * @param {number} seconds\r\n * @param {DOM element} timer\r\n * @return {void}\r\n */\r\nfunction checkTimerFont(seconds, timer) {\r\n    if (seconds === 360000 && window.matchMedia('(max-width: 420px)').matches) {\r\n        timer.style.fontSize = '4.688rem';\r\n    } else if (seconds >= 3600 && window.matchMedia('(max-width: 420px)').matches) {\r\n        timer.style.fontSize = '5rem';\r\n    } else {\r\n        timer.style.fontSize = '5.625rem';\r\n    }\r\n}\r\n\r\nfunction loadStorage() {\r\n    // Time\r\n    sessionMinutes.textContent = JSON.parse(localStorage.getItem('session'));\r\n    sessionSeconds = +sessionMinutes.textContent * 60;\r\n    displayTimeLeft(sessionSeconds, false);\r\n    breakMinutes.textContent = JSON.parse(localStorage.getItem('break'));\r\n    longBreak = JSON.parse(localStorage.getItem('longBreak'));\r\n    // Preferences\r\n    autoStart.checked = JSON.parse(localStorage.getItem('autoStart'));\r\n    notifications.checked = JSON.parse(localStorage.getItem('notifications'));\r\n    tabTitleTime.checked = JSON.parse(localStorage.getItem('tabTitleTime'));\r\n    breakLongBreakLink.checked = JSON.parse(localStorage.getItem('breakLongBreakLink'));\r\n    breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, true)(breakLongBreakLink);\r\n    // Timer font\r\n    checkTimerFont(sessionSeconds, timer);\r\n}\r\n\r\nfunction clearStorage() {\r\n    const clearStorage = document.querySelector('#clear-storage');\r\n    const storageWarningBackground = document.querySelector('.storage-warning-background');\r\n    const acceptClear = document.querySelector('#accept-clear');\r\n    const declineClear = document.querySelector('#decline-clear');\r\n\r\n    clearStorage.addEventListener('click', () => {\r\n        storageWarningBackground.style.display = 'block';\r\n        acceptClear.addEventListener('click', () => {\r\n            localStorage.clear();\r\n            storageWarningBackground.style.display = 'none';\r\n            location.reload(true);\r\n        });\r\n        declineClear.addEventListener('click', () => {\r\n            storageWarningBackground.style.display = 'none';\r\n        });\r\n        window.addEventListener('click', function (e) {\r\n            if (e.target === storageWarningBackground) storageWarningBackground.style.display = 'none';\r\n        });\r\n    });\r\n}\r\n\r\nfunction logStorage() {\r\n    const logStorage = document.querySelector('#log-storage');\r\n    const storageLogWrapper = document.querySelector('.storage-log-wrapper');\r\n    const closeBtnLog = document.querySelector('#close-btn-log');\r\n    const storageLogContent = document.querySelector('#storage-log-content');\r\n\r\n    logStorage.addEventListener('click', () => {\r\n        storageLogWrapper.style.display = 'block';\r\n        for (let [key, value] of Object.entries(localStorage)) {\r\n            let localStorageProperty = document.createElement('div');\r\n            localStorageProperty.textContent = `${key}: ${value}`;\r\n            localStorageProperty.style.marginBottom = '10px';\r\n            storageLogContent.appendChild(localStorageProperty);\r\n        }\r\n        document.querySelector('#storage-log-content>div:last-child').style.marginBottom = '0';\r\n    });\r\n\r\n    function hideLogModal() {\r\n        storageLogWrapper.style.display = 'none';\r\n        storageLogContent.textContent = '';\r\n    }\r\n\r\n    closeBtnLog.addEventListener('click', () => {\r\n        hideLogModal();\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === storageLogWrapper) {\r\n            hideLogModal();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Runs core logic for displaying and counting down the timer.\r\n * \r\n * @param {number} seconds\r\n * @param {boolean} breakTime\r\n * @param {boolean} returnRunTimerDisplay\r\n * @return {function || void}\r\n */\r\nfunction timerDisplay(seconds, breakTime = true, returnRunTimerDisplay) {\r\n    function runTimerDisplay() {\r\n        if (!timerStarted) timerStarted = true;\r\n        if (breakSelected && pomodorosCount !== 4 && !timerStarted) sessionSeconds = breakMinutes.textContent * 60;\r\n        seconds = sessionSeconds;\r\n        clearInterval(countdown);\r\n        pause.disabled = false;\r\n        stop.disabled = false;\r\n        // Disable time inputs and buttons while timer is running\r\n        autoStart.disabled = true;\r\n        breakLongBreakLink.disabled = true;\r\n        play.disabled = true;\r\n        for (let i = 0; i < timeInputs.length; i++) {\r\n            if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else {\r\n                timeInputs[i].disabled = true;\r\n                timeInputs[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n            }\r\n            if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n            else {\r\n                confirmTimeChanges[i].style.pointerEvents = 'none';\r\n                confirmTimeChanges[i].classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            }\r\n            if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else timeInputLabels[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = true;\r\n        });\r\n        const now = Date.now();\r\n        const then = now + seconds * 1000;\r\n        displayTimeLeft(seconds);\r\n\r\n        countdown = setInterval(() => {\r\n            const secondsLeft = Math.round((then - Date.now()) / 1000);\r\n            // const secondsLeft = Math.round((then - then) / 1000);\r\n            sessionSeconds -= 1;\r\n\r\n            if (secondsLeft < 1) {\r\n                clearInterval(countdown);\r\n                if (autoStart.checked) {\r\n                    currentActive = titleBorderChange(false);\r\n                    if (pomodorosCount === 4) {\r\n                        Push.create('Long break over!', {\r\n                            body: 'Session started.',\r\n                            icon: notificationIcon\r\n                        });\r\n                        breakSelected = false;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        longBreakTimeSelected = false;\r\n                        pomodorosCount = 0;\r\n                        // Reset pomodoros to correct colors\r\n                        pomodoros.forEach((pomodoro) => {\r\n                            if (!JSON.parse(localStorage.getItem('customThemeActive'))) pomodoro.classList.remove(`${currentActive.split('-')[0]}-background`);\r\n                            else pomodoro.setAttribute('style', `background-color: ${customValueBody}; border-color: ${customValueContent};`);\r\n                        });\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    } else if (breakTime && !breakSelected) {\r\n                        // Session finishes, start break or long break\r\n                        breakSelected = true;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        pomodorosCount++;\r\n                        // Fill in next pomodoro\r\n                        if (!JSON.parse(localStorage.getItem('customThemeActive'))) pomodoros[pomodorosCount - 1].classList.add(`${currentActive.split('-')[0]}-background`);\r\n                        else pomodoros[pomodorosCount - 1].setAttribute('style', `background-color: ${customValueContent}; border-color: ${customValueContent};`);\r\n                        if (pomodorosCount === 4) {\r\n                            sessionSeconds = Math.min(longBreak * 60, 6000);\r\n                            Push.create('Session over!', {\r\n                                body: 'Long break started.',\r\n                                icon: notificationIcon\r\n                            });\r\n                            longBreakTimeSelected = true;\r\n                        } else {\r\n                            sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n                            Push.create('Session over!', {\r\n                                body: 'Break started.',\r\n                                icon: notificationIcon\r\n                            });\r\n                        }\r\n                        timerDisplay(sessionSeconds, false, true)();\r\n                        play.disabled = false;\r\n                    } else {\r\n                        Push.create('Break over!', {\r\n                            body: 'Session started.',\r\n                            icon: notificationIcon\r\n                        });\r\n                        breakSelected = false;\r\n                        breakTimeSelected = false;\r\n                        sessionTimeSelected = true;\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    }\r\n                }\r\n            }\r\n            displayTimeLeft(secondsLeft);\r\n        }, 1000);\r\n    }\r\n    if (returnRunTimerDisplay) return runTimerDisplay;\r\n    document.addEventListener('keydown', e => {\r\n        if (e.keyCode === 32) {\r\n            if (e.repeat) return;\r\n            if (pause.disabled) runTimerDisplay();\r\n            else pauseTimer(pause, false)();\r\n        }\r\n    });\r\n    play.addEventListener('click', runTimerDisplay);\r\n}\r\n\r\n/**\r\n * Allows selection of a session, break, or long break.\r\n * Displays correct time and selection.\r\n * \r\n * @param {DOM element} sessionTime\r\n * @param {DOM element} breakTime\r\n * @param {DOM element} longBreakPomodoro\r\n * @return {void}\r\n */\r\nfunction sessionBreakSelect(sessionTime, breakTime, longBreakPomodoro) {\r\n    function runSessionSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, true, true);\r\n        if (sessionTimeSelected) null;\r\n        else if (breakTimeSelected) {\r\n            breakTimeSelected = false;\r\n            sessionTimeSelected = true;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runLongBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = true;\r\n        sessionSeconds = parseInt(longBreak) * 60;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        currentActive = titleBorderChange(true);\r\n        pomodorosCount = 4;\r\n        // Fill in all four pomodoros\r\n        pomodoros.forEach(pomodoro => {\r\n            if (!JSON.parse(localStorage.getItem('customThemeActive'))) pomodoro.classList.add(`${currentActive.split('-')[0]}-background`);\r\n            else pomodoro.setAttribute('style', `background-color: ${customValueContent}; border-color: ${customValueContent};`);\r\n        });\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 80) {\r\n            if (e.repeat) return\r\n            runSessionSelect();\r\n        }\r\n    });\r\n    sessionTime.addEventListener('click', runSessionSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 66) {\r\n            if (e.repeat) return\r\n            runBreakSelect();\r\n        }\r\n    });\r\n    breakTime.addEventListener('click', runBreakSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 76) {\r\n            if (e.repeat) return;\r\n            runLongBreakSelect();\r\n        }\r\n    });\r\n    longBreakPomodoro.addEventListener('click', runLongBreakSelect);\r\n}\r\n\r\n/**\r\n * Changes border under session or select.\r\n * Adjusts colors and classes as needed.\r\n * \r\n * @param {boolean} noTitleToggle\r\n * @return {DOM class || void}\r\n */\r\nfunction titleBorderChange(noTitleToggle) {\r\n    let currentActive;\r\n    if (!JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n        sessionTitle.classList.length >= 1 ?\r\n            currentActive = sessionTitle.classList[sessionTitle.classList.length - 1] :\r\n            currentActive = breakTitle.classList[breakTitle.classList.length - 1];\r\n        if (noTitleToggle) return currentActive;\r\n        breakTitle.classList.toggle(currentActive);\r\n        sessionTitle.classList.toggle(currentActive);\r\n    } else if (noTitleToggle) {\r\n        return;\r\n    } else {\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n        if (customThemeSwitch) {\r\n            customThemeSwitch = false;\r\n            sessionTitle.style.background = '';\r\n            sessionTitle.style.backgroundSize = '';\r\n            sessionTitle.style.backgroundPosition = '';\r\n            breakTitle.style.background = `linear-gradient(to right, ${customValueContent}, ${customValueContent}) no-repeat`;\r\n            breakTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            breakTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        } else {\r\n            customThemeSwitch = true;\r\n            breakTitle.style.background = '';\r\n            breakTitle.style.backgroundSize = '';\r\n            breakTitle.style.backgroundPosition = '';\r\n            sessionTitle.style.background = `linear-gradient(to right, ${customValueContent}, ${customValueContent}) no-repeat`;\r\n            sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        }\r\n    }\r\n    return currentActive;\r\n}\r\n\r\n/**\r\n * Increase or decrease time relative to the desired time option.\r\n * \r\n * @param {DOM element} increase\r\n * @param {DOM element} minutes\r\n * @param {DOM element} decrease\r\n * @param {boolean} session\r\n * @return {void}\r\n */\r\nfunction timerSession(increase, minutes, decrease, session = true) {\r\n    function runIncrease(isThroughKey = false) {\r\n        const minutesTextContent = parseInt(minutes.textContent);\r\n        if ((parseInt(minutes.textContent) >= 6000 && !longBreakTimeSelected) ||\r\n            (longBreak >= 6000 && longBreakTimeSelected && !session && minutesTextContent >= 6000) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 6000 && !session && minutesTextContent >= 6000)) {\r\n            return;\r\n        } else {\r\n            if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n                sessionSeconds += 60;\r\n                longBreak += 1;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else minutes.textContent = parseInt(minutes.textContent) + 1;\r\n            if (session) {\r\n                if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!breakSelected && !longBreakTimeSelected) sessionSeconds += 60;\r\n            } else if (breakSelected) {\r\n                if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && minutesTextContent < 2000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n                else if (longBreakTimeSelected) null;\r\n                else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!longBreakTimeSelected) sessionSeconds += 60;\r\n                else if (breakLongBreakLink.checked) null;\r\n                else if (breakLongBreakLink.checked) sessionSeconds += 60 * 3;\r\n            }\r\n        }\r\n        if (breakLongBreakLink.checked && longBreak !== 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    increase.addEventListener('click', () => {\r\n        runIncrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 38 && !timerStarted) {\r\n            runIncrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n\r\n    function runDecrease(isThroughKey = false) {\r\n        if ((parseInt(minutes.textContent) <= 1 && !longBreakTimeSelected) ||\r\n            (longBreak <= 1 && longBreakTimeSelected && !session) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 3 && !session)) {\r\n            return;\r\n        }\r\n\r\n        const breakMinutesContent = parseInt(breakMinutes.textContent) * 3;\r\n\r\n        if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n            sessionSeconds -= 60;\r\n            longBreak -= 1;\r\n            displayTimeLeft(sessionSeconds, false);\r\n        } else minutes.textContent = parseInt(minutes.textContent) - 1;\r\n        if (session) {\r\n            if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!breakSelected && !longBreakTimeSelected) sessionSeconds -= 60;\r\n        } else if (breakSelected) {\r\n            if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && breakMinutesContent <= 6000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n            else if (longBreakTimeSelected) null;\r\n            else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!longBreakTimeSelected) sessionSeconds -= 60;\r\n            else if (breakLongBreakLink.checked && breakMinutesContent >= 2000) null;\r\n            else if (breakLongBreakLink.checked) sessionSeconds -= 60 * 3;\r\n        }\r\n        if (breakLongBreakLink.checked && breakMinutesContent <= 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    decrease.addEventListener('click', () => {\r\n        runDecrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 40 && !timerStarted) {\r\n            runDecrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {number} seconds\r\n * @param {boolean} title\r\n * @return {void}\r\n */\r\nfunction displayTimeLeft(seconds, title = true) {\r\n    let minutes = Math.floor(seconds / 60);\r\n    const remainderSeconds = seconds % 60;\r\n    let display;\r\n    if (minutes >= 60) {\r\n        const hours = Math.floor(minutes / 60);\r\n        minutes %= 60;\r\n        display = `${hours < 10 ? hours.toString().padStart(2, 0) : hours}:${\r\n            minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    } else {\r\n        display = `${minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    }\r\n    timer.textContent = display;\r\n    if (!title || !tabTitleTime.checked) return;\r\n    else document.title = `(${display}) Pomodoro`;\r\n}\r\n\r\n/**\r\n * @param {DOM element} pause\r\n * @param {boolean} clickRun\r\n * @return {function || void}\r\n */\r\nfunction pauseTimer(pause, clickRun) {\r\n    function runPauseTimer() {\r\n        clearInterval(countdown);\r\n        // Resume timer for session or break\r\n        sessionTitle.classList >= 1 ? timerDisplay(0, true, true) : timerDisplay(0, false, true);\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n    }\r\n\r\n    if (!clickRun) return runPauseTimer;\r\n    else {\r\n        pause.disabled = true;\r\n        pause.addEventListener('click', runPauseTimer);\r\n    }\r\n}\r\n\r\n/**\r\n * On timer reset, move bottom border indicator to session.\r\n * \r\n * @return {void}\r\n */\r\nfunction breakSessionTitleReset() {\r\n    if (breakTitle.classList.length >= 1) {\r\n        sessionTitle.classList.add(breakTitle.classList[breakTitle.classList.length - 1]);\r\n        breakTitle.classList = '';\r\n    } else if (JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n        sessionTitle.style.background = `linear-gradient(to right, ${customValueContent}, ${customValueContent}) no-repeat`;\r\n        sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n        sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        breakTitle.style.background = '';\r\n        customThemeSwitch = true;\r\n    }\r\n}\r\n\r\n/**\r\n * @return {void}\r\n */\r\nfunction enableTimeInputs() {\r\n    for (let i = 0; i < timeInputs.length; i++) {\r\n        if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else {\r\n            timeInputs[i].disabled = false;\r\n            timeInputs[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n        else {\r\n            confirmTimeChanges[i].style.pointerEvents = 'auto';\r\n            confirmTimeChanges[i].classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n        }\r\n        if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else timeInputLabels[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n    }\r\n}\r\n\r\n/**\r\n * @param {DOM element} stop\r\n * @param {number} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimer(stop, seconds) {\r\n    stop.disabled = true;\r\n\r\n    function runStopTimer() {\r\n        if (breakSelected && pomodorosCount !== 4) seconds = parseInt(breakMinutes.textContent) * 60;\r\n        else if (pomodorosCount === 4) seconds = longBreak * 60;\r\n        else seconds = parseInt(sessionMinutes.textContent) * 60;\r\n        timerStarted = false;\r\n        sessionSeconds = seconds;\r\n        clearInterval(countdown);\r\n        displayTimeLeft(seconds);\r\n        stop.disabled = true;\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        enableTimeInputs();\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        document.title = 'Pomodoro';\r\n        if (breakSelected) timerDisplay(seconds, false, true);\r\n        else timerDisplay(seconds, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 83) {\r\n            if (e.repeat) return;\r\n            runStopTimer();\r\n        }\r\n    });\r\n    stop.addEventListener('click', runStopTimer);\r\n}\r\n\r\n/**\r\n * Stops timer and resets pomodoros.\r\n * \r\n * @param {DOM element} stop\r\n * @param {*} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimerHard(stop, seconds) {\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    timerStarted = false;\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    sessionSeconds = seconds;\r\n    clearInterval(countdown);\r\n    displayTimeLeft(seconds);\r\n    breakSessionTitleReset();\r\n    resetPomodoros(pomodoros);\r\n    pomodorosCount = 0;\r\n    breakSelected = false;\r\n    sessionTimeSelected = true;\r\n    breakTimeSelected = false;\r\n    longBreakTimeSelected = false;\r\n    stop.disabled = true;\r\n    pause.disabled = true;\r\n    play.disabled = false;\r\n    autoStart.disabled = false;\r\n    breakLongBreakLink.disabled = false;\r\n    enableTimeInputs();\r\n    arrow.forEach(arrow => {\r\n        arrow.disabled = false;\r\n    });\r\n    document.title = 'Pomodoro';\r\n    timerDisplay(seconds, true, true);\r\n    checkTimerFont(sessionSeconds, timer);\r\n}\r\n\r\n/**\r\n * @param {DOM elements} pomodoros\r\n * @return {void}\r\n */\r\nfunction resetPomodoros(pomodoros) {\r\n    pomodoros.forEach((pomodoro) => {\r\n        if (!JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n            const pomodoroBorder = pomodoro.classList[1];\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro', pomodoroBorder);\r\n        } else {\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro');\r\n            pomodoro.style.backgroundColor = '';\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {DOM element} reset\r\n * @return {void}\r\n */\r\nfunction resetTimer(reset) {\r\n    function runResetTimer() {\r\n        timerStarted = false;\r\n        clearInterval(countdown);\r\n        timer.textContent = '25:00';\r\n        sessionMinutes.textContent = '25';\r\n        breakSessionTitleReset();\r\n        breakSelected = false;\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        longBreakTimeSelected = false;\r\n        enableTimeInputs();\r\n        resetPomodoros(pomodoros);\r\n        pomodorosCount = 0;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        breakMinutes.textContent = '5';\r\n        longBreak = 15;\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        play.disabled = false;\r\n        pause.disabled = true;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        document.title = 'Pomodoro';\r\n        timerDisplay(parseInt(timer.textContent.split(':')[0]) * 60, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 82) {\r\n            if (e.repeat) return;\r\n            runResetTimer();\r\n        }\r\n    });\r\n    reset.addEventListener('click', runResetTimer);\r\n}\r\n\r\n/**\r\n * @param {DOM element} notifications\r\n * @return {void}\r\n */\r\nfunction toggleNotifications(notifications) {\r\n    notifications.addEventListener('change', e => {\r\n        if (e.target.checked) Push.Permission.request();\r\n    });\r\n}\r\n\r\n/**\r\n * Change the time of a time option through input.\r\n * \r\n * @param {DOM element} confirmTimeChangeSession\r\n * @param {DOM element} sessionInput\r\n * @param {DOM element} confirmTimeChangeBreak\r\n * @param {DOM element} breakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} longBreakInput\r\n * @return {void}\r\n */\r\nfunction changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput) {\r\n    function checkIsDigit(e) {\r\n        if (e.keyCode === 189 ||\r\n            e.keyCode === 187 ||\r\n            e.keyCode === 69 ||\r\n            e.keyCode === 190) e.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Check which time option is currently selected.\r\n     * Update time option text value, timer display, and session seconds accordingly.\r\n     * \r\n     * @param {DOM element} input\r\n     * @param {DOM element} minutes\r\n     * @param {boolean} isSession\r\n     * @param {boolean} isLongBreak\r\n     * @return {void}\r\n     */\r\n    function runConfirmTimeChange(input, minutes, isSession, isLongBreak) {\r\n        let inputValue = input.value;\r\n        if (inputValue > 6000) {\r\n            inputValue = 6000;\r\n            input.value = 6000;\r\n        } else if (inputValue < 1 || input.length === 0) {\r\n            inputValue = 1;\r\n            input.value = 1;\r\n        }\r\n        if (isSession) {\r\n            if (!breakSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        } else if (!isSession) {\r\n            if (longBreakTimeSelected && breakLongBreakLink.checked) {\r\n                longBreak = Math.min(inputValue * 3, 6000);\r\n                sessionSeconds = longBreak * 60;\r\n                displayTimeLeft(sessionSeconds, false)\r\n            } else if (longBreakTimeSelected && !breakLongBreakLink.checked) {\r\n                if (isLongBreak) {\r\n                    sessionSeconds = inputValue * 60;\r\n                    displayTimeLeft(sessionSeconds, false);\r\n                }\r\n            } else if (breakSelected && !isLongBreak) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else if (isLongBreak && longBreakTimeSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        }\r\n        if (isLongBreak) longBreak = +inputValue;\r\n        if (breakLongBreakLink.checked && !isSession) longBreak = Math.min(inputValue * 3, 6000);\r\n        minutes.textContent = parseInt(inputValue, 10);\r\n    }\r\n\r\n    confirmTimeChangeSession.addEventListener('click', () => {\r\n        runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    sessionInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n\r\n    confirmTimeChangeBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    breakInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n    confirmTimeChangeLongBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    longBreakInput.addEventListener('keydown', e => {\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Adjust long break time in conjunction with break if link active.\r\n * \r\n * @param {DOM element} breakLongBreakLink\r\n * @param {DOM element} longBreakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} timeInputLabelLongBreak\r\n * @param {DOM element} breakMinutes\r\n * @return {void}\r\n */\r\nfunction breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, returnRunBreakLongBreakLinkCheck) {\r\n    function runBreakLongBreakLinkCheck(link) {\r\n        if (link.checked) {\r\n            longBreakInput.classList.add('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.add('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'none';\r\n            longBreakInput.disabled = true;\r\n            longBreak = Math.min(+breakMinutes.textContent * 3, 6000);\r\n            if (longBreakTimeSelected) {\r\n                displayTimeLeft(longBreak * 60, false);\r\n                sessionSeconds = longBreak * 60;\r\n            }\r\n        } else if (!link.checked) {\r\n            longBreakInput.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'auto';\r\n            longBreakInput.disabled = false;\r\n        }\r\n    }\r\n    breakLongBreakLink.addEventListener('change', () => {\r\n        runBreakLongBreakLinkCheck(breakLongBreakLink);\r\n    });\r\n    if (returnRunBreakLongBreakLinkCheck) return runBreakLongBreakLinkCheck;\r\n}\r\n\r\nfunction mainTimer() {\r\n    // Storage\r\n    setStorage();\r\n    setStoragePreferences();\r\n    loadStorage();\r\n    clearStorage();\r\n    logStorage();\r\n    // Timer\r\n    timerDisplay(sessionSeconds, true, false);\r\n    timerSession(increaseSession, sessionMinutes, decreaseSession, true);\r\n    timerSession(increaseBreak, breakMinutes, decreaseBreak, false);\r\n    // Time option select\r\n    sessionBreakSelect(sessionTitle, breakTitle, longBreakPomodoro);\r\n    // Controls\r\n    pauseTimer(pause, true);\r\n    stopTimer(stop, sessionSeconds);\r\n    resetTimer(reset);\r\n    // Preferences\r\n    toggleNotifications(notifications);\r\n    changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput);\r\n    breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, false);\r\n}\r\n\r\nwindow.onload = mainTimer();\n// Settings\r\nconst modalSettings = document.querySelector('#simple-modal-settings');\r\nconst modalBtnSettings = document.querySelector('#modal-btn-settings');\r\nconst closeBtnSettings = document.querySelector('#close-btn-settings');\r\nconst settings = document.querySelector('.settings');\r\n// About\r\nconst modalAbout = document.querySelector('#simple-modal-about');\r\nconst modalBtnAbout = document.querySelector('#modal-btn-about');\r\nconst closeBtnAbout = document.querySelector('#close-btn-about');\r\nconst about = document.querySelector('.about');\r\n// How To Use\r\nconst modalHowToUse = document.querySelector('#modal-how-to-use');\r\nconst closeBtnHowToUse = document.querySelector('#close-btn-how-to-use');\r\nconst howToUse = document.querySelector('#how-to-use');\r\n// What is\r\nconst modalWhatIs = document.querySelector('#modal-what-is');\r\nconst closeBtnWhatIs = document.querySelector('#close-btn-what-is');\r\nconst whatIs = document.querySelector('#what-is');\r\n\r\nfunction modalDisplaySettings(modal, modalBtn, closeBtn, settings) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        settings.style.transform = 'rotate(90deg)';\r\n        body.style.overflow = 'hidden';\r\n        settings.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalSettings(modal, settings);\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === modal) {\r\n            hideModalSettings(modal, settings);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalSettings(modal, settings) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    settings.style.transform = 'rotate(0deg)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction modalDisplayAbout(modal, modalBtn, closeBtn, about) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        about.style.transform = 'scale(0.85)';\r\n        body.style.overflow = 'hidden';\r\n        about.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalAbout(modal);\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === modal) {\r\n            hideModalAbout(modal);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalAbout(modal) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    about.style.transform = 'scale(1)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction modalDisplayGeneric(modal, modalBtn, closeBtn) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        body.style.overflow = 'hidden';\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalGeneric(modal);\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === modal) hideModalGeneric(modal);\r\n    });\r\n}\r\n\r\nfunction hideModalGeneric(modal) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction mainModal() {\r\n    modalDisplaySettings(modalSettings, modalBtnSettings, closeBtnSettings, settings);\r\n    modalDisplayAbout(modalAbout, modalBtnAbout, closeBtnAbout, about);\r\n    modalDisplayGeneric(modalHowToUse, howToUse, closeBtnHowToUse);\r\n    modalDisplayGeneric(modalWhatIs, whatIs, closeBtnWhatIs);\r\n}\r\n\r\nwindow.onload = mainModal();\nconst timerFontMediaQuery = window.matchMedia('(max-width: 420px)');\r\n\r\nfunction timerFontListener(e) {\r\n    if (e.matches) {\r\n        if (sessionSeconds === 360000) timer.style.fontSize = '4.688rem';\r\n        else if (sessionSeconds >= 3600) timer.style.fontSize = '5rem';\r\n    } else timer.style.fontSize = '5.625rem';\r\n}\r\n\r\nfunction mediaQueryListener() {\r\n    timerFontMediaQuery.addListener(timerFontListener);\r\n    timerFontListener(timerFontMediaQuery);\r\n}\r\n\r\nwindow.onload = mediaQueryListener();\nconst themes = document.querySelectorAll('.theme');\r\nconst body = document.querySelector('body');\r\nconst themeColor = document.querySelectorAll('.dark-color');\r\nconst themeBackground = document.querySelectorAll('.dark-background');\r\nconst themeBorder = document.querySelectorAll('.dark-border');\r\nlet themeActive = document.querySelector('.dark-active');\r\nconst themeTitle = document.querySelector('.dark-title');\r\nconst themeWarningBackground = document.querySelector('.theme-warning-background');\r\nconst acceptRestart = document.querySelector('#accept-restart');\r\nconst declineRestart = document.querySelector('#decline-restart');\r\nlet customValueBody;\r\nlet customValueContent;\r\nconst applyCustomTheme = document.querySelector('#apply-custom-theme');\r\nlet customThemeActive = false;\r\n// Theme\r\nlet themeClass = document.querySelector('body').classList[0];\r\n// Custom theme\r\nlet bodyBackgroundColor = window.getComputedStyle(document.querySelector('body')).getPropertyValue('background-color');\r\nlet iconsColor = window.getComputedStyle(sessionTitle).getPropertyValue('color');\r\n\r\n// TODO: Modal should also change color OR make it dark mode (not sure which one is better)\r\n// TODO: Add documentation to this file\r\n\r\nfunction setStorageTheme() {\r\n    if ((window.localStorage.length === 0 || !localStorage.getItem('themeClass')) &&\r\n        storageAvailable('localStorage')) {\r\n        // Theme\r\n        localStorage.setItem('themeClass', JSON.stringify(themeClass));\r\n        // Custom theme\r\n        localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n        localStorage.setItem('bodyBackgroundColor', JSON.stringify('rgb(0, 0, 128)'));\r\n        localStorage.setItem('iconsColor', JSON.stringify('rgb(200, 200, 200)'));\r\n    }\r\n}\r\n\r\nfunction loadStorageTheme() {\r\n    let storageTheme;\r\n    themes.forEach(theme => {\r\n        if (theme.classList.contains(JSON.parse(localStorage.getItem('themeClass')))) storageTheme = theme;\r\n    })\r\n    if (!JSON.parse(localStorage.getItem('customThemeActive'))) executeChangeTheme(storageTheme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, false);\r\n    else customThemeChanger(JSON.parse(localStorage.getItem('bodyBackgroundColor')), JSON.parse(localStorage.getItem('iconsColor'), false));\r\n}\r\n\r\nfunction colorPicker() {\r\n    $('#color-picker-body').spectrum({\r\n        color: `#${rgbHex(JSON.parse(localStorage.getItem('bodyBackgroundColor')))}`,\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    $('#color-picker-content').spectrum({\r\n        color: `#${rgbHex(JSON.parse(localStorage.getItem('iconsColor')))}`,\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    customValueBody = $('#color-picker-body').spectrum('get');\r\n    customValueContent = $('#color-picker-content').spectrum('get');\r\n    $('#color-picker-body').on('change.spectrum', () => {\r\n        customValueBody = $('#color-picker-body').spectrum('get');\r\n    });\r\n    $('#color-picker-content').on('change.spectrum', () => {\r\n        customValueContent = $('#color-picker-content').spectrum('get');\r\n    });\r\n    applyCustomTheme.addEventListener('click', () => {\r\n        if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartThemeCustom(acceptRestart, declineRestart, themeWarningBackground, customValueBody, customValueContent);\r\n        else {\r\n            customThemeActive = true;\r\n            localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n            customThemeChanger(customValueBody, customValueContent, false);\r\n            if (breakSelected) titleBorderColor(true);\r\n        }\r\n    });\r\n}\r\n\r\nfunction customThemeChanger(bodyValue, contentValue, isTimerStarted) {\r\n    body.setAttribute('style', `background-color: ${bodyValue}; color: ${contentValue};`)\r\n    themeColor.forEach(element => {\r\n        element.setAttribute('style', `color: ${contentValue};`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.setAttribute('style', `border-color: ${contentValue}`);\r\n    });\r\n    if (breakSelected) breakTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    else sessionTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    themeTitle.setAttribute('style', `color: ${contentValue}`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = contentValue;\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.style.backgroundColor = contentValue;\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n    bodyBackgroundColor = window.getComputedStyle(document.querySelector('body')).getPropertyValue('background-color');\r\n    iconsColor = window.getComputedStyle(sessionTitle).getPropertyValue('color');\r\n    localStorage.setItem('bodyBackgroundColor', JSON.stringify(bodyBackgroundColor));\r\n    localStorage.setItem('iconsColor', JSON.stringify(iconsColor));\r\n}\r\n\r\nfunction removeCustomTheme(fullRemove = false) {\r\n    if (fullRemove) {\r\n        customThemeActive = false;\r\n        localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n    }\r\n    body.style.backgroundColor = '';\r\n    body.style.color = '';\r\n    themeColor.forEach(element => {\r\n        element.style.color = '';\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.style.borderColor = '';\r\n    });\r\n    breakTitle.style.background = '';\r\n    themeActive.style.background = '';\r\n    themeActive.style.backgroundSize = '';\r\n    themeActive.style.backgroundPosition = '';\r\n    themeTitle.style.color = '';\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = '';\r\n        pomodoro.style.backgroundColor = '';\r\n    });\r\n}\r\n\r\nfunction timerRestartTheme(accept, decline, themeWarning, theme) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        stopTimerHard(stop, sessionSeconds);\r\n        executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, true);\r\n        if (JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n            removeCustomTheme(true);\r\n        }\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction timerRestartThemeCustom(accept, decline, themeWarning, bodyValue, contentValue) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        customThemeActive = true;\r\n        localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n        removeCustomTheme(false);\r\n        stopTimerHard(stop, sessionSeconds);\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        customThemeChanger(bodyValue, contentValue, true);\r\n        titleBorderColor(true)\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction titleBorderColor(customThemeReset) {\r\n    if (!JSON.parse(localStorage.getItem('customThemeActive')) && !customThemeReset) {\r\n        let currentActive = sessionTitle.classList[sessionTitle.classList.length - 1];\r\n        breakTitle.classList = '';\r\n        breakTitle.classList.add(currentActive);\r\n        sessionTitle.classList = '';\r\n    } else if (customThemeReset) {\r\n        if (breakSelected) customThemeSwitch = false;\r\n        else customThemeSwitch = true;\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n\r\n    }\r\n}\r\n\r\nfunction changeTheme(themes) {\r\n    themes.forEach(theme => {\r\n        theme.addEventListener('click', function () {\r\n            if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartTheme(acceptRestart, declineRestart, themeWarningBackground, theme);\r\n            else {\r\n                if (JSON.parse(localStorage.getItem('customThemeActive'))) removeCustomTheme(true);\r\n                setTimeout(() => {\r\n                    if (breakSelected) titleBorderColor(false);\r\n                }, 0);\r\n                executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, false);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, isTimerStarted) {\r\n    body.classList = '';\r\n    body.classList.add(theme.classList[1]);\r\n    themeColor.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-color`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-border`);\r\n    });\r\n    themeActive.classList.remove(themeActive.classList[themeActive.classList.length - 1]);\r\n    themeActive.classList.add(`${theme.classList[1]}-active`);\r\n    themeActive = document.querySelector(`.${theme.classList[1]}-active`);\r\n    themeTitle.classList.remove(themeTitle.classList[themeTitle.classList.length - 1]);\r\n    themeTitle.classList.add(`${theme.classList[1]}-title`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.classList = '';\r\n        pomodoro.classList.add('pomodoro', `${theme.classList[1]}-border`);\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.classList.add('pomodoro', `${theme.classList[1]}-background`);\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n    localStorage.setItem('themeClass', JSON.stringify(document.querySelector('body').classList[0]));\r\n}\r\n\r\nfunction mainThemes() {\r\n    setStorageTheme();\r\n    loadStorageTheme();\r\n    changeTheme(themes);\r\n    colorPicker();\r\n}\r\n\r\nwindow.onload = mainThemes();})();"]}