{"version":3,"sources":["main.js","modal.js","responsive.js","themes.js"],"names":["countdown","timer","document","querySelector","timerStarted","play","pause","stop","reset","arrow","querySelectorAll","pomodoros","pomodorosCount","sessionTitle","increaseSession","sessionMinutes","decreaseSession","breakTitle","increaseBreak","breakMinutes","decreaseBreak","longBreak","longBreakPomodoro","longBreakInput","confirmTimeChangeLongBreak","timeInputLabelLongBreak","sessionSeconds","parseInt","textContent","autoStart","notifications","tabTitleTime","breakLongBreakLink","preferences","breakSelected","sessionTimeSelected","breakTimeSelected","longBreakTimeSelected","customThemeSwitch","confirmTimeChanges","sessionInput","confirmTimeChangeSession","breakInput","confirmTimeChangeBreak","timeInputs","timeInputLabels","notificationIcon","notificationTime","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","length","setStorageTime","localStorage","JSON","stringify","checkTimerFont","seconds","matchMedia","matches","style","fontSize","timerDisplay","breakTime","arguments","undefined","runTimerDisplay","clearInterval","disabled","i","id","checked","classList","add","contains","pointerEvents","getAttribute","forEach","then","Date","now","displayTimeLeft","setInterval","secondsLeft","Math","round","currentActive","titleBorderChange","notificationLongBreakOver","Notification","icon","body","setTimeout","close","bind","console","error","pomodoro","parse","getItem","setAttribute","concat","customValueBody","customValueIcons","remove","split","min","notificationLongBreakStart","notificationBreakStart","notificationBreakOver","notificationTimeOver","addEventListener","keyCode","repeat","pauseTimer","noTitleToggle","background","backgroundSize","backgroundPosition","toggle","timerSession","increase","minutes","decrease","session","runIncrease","isThroughKey","minutesTextContent","runDecrease","breakMinutesContent","altKey","display","title","floor","remainderSeconds","hours","toString","padStart","clickRun","runPauseTimer","breakSessionTitleReset","enableTimeInputs","stopTimerHard","resetPomodoros","backgroundColor","pomodoroBorder","breakLongBreakLinkCheck","returnRunBreakLongBreakLinkCheck","runBreakLongBreakLinkCheck","link","onload","preference","clearStorage","storageWarningBackground","acceptClear","declineClear","clear","location","reload","target","logStorage","storageLogWrapper","closeBtnLog","storageLogContent","hideLogModal","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","key","value","localStorageProperty","createElement","marginBottom","appendChild","sessionTime","runSessionSelect","runBreakSelect","runLongBreakSelect","sessionBreakSelect","runStopTimer","stopTimer","runResetTimer","resetTimer","requestPermission","toggleNotifications","checkIsDigit","preventDefault","runConfirmTimeChange","input","isSession","isLongBreak","inputValue","changeTimeInput","modalSettings","modalBtnSettings","closeBtnSettings","settings","modalAbout","modalBtnAbout","closeBtnAbout","about","modalHowToUse","closeBtnHowToUse","howToUse","modalWhatIs","closeBtnWhatIs","whatIs","hideModalSettings","modal","opacity","visibility","transform","overflow","hideModalAbout","modalDisplayGeneric","modalBtn","closeBtn","hideModalGeneric","blur","modalDisplaySettings","modalDisplayAbout","timerFontMediaQuery","timerFontListener","addListener","storageTheme","themes","themeClass","themeWarningBackground","themeColor","themeBorder","themeActive","themeTitle","acceptRestart","declineRestart","bodyBackgroundColor","rgbHex","getComputedStyle","getPropertyValue","iconsColor","applyCustomTheme","customThemeActive","themeColorTab","colorPicker","$","spectrum","color","showInput","showInitial","showAlpha","preferredFormat","on","accept","decline","themeWarning","bodyValue","contentValue","removeCustomTheme","customThemeChanger","titleBorderColor","isTimerStarted","element","borderColor","customThemeReset","changeTheme","theme","executeChangeTheme","timerRestartTheme"],"mappings":"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","file":"bundle.min.js","sourcesContent":["// Timer\r\nlet countdown;\r\nconst timer = document.querySelector('#timer');\r\nlet timerStarted = false;\r\n// Timer controls\r\nconst play = document.querySelector('#play');\r\nconst pause = document.querySelector('#pause');\r\nconst stop = document.querySelector('#stop');\r\nconst reset = document.querySelector('#reset');\r\nconst arrow = document.querySelectorAll('.arrow');\r\n// Pomodoros\r\nconst pomodoros = document.querySelectorAll('.pomodoro');\r\nlet pomodorosCount = 0;\r\n// Session\r\nconst sessionTitle = document.querySelector('.session-title h3');\r\nconst increaseSession = document.querySelector('#increase-session');\r\nconst sessionMinutes = document.querySelector('#session-minutes');\r\nconst decreaseSession = document.querySelector('#decrease-session');\r\n// Break\r\nconst breakTitle = document.querySelector('.break-title h3');\r\nconst increaseBreak = document.querySelector('#increase-break');\r\nconst breakMinutes = document.querySelector('#break-minutes');\r\nconst decreaseBreak = document.querySelector('#decrease-break');\r\n// Long break\r\nlet longBreak = 15;\r\nconst longBreakPomodoro = document.querySelector('.pomodoro:last-of-type');\r\nconst longBreakInput = document.querySelector('#long-break-input');\r\nconst confirmTimeChangeLongBreak = document.querySelector('.confirm-time-change-long-break');\r\nconst timeInputLabelLongBreak = document.querySelector('.time-input-wrapper:last-child>label');\r\n// Current seconds\r\nlet sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n// Preferences\r\nconst autoStart = document.querySelector('#auto-start');\r\nconst notifications = document.querySelector('#notifications');\r\nconst tabTitleTime = document.querySelector('#tab-title-time');\r\nconst breakLongBreakLink = document.querySelector('#break-long-break-link');\r\nconst preferences = document.querySelectorAll('.preference');\r\n// Selections\r\nlet breakSelected = false;\r\nlet sessionTimeSelected = true;\r\nlet breakTimeSelected = false;\r\nlet longBreakTimeSelected = false;\r\nlet customThemeSwitch = true;\r\n// Time inputs\r\nconst confirmTimeChanges = document.querySelectorAll('.confirm-time-change');\r\nconst sessionInput = document.querySelector('#session-input');\r\nconst confirmTimeChangeSession = document.querySelector('.confirm-time-change-session');\r\nconst breakInput = document.querySelector('#break-input');\r\nconst confirmTimeChangeBreak = document.querySelector('.confirm-time-change-break');\r\nconst timeInputs = document.querySelectorAll('.time-input');\r\nconst timeInputLabels = document.querySelectorAll('.time-input-wrapper>label');\r\n// Notifications\r\nconst notificationIcon = 'favicon/android-chrome-192x192.png';\r\nconst notificationTime = 5000;\r\n\r\n// TODO: Add statistics showing pomodoro completions and progress\r\n// TODO: Use map for logging localStorage to keep consistency\r\n// TODO: Add a to-do list under the timer. It should feature the ability to add, delete, tag, and be expandable with more info (a description)\r\n// FIXME: Delay in time for tab title. Use web workers to solve this\r\n// FIXME: Notifications don't pop up on mobile\r\n// FIXME: Slight nudge to timer when on mobile times of >=60 minutes are selected\r\n\r\n/**\r\n * https://mzl.la/2zJOaCZ\r\n * \r\n * @param {string} type \r\n * @return {boolean}\r\n */\r\nfunction storageAvailable(type) {\r\n    let storage;\r\n    try {\r\n        storage = window[type];\r\n        const x = '__storage_test__';\r\n        storage.setItem(x, x);\r\n        storage.removeItem(x);\r\n        return true;\r\n    } catch (e) {\r\n        return e instanceof DOMException && (\r\n                // everything except Firefox\r\n                e.code === 22 ||\r\n                // Firefox\r\n                e.code === 1014 ||\r\n                // test name field too, because code might not be present\r\n                // everything except Firefox\r\n                e.name === 'QuotaExceededError' ||\r\n                // Firefox\r\n                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n            // acknowledge QuotaExceededError only if there's something already stored\r\n            (storage && storage.length !== 0);\r\n    }\r\n}\r\n\r\nfunction setStorage() {\r\n    if (window.localStorage.length === 0 && storageAvailable('localStorage')) {\r\n        // Time\r\n        localStorage.setItem('session', JSON.stringify(sessionMinutes.textContent));\r\n        localStorage.setItem('break', JSON.stringify(breakMinutes.textContent));\r\n        localStorage.setItem('longBreak', JSON.stringify(longBreak));\r\n        // Preferences\r\n        localStorage.setItem('autoStart', JSON.stringify(true));\r\n        autoStart.checked = true;\r\n        localStorage.setItem('notifications', JSON.stringify(false));\r\n        notifications.checked = false;\r\n        localStorage.setItem('tabTitleTime', JSON.stringify(true));\r\n        tabTitleTime.checked = true;\r\n        localStorage.setItem('breakLongBreakLink', JSON.stringify(true));\r\n        breakLongBreakLink.checked = true;\r\n    }\r\n}\r\n\r\nfunction setStorageTime() {\r\n    localStorage.setItem('session', JSON.stringify(sessionMinutes.textContent));\r\n    localStorage.setItem('break', JSON.stringify(breakMinutes.textContent));\r\n    localStorage.setItem('longBreak', JSON.stringify(longBreak));\r\n}\r\n\r\nfunction setStoragePreferences() {\r\n    preferences.forEach(preference => {\r\n        preference.addEventListener('change', () => {\r\n            localStorage.setItem(preference.getAttribute('data-preference'), JSON.stringify(preference.checked));\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Checks seconds to see if the timer font needs adjusting. Adjusts it if so.\r\n * \r\n * @param {number} seconds\r\n * @param {DOM element} timer\r\n * @return {void}\r\n */\r\nfunction checkTimerFont(seconds, timer) {\r\n    if (seconds === 360000 && window.matchMedia('(max-width: 420px)').matches) {\r\n        timer.style.fontSize = '4.688rem';\r\n    } else if (seconds >= 3600 && window.matchMedia('(max-width: 420px)').matches) {\r\n        timer.style.fontSize = '5rem';\r\n    } else {\r\n        timer.style.fontSize = '5.625rem';\r\n    }\r\n}\r\n\r\nfunction loadStorage() {\r\n    // Time\r\n    sessionMinutes.textContent = JSON.parse(localStorage.getItem('session'));\r\n    sessionSeconds = +sessionMinutes.textContent * 60;\r\n    displayTimeLeft(sessionSeconds, false);\r\n    breakMinutes.textContent = JSON.parse(localStorage.getItem('break'));\r\n    longBreak = JSON.parse(localStorage.getItem('longBreak'));\r\n    // Preferences\r\n    autoStart.checked = JSON.parse(localStorage.getItem('autoStart'));\r\n    notifications.checked = JSON.parse(localStorage.getItem('notifications'));\r\n    tabTitleTime.checked = JSON.parse(localStorage.getItem('tabTitleTime'));\r\n    breakLongBreakLink.checked = JSON.parse(localStorage.getItem('breakLongBreakLink'));\r\n    breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, true)(breakLongBreakLink);\r\n    // Timer font\r\n    checkTimerFont(sessionSeconds, timer);\r\n}\r\n\r\nfunction clearStorage() {\r\n    const clearStorage = document.querySelector('#clear-storage');\r\n    const storageWarningBackground = document.querySelector('.storage-warning-background');\r\n    const acceptClear = document.querySelector('#accept-clear');\r\n    const declineClear = document.querySelector('#decline-clear');\r\n\r\n    clearStorage.addEventListener('click', () => {\r\n        storageWarningBackground.style.display = 'block';\r\n        acceptClear.addEventListener('click', () => {\r\n            localStorage.clear();\r\n            storageWarningBackground.style.display = 'none';\r\n            location.reload(true);\r\n        });\r\n        declineClear.addEventListener('click', () => {\r\n            storageWarningBackground.style.display = 'none';\r\n        });\r\n        window.addEventListener('click', function (e) {\r\n            if (e.target === storageWarningBackground) storageWarningBackground.style.display = 'none';\r\n        });\r\n    });\r\n}\r\n\r\nfunction logStorage() {\r\n    const logStorage = document.querySelector('#log-storage');\r\n    const storageLogWrapper = document.querySelector('.storage-log-wrapper');\r\n    const closeBtnLog = document.querySelector('#close-btn-log');\r\n    const storageLogContent = document.querySelector('#storage-log-content');\r\n\r\n    logStorage.addEventListener('click', () => {\r\n        storageLogWrapper.style.display = 'block';\r\n        for (let [key, value] of Object.entries(localStorage)) {\r\n            let localStorageProperty = document.createElement('div');\r\n            localStorageProperty.textContent = `${key}: ${value}`;\r\n            localStorageProperty.style.marginBottom = '10px';\r\n            storageLogContent.appendChild(localStorageProperty);\r\n        }\r\n        document.querySelector('#storage-log-content>div:last-child').style.marginBottom = '0';\r\n    });\r\n\r\n    function hideLogModal() {\r\n        storageLogWrapper.style.display = 'none';\r\n        storageLogContent.textContent = '';\r\n    }\r\n\r\n    closeBtnLog.addEventListener('click', () => {\r\n        hideLogModal();\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === storageLogWrapper) {\r\n            hideLogModal();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Runs core logic for displaying and counting down the timer.\r\n * \r\n * @param {number} seconds\r\n * @param {boolean} breakTime\r\n * @param {boolean} returnRunTimerDisplay\r\n * @return {function || void}\r\n */\r\nfunction timerDisplay(seconds, breakTime = true, returnRunTimerDisplay) {\r\n    function runTimerDisplay() {\r\n        if (!timerStarted) timerStarted = true;\r\n        if (breakSelected && pomodorosCount !== 4 && !timerStarted) sessionSeconds = breakMinutes.textContent * 60;\r\n        seconds = sessionSeconds;\r\n        clearInterval(countdown);\r\n        pause.disabled = false;\r\n        stop.disabled = false;\r\n        // Disable time inputs and buttons while timer is running\r\n        autoStart.disabled = true;\r\n        breakLongBreakLink.disabled = true;\r\n        play.disabled = true;\r\n        for (let i = 0; i < timeInputs.length; i++) {\r\n            if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else {\r\n                timeInputs[i].disabled = true;\r\n                timeInputs[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n            }\r\n            if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n            else {\r\n                confirmTimeChanges[i].style.pointerEvents = 'none';\r\n                confirmTimeChanges[i].classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            }\r\n            if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else timeInputLabels[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = true;\r\n        });\r\n        const now = Date.now();\r\n        const then = now + seconds * 1000;\r\n        displayTimeLeft(seconds);\r\n\r\n        countdown = setInterval(() => {\r\n            const secondsLeft = Math.round((then - Date.now()) / 1000);\r\n            // const secondsLeft = Math.round((then - then) / 1000);\r\n            sessionSeconds -= 1;\r\n\r\n            if (secondsLeft < 1) {\r\n                clearInterval(countdown);\r\n                if (autoStart.checked) {\r\n                    currentActive = titleBorderChange(false);\r\n                    if (pomodorosCount === 4) {\r\n                        try {\r\n                            const notificationLongBreakOver = new Notification('Long break over', {\r\n                                icon: notificationIcon,\r\n                                body: 'Session started'\r\n                            });\r\n                            setTimeout(notificationLongBreakOver.close.bind(notificationLongBreakOver), notificationTime);\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                        }\r\n                        breakSelected = false;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        longBreakTimeSelected = false;\r\n                        pomodorosCount = 0;\r\n                        // Reset pomodoros to correct colors\r\n                        pomodoros.forEach((pomodoro) => {\r\n                            if (!JSON.parse(localStorage.getItem('customThemeActive'))) pomodoro.classList.remove(`${currentActive.split('-')[0]}-background`);\r\n                            else pomodoro.setAttribute('style', `background-color: ${customValueBody}; border-color: ${customValueIcons};`);\r\n                        });\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    } else if (breakTime && !breakSelected) {\r\n                        // Session finishes, start break or long break\r\n                        breakSelected = true;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        pomodorosCount++;\r\n                        // Fill in next pomodoro\r\n                        if (!JSON.parse(localStorage.getItem('customThemeActive'))) pomodoros[pomodorosCount - 1].classList.add(`${currentActive.split('-')[0]}-background`);\r\n                        else pomodoros[pomodorosCount - 1].setAttribute('style', `background-color: ${customValueIcons}; border-color: ${customValueIcons};`);\r\n                        if (pomodorosCount === 4) {\r\n                            sessionSeconds = Math.min(longBreak * 60, 6000);\r\n                            try {\r\n                                const notificationLongBreakStart = new Notification('Session over', {\r\n                                    icon: notificationIcon,\r\n                                    body: 'Long break started'\r\n                                });\r\n                                setTimeout(notificationLongBreakStart.close.bind(notificationLongBreakStart), notificationTime);\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                            }\r\n                            longBreakTimeSelected = true;\r\n                        } else {\r\n                            sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n                            try {\r\n                                const notificationBreakStart = new Notification('Session over', {\r\n                                    icon: notificationIcon,\r\n                                    body: 'Break started'\r\n                                });\r\n                                setTimeout(notificationBreakStart.close.bind(notificationBreakStart), notificationTime);\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                            }\r\n                        }\r\n                        timerDisplay(sessionSeconds, false, true)();\r\n                        play.disabled = false;\r\n                    } else {\r\n                        try {\r\n                            const notificationBreakOver = new Notification('Break over', {\r\n                                icon: notificationIcon,\r\n                                body: 'Session started'\r\n                            });\r\n                            setTimeout(notificationBreakOver.close.bind(notificationBreakOver), notificationTime);\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                        }\r\n                        breakSelected = false;\r\n                        breakTimeSelected = false;\r\n                        sessionTimeSelected = true;\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    }\r\n                } else {\r\n                    const notificationTimeOver = new Notification('Time over', {\r\n                        icon: notificationIcon,\r\n                    });\r\n                    setTimeout(notificationTimeOver.close.bind(notificationTimeOver), notificationTime);\r\n                }\r\n            }\r\n            displayTimeLeft(secondsLeft);\r\n        }, 1000);\r\n    }\r\n    if (returnRunTimerDisplay) return runTimerDisplay;\r\n    document.addEventListener('keydown', e => {\r\n        if (e.keyCode === 32) {\r\n            if (e.repeat) return;\r\n            if (pause.disabled) runTimerDisplay();\r\n            else pauseTimer(pause, false)();\r\n        }\r\n    });\r\n    play.addEventListener('click', runTimerDisplay);\r\n}\r\n\r\n/**\r\n * Allows selection of a session, break, or long break.\r\n * Displays correct time and selection.\r\n * \r\n * @param {DOM element} sessionTime\r\n * @param {DOM element} breakTime\r\n * @param {DOM element} longBreakPomodoro\r\n * @return {void}\r\n */\r\nfunction sessionBreakSelect(sessionTime, breakTime, longBreakPomodoro) {\r\n    function runSessionSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, true, true);\r\n        if (sessionTimeSelected) null;\r\n        else if (breakTimeSelected) {\r\n            breakTimeSelected = false;\r\n            sessionTimeSelected = true;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runLongBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = true;\r\n        sessionSeconds = parseInt(longBreak) * 60;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        currentActive = titleBorderChange(true);\r\n        pomodorosCount = 4;\r\n        // Fill in all four pomodoros\r\n        pomodoros.forEach(pomodoro => {\r\n            if (!JSON.parse(localStorage.getItem('customThemeActive'))) pomodoro.classList.add(`${currentActive.split('-')[0]}-background`);\r\n            else pomodoro.setAttribute('style', `background-color: ${customValueIcons}; border-color: ${customValueIcons};`);\r\n        });\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 80) {\r\n            if (e.repeat) return\r\n            runSessionSelect();\r\n        }\r\n    });\r\n    sessionTime.addEventListener('click', runSessionSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 66) {\r\n            if (e.repeat) return\r\n            runBreakSelect();\r\n        }\r\n    });\r\n    breakTime.addEventListener('click', runBreakSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 76) {\r\n            if (e.repeat) return;\r\n            runLongBreakSelect();\r\n        }\r\n    });\r\n    longBreakPomodoro.addEventListener('click', runLongBreakSelect);\r\n}\r\n\r\n/**\r\n * Changes border under session or select.\r\n * Adjusts colors and classes as needed.\r\n * \r\n * @param {boolean} noTitleToggle\r\n * @return {DOM class || void}\r\n */\r\nfunction titleBorderChange(noTitleToggle) {\r\n    let currentActive;\r\n    if (!JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n        sessionTitle.classList.length >= 1 ?\r\n            currentActive = sessionTitle.classList[sessionTitle.classList.length - 1] :\r\n            currentActive = breakTitle.classList[breakTitle.classList.length - 1];\r\n        if (noTitleToggle) return currentActive;\r\n        breakTitle.classList.toggle(currentActive);\r\n        sessionTitle.classList.toggle(currentActive);\r\n    } else if (noTitleToggle) {\r\n        return;\r\n    } else {\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n        if (customThemeSwitch) {\r\n            customThemeSwitch = false;\r\n            sessionTitle.style.background = '';\r\n            sessionTitle.style.backgroundSize = '';\r\n            sessionTitle.style.backgroundPosition = '';\r\n            breakTitle.style.background = `linear-gradient(to right, ${customValueIcons}, ${customValueIcons}) no-repeat`;\r\n            breakTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            breakTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        } else {\r\n            customThemeSwitch = true;\r\n            breakTitle.style.background = '';\r\n            breakTitle.style.backgroundSize = '';\r\n            breakTitle.style.backgroundPosition = '';\r\n            sessionTitle.style.background = `linear-gradient(to right, ${customValueIcons}, ${customValueIcons}) no-repeat`;\r\n            sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        }\r\n    }\r\n    return currentActive;\r\n}\r\n\r\n/**\r\n * Increase or decrease time relative to the desired time option.\r\n * \r\n * @param {DOM element} increase\r\n * @param {DOM element} minutes\r\n * @param {DOM element} decrease\r\n * @param {boolean} session\r\n * @return {void}\r\n */\r\nfunction timerSession(increase, minutes, decrease, session = true) {\r\n    function runIncrease(isThroughKey = false) {\r\n        const minutesTextContent = parseInt(minutes.textContent);\r\n        if ((parseInt(minutes.textContent) >= 6000 && !longBreakTimeSelected) ||\r\n            (longBreak >= 6000 && longBreakTimeSelected && !session && minutesTextContent >= 6000) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 6000 && !session && minutesTextContent >= 6000)) {\r\n            return;\r\n        } else {\r\n            if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n                sessionSeconds += 60;\r\n                longBreak += 1;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else minutes.textContent = parseInt(minutes.textContent) + 1;\r\n            if (session) {\r\n                if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!breakSelected && !longBreakTimeSelected) sessionSeconds += 60;\r\n            } else if (breakSelected) {\r\n                if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && minutesTextContent < 2000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n                else if (longBreakTimeSelected) null;\r\n                else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!longBreakTimeSelected) sessionSeconds += 60;\r\n                else if (breakLongBreakLink.checked && minutesTextContent >= 2000) null;\r\n                else if (breakLongBreakLink.checked) sessionSeconds += 60 * 3;\r\n            }\r\n        }\r\n        if (breakLongBreakLink.checked && longBreak !== 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    increase.addEventListener('click', () => {\r\n        runIncrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 38 && !timerStarted) {\r\n            runIncrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n\r\n    function runDecrease(isThroughKey = false) {\r\n        if ((parseInt(minutes.textContent) <= 1 && !longBreakTimeSelected) ||\r\n            (longBreak <= 1 && longBreakTimeSelected && !session) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 3 && !session)) {\r\n            return;\r\n        }\r\n\r\n        const breakMinutesContent = parseInt(breakMinutes.textContent) * 3;\r\n\r\n        if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n            sessionSeconds -= 60;\r\n            longBreak -= 1;\r\n            displayTimeLeft(sessionSeconds, false);\r\n        } else minutes.textContent = parseInt(minutes.textContent) - 1;\r\n        if (session) {\r\n            if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!breakSelected && !longBreakTimeSelected) sessionSeconds -= 60;\r\n        } else if (breakSelected) {\r\n            if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && breakMinutesContent <= 6000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n            else if (longBreakTimeSelected) null;\r\n            else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!longBreakTimeSelected) sessionSeconds -= 60;\r\n            else if (breakLongBreakLink.checked && parseInt(breakMinutes.textContent) >= 2000) null;\r\n            else if (breakLongBreakLink.checked) sessionSeconds -= 60 * 3;\r\n        }\r\n        if (breakLongBreakLink.checked && breakMinutesContent <= 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    decrease.addEventListener('click', () => {\r\n        runDecrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 40 && !timerStarted) {\r\n            runDecrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {number} seconds\r\n * @param {boolean} title\r\n * @return {void}\r\n */\r\nfunction displayTimeLeft(seconds, title = true) {\r\n    let minutes = Math.floor(seconds / 60);\r\n    const remainderSeconds = seconds % 60;\r\n    let display;\r\n    if (minutes >= 60) {\r\n        const hours = Math.floor(minutes / 60);\r\n        minutes %= 60;\r\n        display = `${hours < 10 ? hours.toString().padStart(2, 0) : hours}:${\r\n            minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    } else {\r\n        display = `${minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    }\r\n    timer.textContent = display;\r\n    if (!title || !tabTitleTime.checked) return;\r\n    else document.title = `(${display}) Pomodoro`;\r\n}\r\n\r\n/**\r\n * @param {DOM element} pause\r\n * @param {boolean} clickRun\r\n * @return {function || void}\r\n */\r\nfunction pauseTimer(pause, clickRun) {\r\n    function runPauseTimer() {\r\n        clearInterval(countdown);\r\n        // Resume timer for session or break\r\n        sessionTitle.classList >= 1 ? timerDisplay(0, true, true) : timerDisplay(0, false, true);\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n    }\r\n\r\n    if (!clickRun) return runPauseTimer;\r\n    else {\r\n        pause.disabled = true;\r\n        pause.addEventListener('click', runPauseTimer);\r\n    }\r\n}\r\n\r\n/**\r\n * On timer reset, move bottom border indicator to session.\r\n * \r\n * @return {void}\r\n */\r\nfunction breakSessionTitleReset() {\r\n    if (breakTitle.classList.length >= 1) {\r\n        sessionTitle.classList.add(breakTitle.classList[breakTitle.classList.length - 1]);\r\n        breakTitle.classList = '';\r\n    } else if (JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n        sessionTitle.style.background = `linear-gradient(to right, ${customValueIcons}, ${customValueIcons}) no-repeat`;\r\n        sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n        sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        breakTitle.style.background = '';\r\n        customThemeSwitch = true;\r\n    }\r\n}\r\n\r\n/**\r\n * @return {void}\r\n */\r\nfunction enableTimeInputs() {\r\n    for (let i = 0; i < timeInputs.length; i++) {\r\n        if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else {\r\n            timeInputs[i].disabled = false;\r\n            timeInputs[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n        else {\r\n            confirmTimeChanges[i].style.pointerEvents = 'auto';\r\n            confirmTimeChanges[i].classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n        }\r\n        if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else timeInputLabels[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n    }\r\n}\r\n\r\n/**\r\n * @param {DOM element} stop\r\n * @param {number} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimer(stop, seconds) {\r\n    stop.disabled = true;\r\n\r\n    function runStopTimer() {\r\n        if (breakSelected && pomodorosCount !== 4) seconds = parseInt(breakMinutes.textContent) * 60;\r\n        else if (pomodorosCount === 4) seconds = longBreak * 60;\r\n        else seconds = parseInt(sessionMinutes.textContent) * 60;\r\n        if (!(pomodorosCount >= 1) || longBreakTimeSelected) timerStarted = false;\r\n        sessionSeconds = seconds;\r\n        clearInterval(countdown);\r\n        displayTimeLeft(seconds);\r\n        stop.disabled = true;\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        enableTimeInputs();\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        document.title = 'Pomodoro';\r\n        if (breakSelected) timerDisplay(seconds, false, true);\r\n        else timerDisplay(seconds, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 83) {\r\n            if (e.repeat) return;\r\n            runStopTimer();\r\n        }\r\n    });\r\n    stop.addEventListener('click', runStopTimer);\r\n}\r\n\r\n/**\r\n * Stops timer and resets pomodoros.\r\n * \r\n * @param {DOM element} stop\r\n * @param {*} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimerHard(stop, seconds) {\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    timerStarted = false;\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    sessionSeconds = seconds;\r\n    clearInterval(countdown);\r\n    displayTimeLeft(seconds);\r\n    breakSessionTitleReset();\r\n    resetPomodoros(pomodoros);\r\n    pomodorosCount = 0;\r\n    breakSelected = false;\r\n    sessionTimeSelected = true;\r\n    breakTimeSelected = false;\r\n    longBreakTimeSelected = false;\r\n    stop.disabled = true;\r\n    pause.disabled = true;\r\n    play.disabled = false;\r\n    autoStart.disabled = false;\r\n    breakLongBreakLink.disabled = false;\r\n    enableTimeInputs();\r\n    arrow.forEach(arrow => {\r\n        arrow.disabled = false;\r\n    });\r\n    document.title = 'Pomodoro';\r\n    timerDisplay(seconds, true, true);\r\n    checkTimerFont(sessionSeconds, timer);\r\n}\r\n\r\n/**\r\n * @param {DOM elements} pomodoros\r\n * @return {void}\r\n */\r\nfunction resetPomodoros(pomodoros) {\r\n    pomodoros.forEach((pomodoro) => {\r\n        if (!JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n            const pomodoroBorder = pomodoro.classList[1];\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro', pomodoroBorder);\r\n        } else {\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro');\r\n            pomodoro.style.backgroundColor = '';\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {DOM element} reset\r\n * @return {void}\r\n */\r\nfunction resetTimer(reset) {\r\n    function runResetTimer() {\r\n        timerStarted = false;\r\n        clearInterval(countdown);\r\n        timer.textContent = '25:00';\r\n        sessionMinutes.textContent = '25';\r\n        breakSessionTitleReset();\r\n        breakSelected = false;\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        longBreakTimeSelected = false;\r\n        enableTimeInputs();\r\n        resetPomodoros(pomodoros);\r\n        pomodorosCount = 0;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        breakMinutes.textContent = '5';\r\n        longBreak = 15;\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        play.disabled = false;\r\n        pause.disabled = true;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        document.title = 'Pomodoro';\r\n        timerDisplay(parseInt(timer.textContent.split(':')[0]) * 60, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 82) {\r\n            if (e.repeat) return;\r\n            runResetTimer();\r\n        }\r\n    });\r\n    reset.addEventListener('click', runResetTimer);\r\n}\r\n\r\n/**\r\n * @param {DOM element} notifications\r\n * @return {void}\r\n */\r\nfunction toggleNotifications(notifications) {\r\n    notifications.addEventListener('change', e => {\r\n        if (e.target.checked) Notification.requestPermission().then();\r\n    });\r\n}\r\n\r\n/**\r\n * Change the time of a time option through input.\r\n * \r\n * @param {DOM element} confirmTimeChangeSession\r\n * @param {DOM element} sessionInput\r\n * @param {DOM element} confirmTimeChangeBreak\r\n * @param {DOM element} breakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} longBreakInput\r\n * @return {void}\r\n */\r\nfunction changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput) {\r\n    function checkIsDigit(e) {\r\n        if (e.keyCode === 189 ||\r\n            e.keyCode === 187 ||\r\n            e.keyCode === 69 ||\r\n            e.keyCode === 190) e.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Check which time option is currently selected.\r\n     * Update time option text value, timer display, and session seconds accordingly.\r\n     * \r\n     * @param {DOM element} input\r\n     * @param {DOM element} minutes\r\n     * @param {boolean} isSession\r\n     * @param {boolean} isLongBreak\r\n     * @return {void}\r\n     */\r\n    function runConfirmTimeChange(input, minutes, isSession, isLongBreak) {\r\n        let inputValue = input.value;\r\n        if (inputValue > 6000) {\r\n            inputValue = 6000;\r\n            input.value = 6000;\r\n        } else if (inputValue < 1 || input.length === 0) {\r\n            inputValue = 1;\r\n            input.value = 1;\r\n        }\r\n        if (isSession) {\r\n            if (!breakSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        } else if (!isSession) {\r\n            if (longBreakTimeSelected && breakLongBreakLink.checked) {\r\n                longBreak = Math.min(inputValue * 3, 6000);\r\n                sessionSeconds = longBreak * 60;\r\n                displayTimeLeft(sessionSeconds, false)\r\n            } else if (longBreakTimeSelected && !breakLongBreakLink.checked) {\r\n                if (isLongBreak) {\r\n                    sessionSeconds = inputValue * 60;\r\n                    displayTimeLeft(sessionSeconds, false);\r\n                }\r\n            } else if (breakSelected && !isLongBreak) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else if (isLongBreak && longBreakTimeSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        }\r\n        if (isLongBreak) longBreak = +inputValue;\r\n        if (breakLongBreakLink.checked && !isSession) longBreak = Math.min(inputValue * 3, 6000);\r\n        minutes.textContent = parseInt(inputValue, 10);\r\n    }\r\n\r\n    confirmTimeChangeSession.addEventListener('click', () => {\r\n        runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    sessionInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n\r\n    confirmTimeChangeBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    breakInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n    confirmTimeChangeLongBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    longBreakInput.addEventListener('keydown', e => {\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Adjust long break time in conjunction with break if link active.\r\n * \r\n * @param {DOM element} breakLongBreakLink\r\n * @param {DOM element} longBreakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} timeInputLabelLongBreak\r\n * @param {DOM element} breakMinutes\r\n * @return {void}\r\n */\r\nfunction breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, returnRunBreakLongBreakLinkCheck) {\r\n    function runBreakLongBreakLinkCheck(link) {\r\n        if (link.checked) {\r\n            longBreakInput.classList.add('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.add('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'none';\r\n            longBreakInput.disabled = true;\r\n            longBreak = Math.min(+breakMinutes.textContent * 3, 6000);\r\n            if (longBreakTimeSelected) {\r\n                displayTimeLeft(longBreak * 60, false);\r\n                sessionSeconds = longBreak * 60;\r\n            }\r\n        } else if (!link.checked) {\r\n            longBreakInput.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'auto';\r\n            longBreakInput.disabled = false;\r\n        }\r\n    }\r\n    breakLongBreakLink.addEventListener('change', () => {\r\n        runBreakLongBreakLinkCheck(breakLongBreakLink);\r\n    });\r\n    if (returnRunBreakLongBreakLinkCheck) return runBreakLongBreakLinkCheck;\r\n}\r\n\r\nfunction mainTimer() {\r\n    // Storage\r\n    setStorage();\r\n    setStoragePreferences();\r\n    loadStorage();\r\n    clearStorage();\r\n    logStorage();\r\n    // Timer\r\n    timerDisplay(sessionSeconds, true, false);\r\n    timerSession(increaseSession, sessionMinutes, decreaseSession, true);\r\n    timerSession(increaseBreak, breakMinutes, decreaseBreak, false);\r\n    // Time option select\r\n    sessionBreakSelect(sessionTitle, breakTitle, longBreakPomodoro);\r\n    // Controls\r\n    pauseTimer(pause, true);\r\n    stopTimer(stop, sessionSeconds);\r\n    resetTimer(reset);\r\n    // Preferences\r\n    toggleNotifications(notifications);\r\n    changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput);\r\n    breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, false);\r\n}\r\n\r\nwindow.onload = mainTimer();","// Settings\r\nconst modalSettings = document.querySelector('#simple-modal-settings');\r\nconst modalBtnSettings = document.querySelector('#modal-btn-settings');\r\nconst closeBtnSettings = document.querySelector('#close-btn-settings');\r\nconst settings = document.querySelector('.settings');\r\n// About\r\nconst modalAbout = document.querySelector('#simple-modal-about');\r\nconst modalBtnAbout = document.querySelector('#modal-btn-about');\r\nconst closeBtnAbout = document.querySelector('#close-btn-about');\r\nconst about = document.querySelector('.about');\r\n// How To Use\r\nconst modalHowToUse = document.querySelector('#modal-how-to-use');\r\nconst closeBtnHowToUse = document.querySelector('#close-btn-how-to-use');\r\nconst howToUse = document.querySelector('#how-to-use');\r\n// What is\r\nconst modalWhatIs = document.querySelector('#modal-what-is');\r\nconst closeBtnWhatIs = document.querySelector('#close-btn-what-is');\r\nconst whatIs = document.querySelector('#what-is');\r\n\r\nfunction modalDisplaySettings(modal, modalBtn, closeBtn, settings) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        settings.style.transform = 'rotate(90deg)';\r\n        body.style.overflow = 'hidden';\r\n        settings.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalSettings(modal, settings);\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === modal) {\r\n            hideModalSettings(modal, settings);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalSettings(modal, settings) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    settings.style.transform = 'rotate(0deg)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction modalDisplayAbout(modal, modalBtn, closeBtn, about) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        about.style.transform = 'scale(0.85)';\r\n        body.style.overflow = 'hidden';\r\n        about.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalAbout(modal);\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === modal) {\r\n            hideModalAbout(modal);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalAbout(modal) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    about.style.transform = 'scale(1)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\n/**\r\n * @param {DOM element} modal\r\n * @param {DOM element} modalBtn\r\n * @param {DOM element} closeBtn\r\n * @return {void}\r\n */\r\nfunction modalDisplayGeneric(modal, modalBtn, closeBtn) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        body.style.overflow = 'hidden';\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalGeneric(modal);\r\n    });\r\n    window.addEventListener('click', e => {\r\n        if (e.target === modal) hideModalGeneric(modal);\r\n    });\r\n}\r\n\r\n/**\r\n * @param {DOM element} modal\r\n * @return {void}\r\n */\r\nfunction hideModalGeneric(modal) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction mainModal() {\r\n    modalDisplaySettings(modalSettings, modalBtnSettings, closeBtnSettings, settings);\r\n    modalDisplayAbout(modalAbout, modalBtnAbout, closeBtnAbout, about);\r\n    modalDisplayGeneric(modalHowToUse, howToUse, closeBtnHowToUse);\r\n    modalDisplayGeneric(modalWhatIs, whatIs, closeBtnWhatIs);\r\n}\r\n\r\nwindow.onload = mainModal();","const timerFontMediaQuery = window.matchMedia('(max-width: 420px)');\r\n\r\n/**\r\n * Changes font size for small screens on large time quantities.\r\n * Prevents overflow.\r\n * \r\n * @param {media query} e \r\n * @return {void}\r\n */\r\nfunction timerFontListener(e) {\r\n    if (e.matches) {\r\n        if (sessionSeconds === 360000) timer.style.fontSize = '4.688rem';\r\n        else if (sessionSeconds >= 3600) timer.style.fontSize = '5rem';\r\n    } else timer.style.fontSize = '5.625rem';\r\n}\r\n\r\nfunction mediaQueryListener() {\r\n    timerFontMediaQuery.addListener(timerFontListener);\r\n    timerFontListener(timerFontMediaQuery);\r\n}\r\n\r\nwindow.onload = mediaQueryListener();","// Body\r\nconst body = document.querySelector('body');\r\n// Theme\r\nconst themes = document.querySelectorAll('.theme');\r\nlet themeClass = document.querySelector('body').classList[0];\r\nconst themeWarningBackground = document.querySelector('.theme-warning-background');\r\n// Theme color\r\nconst themeColor = document.querySelectorAll('.dark-color');\r\nconst themeBackground = document.querySelectorAll('.dark-background');\r\nconst themeBorder = document.querySelectorAll('.dark-border');\r\nlet themeActive = document.querySelector('.dark-active');\r\nconst themeTitle = document.querySelector('.dark-title');\r\n// Restart\r\nconst acceptRestart = document.querySelector('#accept-restart');\r\nconst declineRestart = document.querySelector('#decline-restart');\r\n// Custom theme\r\nlet customValueBody;\r\nlet customValueIcons;\r\nlet bodyBackgroundColor = `#${rgbHex(window.getComputedStyle(document.querySelector('body')).getPropertyValue('background-color'))}`;\r\nlet iconsColor = `#${rgbHex(window.getComputedStyle(sessionTitle).getPropertyValue('color'))}`;\r\nconst applyCustomTheme = document.querySelector('#apply-custom-theme');\r\nlet customThemeActive = false;\r\n// Tab\r\nconst themeColorTab = document.querySelector('meta[name=\"theme-color\"]');\r\n\r\n// TODO: Modal should also change color OR make it dark mode (not sure which one is better)\r\n// FIXME: User shouldn't be able to select two colors that are very similar, it'll make the icons invisible\r\n\r\nfunction setStorageTheme() {\r\n    if ((window.localStorage.length === 0 || !localStorage.getItem('themeClass')) &&\r\n        storageAvailable('localStorage')) {\r\n        // Theme\r\n        localStorage.setItem('themeClass', JSON.stringify(themeClass));\r\n        // Custom theme\r\n        localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n        localStorage.setItem('bodyBackgroundColor', JSON.stringify('#202020'));\r\n        localStorage.setItem('iconsColor', JSON.stringify('#E8E8E8'));\r\n        localStorage.setItem('customBodyBackgroundColor', JSON.stringify('#000080'));\r\n        localStorage.setItem('customIconsColor', JSON.stringify('#c8c8c8'));\r\n    }\r\n}\r\n\r\nfunction loadStorageTheme() {\r\n    let storageTheme;\r\n    themes.forEach(theme => {\r\n        if (theme.classList.contains(JSON.parse(localStorage.getItem('themeClass')))) storageTheme = theme;\r\n    })\r\n    if (!JSON.parse(localStorage.getItem('customThemeActive'))) executeChangeTheme(storageTheme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, false);\r\n    else {\r\n        customThemeChanger(JSON.parse(localStorage.getItem('customBodyBackgroundColor')), JSON.parse(localStorage.getItem('customIconsColor'), false));\r\n    }\r\n}\r\n\r\n/**\r\n * Sets color picking for Spectrum.\r\n * Calls and checks application of custom theme.\r\n * \r\n * @return {void}\r\n */\r\nfunction colorPicker() {\r\n    $('#color-picker-body').spectrum({\r\n        color: `${JSON.parse(localStorage.getItem('customBodyBackgroundColor'))}`,\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    $('#color-picker-content').spectrum({\r\n        color: `${JSON.parse(localStorage.getItem('customIconsColor'))}`,\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    customValueBody = $('#color-picker-body').spectrum('get');\r\n    customValueIcons = $('#color-picker-content').spectrum('get');\r\n    $('#color-picker-body').on('change.spectrum', () => {\r\n        customValueBody = $('#color-picker-body').spectrum('get');\r\n    });\r\n    $('#color-picker-content').on('change.spectrum', () => {\r\n        customValueIcons = $('#color-picker-content').spectrum('get');\r\n    });\r\n    applyCustomTheme.addEventListener('click', () => {\r\n        if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartThemeCustom(acceptRestart, declineRestart, themeWarningBackground, customValueBody, customValueIcons);\r\n        else {\r\n            customThemeActive = true;\r\n            localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n            customThemeChanger(customValueBody, customValueIcons, false);\r\n            if (breakSelected) titleBorderColor(true);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Changes the current theme into tone with the selected custom values.\r\n * \r\n * @param {string} bodyValue\r\n * @param {string} contentValue\r\n * @param {boolean} isTimerStarted\r\n * @return {void}\r\n */\r\nfunction customThemeChanger(bodyValue, contentValue, isTimerStarted) {\r\n    body.setAttribute('style', `background-color: ${bodyValue}; color: ${contentValue};`)\r\n    themeColor.forEach(element => {\r\n        element.setAttribute('style', `color: ${contentValue};`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.setAttribute('style', `border-color: ${contentValue}`);\r\n    });\r\n    if (breakSelected) breakTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    else sessionTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    themeTitle.setAttribute('style', `color: ${contentValue}`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = contentValue;\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.style.backgroundColor = contentValue;\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n    // Update tab and local storage properties\r\n    bodyBackgroundColor = `#${rgbHex(window.getComputedStyle(document.querySelector('body')).getPropertyValue('background-color'))}`;\r\n    iconsColor = `#${rgbHex(window.getComputedStyle(sessionTitle).getPropertyValue('color'))}`;\r\n    themeColorTab.setAttribute('content', bodyBackgroundColor);\r\n    localStorage.setItem('customBodyBackgroundColor', JSON.stringify(bodyBackgroundColor));\r\n    localStorage.setItem('customIconsColor', JSON.stringify(iconsColor));\r\n}\r\n\r\n/**\r\n * Removes the current custom theme and applies the new one.\r\n * On full remove, a pre-built theme is applied.\r\n * \r\n * @return {void}\r\n */\r\nfunction removeCustomTheme(fullRemove = false) {\r\n    if (fullRemove) {\r\n        customThemeActive = false;\r\n        localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n    }\r\n    body.style.backgroundColor = '';\r\n    body.style.color = '';\r\n    themeColor.forEach(element => {\r\n        element.style.color = '';\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.style.borderColor = '';\r\n    });\r\n    breakTitle.style.background = '';\r\n    themeActive.style.background = '';\r\n    themeActive.style.backgroundSize = '';\r\n    themeActive.style.backgroundPosition = '';\r\n    themeTitle.style.color = '';\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = '';\r\n        pomodoro.style.backgroundColor = '';\r\n    });\r\n}\r\n\r\n/**\r\n * Asks for a timer restart when a pre-built theme is applied on a timer with progress.\r\n * \r\n * @param {DOM element} accept\r\n * @param {DOM element} decline\r\n * @param {DOM element} themeWarning\r\n * @param {DOM element} theme\r\n * @return {void}\r\n */\r\nfunction timerRestartTheme(accept, decline, themeWarning, theme) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        stopTimerHard(stop, sessionSeconds);\r\n        executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, true);\r\n        if (JSON.parse(localStorage.getItem('customThemeActive'))) {\r\n            removeCustomTheme(true);\r\n        }\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\n/**\r\n * Asks for a timer restart when a custom theme is applied on a timer with progress.\r\n * \r\n * @param {DOM element} accept\r\n * @param {DOM element} decline\r\n * @param {DOM element} themeWarning\r\n * @param {string} bodyValue\r\n * @param {string} contentValue\r\n * @return {void}\r\n */\r\nfunction timerRestartThemeCustom(accept, decline, themeWarning, bodyValue, contentValue) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        customThemeActive = true;\r\n        localStorage.setItem('customThemeActive', JSON.stringify(customThemeActive));\r\n        removeCustomTheme(false);\r\n        stopTimerHard(stop, sessionSeconds);\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        customThemeChanger(bodyValue, contentValue, true);\r\n        titleBorderColor(true)\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\n/**\r\n * Correctly switches the color of the border color under the session/break titles.\r\n * \r\n * @param {boolean} customThemeReset \r\n * @return {void}\r\n */\r\nfunction titleBorderColor(customThemeReset) {\r\n    if (!JSON.parse(localStorage.getItem('customThemeActive')) && !customThemeReset) {\r\n        let currentActive = sessionTitle.classList[sessionTitle.classList.length - 1];\r\n        breakTitle.classList = '';\r\n        breakTitle.classList.add(currentActive);\r\n        sessionTitle.classList = '';\r\n    } else if (customThemeReset) {\r\n        if (breakSelected) customThemeSwitch = false;\r\n        else customThemeSwitch = true;\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Sets picking for pre-built themes.\r\n * Calls and checks application od custom theme.\r\n * \r\n * @param {DOM element} themes \r\n * @return {void}\r\n */\r\nfunction changeTheme(themes) {\r\n    themes.forEach(theme => {\r\n        theme.addEventListener('click', function () {\r\n            if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartTheme(acceptRestart, declineRestart, themeWarningBackground, theme);\r\n            else {\r\n                if (JSON.parse(localStorage.getItem('customThemeActive'))) removeCustomTheme(true);\r\n                setTimeout(() => {\r\n                    if (breakSelected) titleBorderColor(false);\r\n                }, 0);\r\n                executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, false);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Changes current theme into the selected pre-built theme.\r\n * Uses class switching to achieve this.\r\n * \r\n * @param {DOM element} theme\r\n * @param {DOM element} themeColor\r\n * @param {DOM element} themeBorder\r\n * @param {DOM element} themeActive\r\n * @param {DOM element} themeTitle\r\n * @param {DOM elements} pomodoros\r\n * @param {DOM element} modalSettings\r\n * @param {boolean} isTimerStarted\r\n * @return {void}\r\n */\r\nfunction executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, isTimerStarted) {\r\n    body.classList = '';\r\n    body.classList.add(theme.classList[1]);\r\n    themeColor.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-color`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-border`);\r\n    });\r\n    themeActive.classList.remove(themeActive.classList[themeActive.classList.length - 1]);\r\n    themeActive.classList.add(`${theme.classList[1]}-active`);\r\n    themeActive = document.querySelector(`.${theme.classList[1]}-active`);\r\n    themeTitle.classList.remove(themeTitle.classList[themeTitle.classList.length - 1]);\r\n    themeTitle.classList.add(`${theme.classList[1]}-title`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.classList = '';\r\n        pomodoro.classList.add('pomodoro', `${theme.classList[1]}-border`);\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.classList.add('pomodoro', `${theme.classList[1]}-background`);\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n    // Update tab and local storage properties\r\n    setTimeout(() => {\r\n        bodyBackgroundColor = `#${rgbHex(window.getComputedStyle(document.querySelector('body')).getPropertyValue('background-color'))}`;\r\n        iconsColor = `#${rgbHex(window.getComputedStyle(sessionTitle).getPropertyValue('color'))}`;\r\n        themeColorTab.setAttribute('content', bodyBackgroundColor);\r\n        localStorage.setItem('themeClass', JSON.stringify(document.querySelector('body').classList[0]));\r\n        localStorage.setItem('bodyBackgroundColor', JSON.stringify(bodyBackgroundColor));\r\n        localStorage.setItem('iconsColor', JSON.stringify(iconsColor));\r\n    }, 0);\r\n}\r\n\r\nfunction mainThemes() {\r\n    setStorageTheme();\r\n    loadStorageTheme();\r\n    changeTheme(themes);\r\n    colorPicker();\r\n}\r\n\r\nwindow.onload = mainThemes();"]}