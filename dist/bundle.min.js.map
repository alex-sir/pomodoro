{"version":3,"sources":["bundle.min.js"],"names":["countdown","timer","document","querySelector","timerStarted","play","pause","stop","reset","arrow","querySelectorAll","pomodoros","pomodorosCount","sessionTitle","increaseSession","sessionMinutes","decreaseSession","breakTitle","increaseBreak","breakMinutes","decreaseBreak","longBreak","longBreakPomodoro","longBreakInput","confirmTimeChangeLongBreak","timeInputLabelLongBreak","sessionSeconds","parseInt","textContent","autoStart","notifications","tabTitleTime","breakLongBreakLink","breakSelected","sessionTimeSelected","breakTimeSelected","longBreakTimeSelected","customThemeSwitch","timeInputs","timeInputLabels","confirmTimeChanges","sessionInput","confirmTimeChangeSession","breakInput","confirmTimeChangeBreak","notificationIcon","timerDisplay","seconds","breakTime","returnRunTimerDisplay","runTimerDisplay","clearInterval","disabled","i","length","id","checked","classList","add","contains","style","pointerEvents","getAttribute","forEach","then","Date","now","displayTimeLeft","setInterval","secondsLeft","Math","round","currentActive","titleBorderChange","Push","create","body","icon","pomodoro","customThemeActive","setAttribute","customValueBody","customValueContent","remove","split","min","addEventListener","e","keyCode","repeat","pauseTimer","checkTimerFont","window","matchMedia","matches","fontSize","noTitleToggle","background","backgroundSize","backgroundPosition","toggle","timerSession","increase","minutes","decrease","session","runIncrease","isThroughKey","minutesTextContent","runDecrease","breakMinutesContent","altKey","title","floor","remainderSeconds","display","hours","toString","padStart","clickRun","runPauseTimer","breakSessionTitleReset","enableTimeInputs","stopTimerHard","resetPomodoros","backgroundColor","pomodoroBorder","onload","sessionTime","runSessionSelect","runBreakSelect","runLongBreakSelect","sessionBreakSelect","runStopTimer","stopTimer","runResetTimer","resetTimer","target","Permission","request","toggleNotifications","checkIsDigit","preventDefault","runConfirmTimeChange","input","isSession","isLongBreak","inputValue","value","changeTimeInput","breakLongBreakLinkCheck","modalSettings","modalAbout","modalBtnSettings","modalBtnAbout","closeBtnSettings","closeBtnAbout","settings","about","hideModalSettings","modal","opacity","setTimeout","visibility","transform","overflow","hideModalAbout","modalBtn","closeBtn","blur","modalDisplaySettings","modalDisplayAbout","timerFontMediaQuery","timerFontListener","addListener","themes","themeColor","themeBorder","themeActive","themeTitle","themeWarningBackground","acceptRestart","declineRestart","applyCustomTheme","colorPicker","$","spectrum","color","showInput","showInitial","showAlpha","preferredFormat","on","accept","decline","themeWarning","bodyValue","contentValue","removeCustomTheme","customThemeChanger","titleBorderColor","timerRestartThemeCustom","isTimerStarted","element","borderColor","fullRemove","changeTheme","theme","executeChangeTheme","timerRestartTheme","customThemeReset"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){// Timer\r\nlet countdown;\r\nconst timer = document.querySelector('#timer');\r\nlet timerStarted = false;\r\n// Timer controls\r\nconst play = document.querySelector('#play');\r\nconst pause = document.querySelector('#pause');\r\nconst stop = document.querySelector('#stop');\r\nconst reset = document.querySelector('#reset');\r\nconst arrow = document.querySelectorAll('.arrow');\r\n// Pomodoros\r\nconst pomodoros = document.querySelectorAll('.pomodoro');\r\nlet pomodorosCount = 0;\r\n// Session\r\nconst sessionTitle = document.querySelector('.session-title h3');\r\nconst increaseSession = document.querySelector('#increase-session');\r\nconst sessionMinutes = document.querySelector('#session-minutes');\r\nconst decreaseSession = document.querySelector('#decrease-session');\r\n// Break\r\nconst breakTitle = document.querySelector('.break-title h3');\r\nconst increaseBreak = document.querySelector('#increase-break');\r\nconst breakMinutes = document.querySelector('#break-minutes');\r\nconst decreaseBreak = document.querySelector('#decrease-break');\r\n// Long break\r\nlet longBreak = 15;\r\nconst longBreakPomodoro = document.querySelector('.pomodoro:last-of-type');\r\nconst longBreakInput = document.querySelector('#long-break-input');\r\nconst confirmTimeChangeLongBreak = document.querySelector('.confirm-time-change-long-break');\r\nconst timeInputLabelLongBreak = document.querySelector('.time-input-wrapper:last-child>label');\r\n// Current seconds\r\nlet sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n// Preferences\r\nconst autoStart = document.querySelector('#auto-start');\r\nconst notifications = document.querySelector('#notifications');\r\nconst tabTitleTime = document.querySelector('#tab-title-time');\r\nconst breakLongBreakLink = document.querySelector('#break-long-break-link');\r\n// Selections\r\nlet breakSelected = false;\r\nlet sessionTimeSelected = true;\r\nlet breakTimeSelected = false;\r\nlet longBreakTimeSelected = false;\r\nlet customThemeSwitch = true;\r\n// Time inputs\r\nconst timeInputs = document.querySelectorAll('.time-input');\r\nconst timeInputLabels = document.querySelectorAll('.time-input-wrapper>label');\r\nconst confirmTimeChanges = document.querySelectorAll('.confirm-time-change');\r\nconst sessionInput = document.querySelector('#session-input');\r\nconst confirmTimeChangeSession = document.querySelector('.confirm-time-change-session');\r\nconst breakInput = document.querySelector('#break-input');\r\nconst confirmTimeChangeBreak = document.querySelector('.confirm-time-change-break');\r\n// Icon\r\nconst notificationIcon = 'favicon/android-chrome-192x192.png';\r\n\r\n// TODO: Add guide on info modal\r\n// TODO: Switch push.js notifications to use vanilla notifications API (maybe, have to do more research)\r\n// TODO: Add a to-do list under the timer. It should feature the ability to add, delete, tag, and be expandable with more info (a description)\r\n// TODO: Add HTML local storage\r\n// FIXME: Delay in time for tab title. Use web workers to solve this\r\n// FIXME: Slight nudge to timer when on mobile times of >=60 minutes are selected\r\n\r\n/**\r\n * Runs core logic for displaying and counting down the timer.\r\n * \r\n * @param {number} seconds\r\n * @param {boolean} breakTime\r\n * @param {boolean} returnRunTimerDisplay\r\n * @return {function || void}\r\n */\r\nfunction timerDisplay(seconds, breakTime = true, returnRunTimerDisplay) {\r\n    function runTimerDisplay() {\r\n        if (!timerStarted) timerStarted = true;\r\n        if (breakSelected && pomodorosCount !== 4 && !timerStarted) sessionSeconds = breakMinutes.textContent * 60;\r\n        seconds = sessionSeconds;\r\n        clearInterval(countdown);\r\n        pause.disabled = false;\r\n        stop.disabled = false;\r\n        // Disable time inputs and buttons while timer is running\r\n        autoStart.disabled = true;\r\n        breakLongBreakLink.disabled = true;\r\n        play.disabled = true;\r\n        for (let i = 0; i < timeInputs.length; i++) {\r\n            if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else {\r\n                timeInputs[i].disabled = true;\r\n                timeInputs[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n            }\r\n            if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n            else {\r\n                confirmTimeChanges[i].style.pointerEvents = 'none';\r\n                confirmTimeChanges[i].classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            }\r\n            if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else timeInputLabels[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = true;\r\n        });\r\n        const now = Date.now();\r\n        const then = now + seconds * 1000;\r\n        displayTimeLeft(seconds);\r\n\r\n        countdown = setInterval(() => {\r\n            const secondsLeft = Math.round((then - Date.now()) / 1000);\r\n            // const secondsLeft = Math.round((then - then) / 1000);\r\n            sessionSeconds -= 1;\r\n\r\n            if (secondsLeft < 1) {\r\n                clearInterval(countdown);\r\n                if (autoStart.checked) {\r\n                    currentActive = titleBorderChange(false);\r\n                    if (pomodorosCount === 4) {\r\n                        Push.create('Long break over!', {\r\n                            body: 'Session started.',\r\n                            icon: notificationIcon\r\n                        });\r\n                        breakSelected = false;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        longBreakTimeSelected = false;\r\n                        pomodorosCount = 0;\r\n                        // Reset pomodoros to correct colors\r\n                        pomodoros.forEach((pomodoro) => {\r\n                            if (!customThemeActive) pomodoro.classList.remove(`${currentActive.split('-')[0]}-background`);\r\n                            else pomodoro.setAttribute('style', `background-color: ${customValueBody}; border-color: ${customValueContent};`);\r\n                        });\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    } else if (breakTime && !breakSelected) {\r\n                        // Session finishes, start break or long break\r\n                        breakSelected = true;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        pomodorosCount++;\r\n                        // Fill in next pomodoro\r\n                        if (!customThemeActive) pomodoros[pomodorosCount - 1].classList.add(`${currentActive.split('-')[0]}-background`);\r\n                        else pomodoros[pomodorosCount - 1].setAttribute('style', `background-color: ${customValueContent}; border-color: ${customValueContent};`);\r\n                        if (pomodorosCount === 4) {\r\n                            sessionSeconds = Math.min(longBreak * 60, 6000);\r\n                            Push.create('Session over!', {\r\n                                body: 'Long break started.',\r\n                                icon: notificationIcon\r\n                            });\r\n                            longBreakTimeSelected = true;\r\n                        } else {\r\n                            sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n                            Push.create('Session over!', {\r\n                                body: 'Break started.',\r\n                                icon: notificationIcon\r\n                            });\r\n                        }\r\n                        timerDisplay(sessionSeconds, false, true)();\r\n                        play.disabled = false;\r\n                    } else {\r\n                        Push.create('Break over!', {\r\n                            body: 'Session started.',\r\n                            icon: notificationIcon\r\n                        });\r\n                        breakSelected = false;\r\n                        breakTimeSelected = false;\r\n                        sessionTimeSelected = true;\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    }\r\n                }\r\n            }\r\n            displayTimeLeft(secondsLeft);\r\n        }, 1000);\r\n    }\r\n    if (returnRunTimerDisplay) return runTimerDisplay;\r\n    document.addEventListener('keydown', e => {\r\n        if (e.keyCode === 32) {\r\n            if (e.repeat) return;\r\n            if (pause.disabled) runTimerDisplay();\r\n            else pauseTimer(pause, false)();\r\n        }\r\n    });\r\n    play.addEventListener('click', runTimerDisplay);\r\n}\r\n\r\n/**\r\n * Checks seconds to see if the timer font needs adjusting. Adjusts it if so.\r\n * \r\n * @param {number} seconds\r\n * @param {DOM element} timer\r\n * @return {void}\r\n */\r\nfunction checkTimerFont(seconds, timer) {\r\n    if (seconds === 360000 && window.matchMedia('(max-width: 420px)').matches) timer.style.fontSize = '4.688rem';\r\n    else if (seconds >= 3600 && window.matchMedia('(max-width: 420px)').matches) {\r\n        timer.style.fontSize = '5rem';\r\n    } else {\r\n        timer.style.fontSize = '5.625rem';\r\n    }\r\n}\r\n\r\n/**\r\n * Allows selection of a session, break, or long break.\r\n * Displays correct time and selection.\r\n * \r\n * @param {DOM element} sessionTime\r\n * @param {DOM element} breakTime\r\n * @param {DOM element} longBreakPomodoro\r\n * @return {void}\r\n */\r\nfunction sessionBreakSelect(sessionTime, breakTime, longBreakPomodoro) {\r\n    function runSessionSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, true, true);\r\n        if (sessionTimeSelected) null;\r\n        else if (breakTimeSelected) {\r\n            breakTimeSelected = false;\r\n            sessionTimeSelected = true;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runLongBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = true;\r\n        sessionSeconds = parseInt(longBreak) * 60;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        currentActive = titleBorderChange(true);\r\n        pomodorosCount = 4;\r\n        // Fill in all four pomodoros\r\n        pomodoros.forEach(pomodoro => {\r\n            if (!customThemeActive) pomodoro.classList.add(`${currentActive.split('-')[0]}-background`);\r\n            else pomodoro.setAttribute('style', `background-color: ${customValueContent}; border-color: ${customValueContent};`);\r\n        });\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 80) {\r\n            if (e.repeat) return\r\n            runSessionSelect();\r\n        }\r\n    });\r\n    sessionTime.addEventListener('click', runSessionSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 66) {\r\n            if (e.repeat) return\r\n            runBreakSelect();\r\n        }\r\n    });\r\n    breakTime.addEventListener('click', runBreakSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 76) {\r\n            if (e.repeat) return;\r\n            runLongBreakSelect();\r\n        }\r\n    });\r\n    longBreakPomodoro.addEventListener('click', runLongBreakSelect);\r\n}\r\n\r\n/**\r\n * Changes border under session or select.\r\n * Adjusts colors and classes as needed.\r\n * \r\n * @param {boolean} noTitleToggle\r\n * @return {DOM class || void}\r\n */\r\nfunction titleBorderChange(noTitleToggle) {\r\n    let currentActive;\r\n    if (!customThemeActive) {\r\n        sessionTitle.classList.length >= 1 ?\r\n            currentActive = sessionTitle.classList[sessionTitle.classList.length - 1] :\r\n            currentActive = breakTitle.classList[breakTitle.classList.length - 1];\r\n        if (noTitleToggle) return currentActive;\r\n        breakTitle.classList.toggle(currentActive);\r\n        sessionTitle.classList.toggle(currentActive);\r\n    } else if (noTitleToggle) {\r\n        return;\r\n    } else {\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n        if (customThemeSwitch) {\r\n            customThemeSwitch = false;\r\n            sessionTitle.style.background = '';\r\n            sessionTitle.style.backgroundSize = '';\r\n            sessionTitle.style.backgroundPosition = '';\r\n            breakTitle.style.background = `linear-gradient(to right, ${customValueContent}, ${customValueContent}) no-repeat`;\r\n            breakTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            breakTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        } else {\r\n            customThemeSwitch = true;\r\n            breakTitle.style.background = '';\r\n            breakTitle.style.backgroundSize = '';\r\n            breakTitle.style.backgroundPosition = '';\r\n            sessionTitle.style.background = `linear-gradient(to right, ${customValueContent}, ${customValueContent}) no-repeat`;\r\n            sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        }\r\n    }\r\n    return currentActive;\r\n}\r\n\r\n/**\r\n * Increase or decrease time relative to the desired time option.\r\n * \r\n * @param {DOM element} increase\r\n * @param {DOM element} minutes\r\n * @param {DOM element} decrease\r\n * @param {boolean} session\r\n * @return {void}\r\n */\r\nfunction timerSession(increase, minutes, decrease, session = true) {\r\n    function runIncrease(isThroughKey = false) {\r\n        const minutesTextContent = parseInt(minutes.textContent);\r\n        if ((parseInt(minutes.textContent) >= 6000 && !longBreakTimeSelected) ||\r\n            (longBreak >= 6000 && longBreakTimeSelected && !session && minutesTextContent >= 6000) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 6000 && !session && minutesTextContent >= 6000)) {\r\n            return;\r\n        } else {\r\n            if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n                sessionSeconds += 60;\r\n                longBreak += 1;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else minutes.textContent = parseInt(minutes.textContent) + 1;\r\n            if (session) {\r\n                if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!breakSelected && !longBreakTimeSelected) sessionSeconds += 60;\r\n            } else if (breakSelected) {\r\n                if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && minutesTextContent < 2000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n                else if (longBreakTimeSelected) null;\r\n                else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!longBreakTimeSelected) sessionSeconds += 60;\r\n                else if (breakLongBreakLink.checked) null;\r\n                else if (breakLongBreakLink.checked) sessionSeconds += 60 * 3;\r\n            }\r\n        }\r\n        if (breakLongBreakLink.checked && longBreak !== 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    increase.addEventListener('click', () => {\r\n        runIncrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 38 && !timerStarted) {\r\n            runIncrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n        }\r\n    });\r\n\r\n    function runDecrease(isThroughKey = false) {\r\n        if ((parseInt(minutes.textContent) <= 1 && !longBreakTimeSelected) ||\r\n            (longBreak <= 1 && longBreakTimeSelected && !session) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 3 && !session)) {\r\n            return;\r\n        }\r\n\r\n        const breakMinutesContent = parseInt(breakMinutes.textContent) * 3;\r\n\r\n        if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n            sessionSeconds -= 60;\r\n            longBreak -= 1;\r\n            displayTimeLeft(sessionSeconds, false);\r\n        } else minutes.textContent = parseInt(minutes.textContent) - 1;\r\n        if (session) {\r\n            if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!breakSelected && !longBreakTimeSelected) sessionSeconds -= 60;\r\n        } else if (breakSelected) {\r\n            if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && breakMinutesContent <= 6000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n            else if (longBreakTimeSelected) null;\r\n            else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!longBreakTimeSelected) sessionSeconds -= 60;\r\n            else if (breakLongBreakLink.checked && breakMinutesContent >= 2000) null;\r\n            else if (breakLongBreakLink.checked) sessionSeconds -= 60 * 3;\r\n        }\r\n        if (breakLongBreakLink.checked && breakMinutesContent <= 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    decrease.addEventListener('click', () => {\r\n        runDecrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 40 && !timerStarted) {\r\n            runDecrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {number} seconds\r\n * @param {boolean} title\r\n * @return {void}\r\n */\r\nfunction displayTimeLeft(seconds, title = true) {\r\n    let minutes = Math.floor(seconds / 60);\r\n    const remainderSeconds = seconds % 60;\r\n    let display;\r\n    if (minutes >= 60) {\r\n        const hours = Math.floor(minutes / 60);\r\n        minutes %= 60;\r\n        display = `${hours < 10 ? hours.toString().padStart(2, 0) : hours}:${\r\n            minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    } else {\r\n        display = `${minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    }\r\n    timer.textContent = display;\r\n    if (!title || !tabTitleTime.checked) return;\r\n    else document.title = `(${display}) Pomodoro`;\r\n}\r\n\r\n/**\r\n * @param {DOM element} pause\r\n * @param {boolean} clickRun\r\n * @return {function || void}\r\n */\r\nfunction pauseTimer(pause, clickRun) {\r\n    function runPauseTimer() {\r\n        clearInterval(countdown);\r\n        // Resume timer for session or break\r\n        sessionTitle.classList >= 1 ? timerDisplay(0, true, true) : timerDisplay(0, false, true);\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n    }\r\n\r\n    if (!clickRun) return runPauseTimer;\r\n    else {\r\n        pause.disabled = true;\r\n        pause.addEventListener('click', runPauseTimer);\r\n    }\r\n}\r\n\r\n/**\r\n * On timer reset, move bottom border indicator to session.\r\n * \r\n * @return {void}\r\n */\r\nfunction breakSessionTitleReset() {\r\n    if (breakTitle.classList.length >= 1) {\r\n        sessionTitle.classList.add(breakTitle.classList[breakTitle.classList.length - 1]);\r\n        breakTitle.classList = '';\r\n    } else if (customThemeActive) {\r\n        sessionTitle.style.background = `linear-gradient(to right, ${customValueContent}, ${customValueContent}) no-repeat`;\r\n        sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n        sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        breakTitle.style.background = '';\r\n        customThemeSwitch = true;\r\n    }\r\n}\r\n\r\n/**\r\n * @return {void}\r\n */\r\nfunction enableTimeInputs() {\r\n    for (let i = 0; i < timeInputs.length; i++) {\r\n        if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else {\r\n            timeInputs[i].disabled = false;\r\n            timeInputs[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n        else {\r\n            confirmTimeChanges[i].style.pointerEvents = 'auto';\r\n            confirmTimeChanges[i].classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n        }\r\n        if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else timeInputLabels[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n    }\r\n}\r\n\r\n/**\r\n * @param {DOM element} stop\r\n * @param {number} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimer(stop, seconds) {\r\n    stop.disabled = true;\r\n\r\n    function runStopTimer() {\r\n        if (breakSelected && pomodorosCount !== 4) seconds = parseInt(breakMinutes.textContent) * 60;\r\n        else if (pomodorosCount === 4) seconds = longBreak * 60;\r\n        else seconds = parseInt(sessionMinutes.textContent) * 60;\r\n        timerStarted = false;\r\n        sessionSeconds = seconds;\r\n        clearInterval(countdown);\r\n        displayTimeLeft(seconds);\r\n        stop.disabled = true;\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        enableTimeInputs();\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        document.title = 'Pomodoro';\r\n        if (breakSelected) timerDisplay(seconds, false, true);\r\n        else timerDisplay(seconds, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 83) {\r\n            if (e.repeat) return;\r\n            runStopTimer();\r\n        }\r\n    });\r\n    stop.addEventListener('click', runStopTimer);\r\n}\r\n\r\n/**\r\n * Stops timer and resets pomodoros.\r\n * \r\n * @param {DOM element} stop\r\n * @param {*} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimerHard(stop, seconds) {\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    timerStarted = false;\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    sessionSeconds = seconds;\r\n    clearInterval(countdown);\r\n    displayTimeLeft(seconds);\r\n    breakSessionTitleReset();\r\n    resetPomodoros(pomodoros);\r\n    pomodorosCount = 0;\r\n    breakSelected = false;\r\n    sessionTimeSelected = true;\r\n    breakTimeSelected = false;\r\n    longBreakTimeSelected = false;\r\n    stop.disabled = true;\r\n    pause.disabled = true;\r\n    play.disabled = false;\r\n    autoStart.disabled = false;\r\n    breakLongBreakLink.disabled = false;\r\n    enableTimeInputs();\r\n    arrow.forEach(arrow => {\r\n        arrow.disabled = false;\r\n    });\r\n    document.title = 'Pomodoro';\r\n    timerDisplay(seconds, true, true);\r\n    checkTimerFont(sessionSeconds, timer);\r\n}\r\n\r\n/**\r\n * @param {DOM elements} pomodoros\r\n * @return {void}\r\n */\r\nfunction resetPomodoros(pomodoros) {\r\n    pomodoros.forEach((pomodoro) => {\r\n        if (!customThemeActive) {\r\n            const pomodoroBorder = pomodoro.classList[1];\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro', pomodoroBorder);\r\n        } else {\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro');\r\n            pomodoro.style.backgroundColor = '';\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {DOM element} reset\r\n * @return {void}\r\n */\r\nfunction resetTimer(reset) {\r\n    function runResetTimer() {\r\n        timerStarted = false;\r\n        clearInterval(countdown);\r\n        timer.textContent = '25:00';\r\n        sessionMinutes.textContent = '25';\r\n        breakSessionTitleReset();\r\n        breakSelected = false;\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        longBreakTimeSelected = false;\r\n        enableTimeInputs();\r\n        resetPomodoros(pomodoros);\r\n        pomodorosCount = 0;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        breakMinutes.textContent = '5';\r\n        longBreak = 15;\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        play.disabled = false;\r\n        pause.disabled = true;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        document.title = 'Pomodoro';\r\n        timerDisplay(parseInt(timer.textContent.split(':')[0]) * 60, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 82) {\r\n            if (e.repeat) return;\r\n            runResetTimer();\r\n        }\r\n    });\r\n    reset.addEventListener('click', runResetTimer);\r\n}\r\n\r\n/**\r\n * @param {DOM element} notifications\r\n * @return {void}\r\n */\r\nfunction toggleNotifications(notifications) {\r\n    notifications.addEventListener('change', e => {\r\n        if (e.target.checked) Push.Permission.request();\r\n    });\r\n}\r\n\r\n/**\r\n * Change the time of a time option through input.\r\n * \r\n * @param {DOM element} confirmTimeChangeSession\r\n * @param {DOM element} sessionInput\r\n * @param {DOM element} confirmTimeChangeBreak\r\n * @param {DOM element} breakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} longBreakInput\r\n * @return {void}\r\n */\r\nfunction changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput) {\r\n    function checkIsDigit(e) {\r\n        if (e.keyCode === 189 ||\r\n            e.keyCode === 187 ||\r\n            e.keyCode === 69 ||\r\n            e.keyCode === 190) e.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Check which time option is currently selected.\r\n     * Update time option text value, timer display, and session seconds accordingly.\r\n     * \r\n     * @param {DOM element} input\r\n     * @param {DOM element} minutes\r\n     * @param {boolean} isSession\r\n     * @param {boolean} isLongBreak\r\n     * @return {void}\r\n     */\r\n    function runConfirmTimeChange(input, minutes, isSession, isLongBreak) {\r\n        let inputValue = input.value;\r\n        if (inputValue > 6000) {\r\n            inputValue = 6000;\r\n            input.value = 6000;\r\n        } else if (inputValue < 1 || input.length === 0) {\r\n            inputValue = 1;\r\n            input.value = 1;\r\n        }\r\n        if (isSession) {\r\n            if (!breakSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        } else if (!isSession) {\r\n            if (longBreakTimeSelected && breakLongBreakLink.checked) {\r\n                longBreak = Math.min(inputValue * 3, 6000);\r\n                sessionSeconds = longBreak * 60;\r\n                displayTimeLeft(sessionSeconds, false)\r\n            } else if (longBreakTimeSelected && !breakLongBreakLink.checked) {\r\n                if (isLongBreak) {\r\n                    sessionSeconds = inputValue * 60;\r\n                    displayTimeLeft(sessionSeconds, false);\r\n                }\r\n            } else if (breakSelected && !isLongBreak) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else if (isLongBreak && longBreakTimeSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        }\r\n        if (isLongBreak) longBreak = +inputValue;\r\n        if (breakLongBreakLink.checked && !isSession) longBreak = Math.min(inputValue * 3, 6000);\r\n        minutes.textContent = parseInt(inputValue, 10);\r\n    }\r\n\r\n    confirmTimeChangeSession.addEventListener('click', () => {\r\n        runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    });\r\n    sessionInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n        }\r\n    });\r\n\r\n    confirmTimeChangeBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    });\r\n    breakInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n        }\r\n    });\r\n    confirmTimeChangeLongBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    });\r\n    longBreakInput.addEventListener('keydown', e => {\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Adjust long break time in conjunction with break if link active.\r\n * \r\n * @param {DOM element} breakLongBreakLink\r\n * @param {DOM element} longBreakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} timeInputLabelLongBreak\r\n * @param {DOM element} breakMinutes\r\n * @return {void}\r\n */\r\nfunction breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes) {\r\n    breakLongBreakLink.addEventListener('change', e => {\r\n        if (e.target.checked) {\r\n            longBreakInput.classList.add('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.add('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'none';\r\n            longBreakInput.disabled = true;\r\n            longBreak = Math.min(+breakMinutes.textContent * 3, 6000);\r\n            if (longBreakTimeSelected) {\r\n                displayTimeLeft(longBreak * 60, false);\r\n                sessionSeconds = longBreak * 60;\r\n            }\r\n        } else if (!e.target.checked) {\r\n            longBreakInput.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'auto';\r\n            longBreakInput.disabled = false;\r\n        }\r\n    });\r\n}\r\n\r\nfunction mainTimer() {\r\n    timerDisplay(sessionSeconds, true, false);\r\n    timerSession(increaseSession, sessionMinutes, decreaseSession, true);\r\n    timerSession(increaseBreak, breakMinutes, decreaseBreak, false);\r\n    sessionBreakSelect(sessionTitle, breakTitle, longBreakPomodoro);\r\n    pauseTimer(pause, true);\r\n    stopTimer(stop, sessionSeconds);\r\n    resetTimer(reset);\r\n    toggleNotifications(notifications);\r\n    changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput);\r\n    breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes);\r\n}\r\n\r\nwindow.onload = mainTimer();\n// TODO: For modal, modularize HTML classes and id's, and JS functions and variables\r\nconst modalSettings = document.querySelector('#simple-modal-settings');\r\nconst modalAbout = document.querySelector('#simple-modal-about');\r\nconst modalBtnSettings = document.querySelector('#modal-btn-settings');\r\nconst modalBtnAbout = document.querySelector('#modal-btn-about');\r\nconst closeBtnSettings = document.querySelector('#close-btn-settings');\r\nconst closeBtnAbout = document.querySelector('#close-btn-about');\r\nconst settings = document.querySelector('.settings');\r\nconst about = document.querySelector('.about');\r\n\r\nfunction modalDisplaySettings(modal, modalBtn, closeBtn, settings) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        settings.style.transform = 'rotate(90deg)';\r\n        body.style.overflow = 'hidden';\r\n        settings.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalSettings(modal, settings);\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === modal) {\r\n            hideModalSettings(modal, settings);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalSettings(modal, settings) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    settings.style.transform = 'rotate(0deg)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction modalDisplayAbout(modal, modalBtn, closeBtn, about) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        about.style.transform = 'scale(0.85)';\r\n        body.style.overflow = 'hidden';\r\n        about.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalAbout(modal);\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === modal) {\r\n            hideModalAbout(modal);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalAbout(modal) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    about.style.transform = 'scale(1)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction mainModal() {\r\n    modalDisplaySettings(modalSettings, modalBtnSettings, closeBtnSettings, settings);\r\n    modalDisplayAbout(modalAbout, modalBtnAbout, closeBtnAbout, about);\r\n}\r\n\r\nwindow.onload = mainModal();\nconst timerFontMediaQuery = window.matchMedia('(max-width: 420px)');\r\n\r\nfunction timerFontListener(e) {\r\n    if (e.matches) {\r\n        if (sessionSeconds === 6000) timer.style.fontSize = '4.688rem';\r\n        else if (sessionSeconds >= 3600) timer.style.fontSize = '5rem';\r\n    } else timer.style.fontSize = '5.625rem';\r\n}\r\n\r\nfunction mediaQueryListener() {\r\n    timerFontMediaQuery.addListener(timerFontListener);\r\n    timerFontListener(timerFontMediaQuery);\r\n}\r\n\r\nwindow.onload = mediaQueryListener();\nconst themes = document.querySelectorAll('.theme');\r\nconst body = document.querySelector('body');\r\nconst themeColor = document.querySelectorAll('.dark-color');\r\nconst themeBackground = document.querySelectorAll('.dark-');\r\nconst themeBorder = document.querySelectorAll('.dark-border');\r\nlet themeActive = document.querySelector('.dark-active');\r\nconst themeTitle = document.querySelector('.dark-title');\r\nconst themeWarningBackground = document.querySelector('.theme-warning-background');\r\nconst acceptRestart = document.querySelector('#accept-restart');\r\nconst declineRestart = document.querySelector('#decline-restart');\r\nlet customValueBody;\r\nlet customValueContent;\r\nconst applyCustomTheme = document.querySelector('#apply-custom-theme');\r\nlet customThemeActive = false;\r\n\r\n// TODO: Modal should also change color OR make it dark mode (not sure which one is better)\r\n\r\nfunction colorPicker() {\r\n    $('#color-picker-body').spectrum({\r\n        color: '#000080',\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    $('#color-picker-content').spectrum({\r\n        color: '#C8C8C8',\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    customValueBody = $('#color-picker-body').spectrum('get');\r\n    customValueContent = $('#color-picker-content').spectrum('get');\r\n    $('#color-picker-body').on('change.spectrum', () => {\r\n        customValueBody = $('#color-picker-body').spectrum('get');\r\n    });\r\n    $('#color-picker-content').on('change.spectrum', () => {\r\n        customValueContent = $('#color-picker-content').spectrum('get');\r\n    });\r\n    applyCustomTheme.addEventListener('click', () => {\r\n        if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartThemeCustom(acceptRestart, declineRestart, themeWarningBackground, customValueBody, customValueContent);\r\n        else {\r\n            customThemeActive = true;\r\n            customThemeChanger(customValueBody, customValueContent, false);\r\n            if (breakSelected) titleBorderColor(true);\r\n        }\r\n    });\r\n}\r\n\r\nfunction customThemeChanger(bodyValue, contentValue, isTimerStarted) {\r\n    body.setAttribute('style', `background-color: ${bodyValue}; color: ${contentValue};`)\r\n    themeColor.forEach(element => {\r\n        element.setAttribute('style', `color: ${contentValue};`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.setAttribute('style', `border-color: ${contentValue}`);\r\n    });\r\n    if (breakSelected) breakTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    else sessionTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    themeTitle.setAttribute('style', `color: ${contentValue}`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = contentValue;\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.style.backgroundColor = contentValue;\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n}\r\n\r\nfunction removeCustomTheme(fullRemove = false) {\r\n    if (fullRemove) customThemeActive = false;\r\n    body.style.backgroundColor = '';\r\n    body.style.color = '';\r\n    themeColor.forEach(element => {\r\n        element.style.color = '';\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.style.borderColor = '';\r\n    });\r\n    breakTitle.style.background = '';\r\n    themeActive.style.background = '';\r\n    themeActive.style.backgroundSize = '';\r\n    themeActive.style.backgroundPosition = '';\r\n    themeTitle.style.color = '';\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = '';\r\n        pomodoro.style.backgroundColor = '';\r\n    });\r\n}\r\n\r\nfunction timerRestartTheme(accept, decline, themeWarning, theme) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        stopTimerHard(stop, sessionSeconds);\r\n        executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, true);\r\n        if (customThemeActive) {\r\n            removeCustomTheme(true);\r\n        }\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction timerRestartThemeCustom(accept, decline, themeWarning, bodyValue, contentValue) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        customThemeActive = true;\r\n        removeCustomTheme(false);\r\n        stopTimerHard(stop, sessionSeconds);\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        customThemeChanger(bodyValue, contentValue, true);\r\n        titleBorderColor(true)\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction changeTheme(themes) {\r\n    themes.forEach(theme => {\r\n        theme.addEventListener('click', function () {\r\n            if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartTheme(acceptRestart, declineRestart, themeWarningBackground, theme);\r\n            else {\r\n                if (customThemeActive) removeCustomTheme(true);\r\n                setTimeout(() => {\r\n                    if (breakSelected) titleBorderColor(false);\r\n                }, 0);\r\n                executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, false);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction titleBorderColor(customThemeReset) {\r\n    if (!customThemeActive && !customThemeReset) {\r\n        let currentActive = sessionTitle.classList[sessionTitle.classList.length - 1];\r\n        breakTitle.classList = '';\r\n        breakTitle.classList.add(currentActive);\r\n        sessionTitle.classList = '';\r\n    } else if (customThemeReset) {\r\n        if (breakSelected) customThemeSwitch = false;\r\n        else customThemeSwitch = true;\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n\r\n    }\r\n}\r\n\r\nfunction executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, isTimerStarted) {\r\n    body.classList = '';\r\n    body.classList.add(theme.classList[1]);\r\n    themeColor.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-color`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-border`);\r\n    });\r\n    themeActive.classList.remove(themeActive.classList[themeActive.classList.length - 1]);\r\n    themeActive.classList.add(`${theme.classList[1]}-active`);\r\n    themeActive = document.querySelector(`.${theme.classList[1]}-active`);\r\n    themeTitle.classList.remove(themeTitle.classList[themeTitle.classList.length - 1]);\r\n    themeTitle.classList.add(`${theme.classList[1]}-title`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.classList = '';\r\n        pomodoro.classList.add('pomodoro', `${theme.classList[1]}-border`);\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.classList.add('pomodoro', `${theme.classList[1]}-background`);\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n}\r\n\r\nfunction mainThemes() {\r\n    changeTheme(themes);\r\n    colorPicker();\r\n}\r\n\r\nwindow.onload = mainThemes();})();"]}