{"version":3,"sources":["bundle.min.js"],"names":["countdown","timer","document","querySelector","timerStarted","play","pause","stop","reset","arrow","querySelectorAll","pomodoros","pomodorosCount","sessionTitle","increaseSession","sessionMinutes","decreaseSession","breakTitle","increaseBreak","breakMinutes","decreaseBreak","longBreak","longBreakPomodoro","longBreakInput","confirmTimeChangeLongBreak","timeInputLabelLongBreak","sessionSeconds","parseInt","textContent","autoStart","notifications","tabTitleTime","breakLongBreakLink","preferences","breakSelected","sessionTimeSelected","breakTimeSelected","longBreakTimeSelected","customThemeSwitch","confirmTimeChanges","sessionInput","confirmTimeChangeSession","breakInput","confirmTimeChangeBreak","timeInputs","timeInputLabels","notificationIcon","setStorageTime","localStorage","setItem","JSON","stringify","timerDisplay","seconds","breakTime","returnRunTimerDisplay","runTimerDisplay","clearInterval","disabled","i","length","id","checked","classList","add","contains","style","pointerEvents","getAttribute","forEach","then","Date","now","displayTimeLeft","setInterval","secondsLeft","Math","round","currentActive","titleBorderChange","Push","create","body","icon","pomodoro","customThemeActive","setAttribute","customValueBody","customValueContent","remove","split","min","addEventListener","e","keyCode","repeat","pauseTimer","checkTimerFont","window","matchMedia","matches","fontSize","noTitleToggle","background","backgroundSize","backgroundPosition","toggle","timerSession","increase","minutes","decrease","session","runIncrease","isThroughKey","minutesTextContent","runDecrease","breakMinutesContent","altKey","title","floor","remainderSeconds","display","hours","toString","padStart","clickRun","runPauseTimer","breakSessionTitleReset","enableTimeInputs","stopTimerHard","resetPomodoros","backgroundColor","pomodoroBorder","breakLongBreakLinkCheck","returnRunBreakLongBreakLinkCheck","runBreakLongBreakLinkCheck","link","onload","preference","parse","getItem","sessionTime","runSessionSelect","runBreakSelect","runLongBreakSelect","sessionBreakSelect","runStopTimer","stopTimer","runResetTimer","resetTimer","target","Permission","request","toggleNotifications","checkIsDigit","preventDefault","runConfirmTimeChange","input","isSession","isLongBreak","inputValue","value","changeTimeInput","modalSettings","modalAbout","modalBtnSettings","modalBtnAbout","closeBtnSettings","closeBtnAbout","settings","about","hideModalSettings","modal","opacity","setTimeout","visibility","transform","overflow","hideModalAbout","modalBtn","closeBtn","blur","modalDisplaySettings","modalDisplayAbout","timerFontMediaQuery","timerFontListener","addListener","themes","themeColor","themeBorder","themeActive","themeTitle","themeWarningBackground","acceptRestart","declineRestart","applyCustomTheme","colorPicker","$","spectrum","color","showInput","showInitial","showAlpha","preferredFormat","on","accept","decline","themeWarning","bodyValue","contentValue","removeCustomTheme","customThemeChanger","titleBorderColor","timerRestartThemeCustom","isTimerStarted","element","borderColor","fullRemove","changeTheme","theme","executeChangeTheme","timerRestartTheme","customThemeReset"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){// Timer\r\nlet countdown;\r\nconst timer = document.querySelector('#timer');\r\nlet timerStarted = false;\r\n// Timer controls\r\nconst play = document.querySelector('#play');\r\nconst pause = document.querySelector('#pause');\r\nconst stop = document.querySelector('#stop');\r\nconst reset = document.querySelector('#reset');\r\nconst arrow = document.querySelectorAll('.arrow');\r\n// Pomodoros\r\nconst pomodoros = document.querySelectorAll('.pomodoro');\r\nlet pomodorosCount = 0;\r\n// Session\r\nconst sessionTitle = document.querySelector('.session-title h3');\r\nconst increaseSession = document.querySelector('#increase-session');\r\nconst sessionMinutes = document.querySelector('#session-minutes');\r\nconst decreaseSession = document.querySelector('#decrease-session');\r\n// Break\r\nconst breakTitle = document.querySelector('.break-title h3');\r\nconst increaseBreak = document.querySelector('#increase-break');\r\nconst breakMinutes = document.querySelector('#break-minutes');\r\nconst decreaseBreak = document.querySelector('#decrease-break');\r\n// Long break\r\nlet longBreak = 15;\r\nconst longBreakPomodoro = document.querySelector('.pomodoro:last-of-type');\r\nconst longBreakInput = document.querySelector('#long-break-input');\r\nconst confirmTimeChangeLongBreak = document.querySelector('.confirm-time-change-long-break');\r\nconst timeInputLabelLongBreak = document.querySelector('.time-input-wrapper:last-child>label');\r\n// Current seconds\r\nlet sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n// Preferences\r\nconst autoStart = document.querySelector('#auto-start');\r\nconst notifications = document.querySelector('#notifications');\r\nconst tabTitleTime = document.querySelector('#tab-title-time');\r\nconst breakLongBreakLink = document.querySelector('#break-long-break-link');\r\nconst preferences = document.querySelectorAll('.preference');\r\n// Selections\r\nlet breakSelected = false;\r\nlet sessionTimeSelected = true;\r\nlet breakTimeSelected = false;\r\nlet longBreakTimeSelected = false;\r\nlet customThemeSwitch = true;\r\n// Time inputs\r\nconst confirmTimeChanges = document.querySelectorAll('.confirm-time-change');\r\nconst sessionInput = document.querySelector('#session-input');\r\nconst confirmTimeChangeSession = document.querySelector('.confirm-time-change-session');\r\nconst breakInput = document.querySelector('#break-input');\r\nconst confirmTimeChangeBreak = document.querySelector('.confirm-time-change-break');\r\nconst timeInputs = document.querySelectorAll('.time-input');\r\nconst timeInputLabels = document.querySelectorAll('.time-input-wrapper>label');\r\n// Icon\r\nconst notificationIcon = 'favicon/android-chrome-192x192.png';\r\n\r\n// TODO: Add guide on info modal\r\n// TODO: Switch push.js notifications to use vanilla notifications API (maybe, have to do more research)\r\n// TODO: Add a to-do list under the timer. It should feature the ability to add, delete, tag, and be expandable with more info (a description)\r\n// TODO: Add HTML local storage\r\n// FIXME: Delay in time for tab title. Use web workers to solve this\r\n// FIXME: Slight nudge to timer when on mobile times of >=60 minutes are selected\r\n\r\nfunction setStorage() {\r\n    if (window.localStorage.length === 0) {\r\n        // Time\r\n        localStorage.setItem('session', JSON.stringify(sessionMinutes.textContent));\r\n        localStorage.setItem('break', JSON.stringify(breakMinutes.textContent));\r\n        localStorage.setItem('longBreak', JSON.stringify(longBreak));\r\n        // Preferences\r\n        localStorage.setItem('autoStart', JSON.stringify(true));\r\n        autoStart.checked = true;\r\n        localStorage.setItem('notifications', JSON.stringify(false));\r\n        notifications.checked = false;\r\n        localStorage.setItem('tabTitleTime', JSON.stringify(true));\r\n        tabTitleTime.checked = true;\r\n        localStorage.setItem('breakLongBreakLink', JSON.stringify(true));\r\n        breakLongBreakLink.checked = true;\r\n    }\r\n}\r\n\r\nfunction setStorageTime() {\r\n    localStorage.setItem('session', JSON.stringify(sessionMinutes.textContent));\r\n    localStorage.setItem('break', JSON.stringify(breakMinutes.textContent));\r\n    localStorage.setItem('longBreak', JSON.stringify(longBreak));\r\n}\r\n\r\nfunction setStoragePreferences() {\r\n    preferences.forEach(preference => {\r\n        preference.addEventListener('change', () => {\r\n            localStorage.setItem(preference.getAttribute('data-preference'), JSON.stringify(preference.checked));\r\n        });\r\n    });\r\n}\r\n\r\nfunction loadStorage() {\r\n    // Time\r\n    sessionMinutes.textContent = JSON.parse(localStorage.getItem('session'));\r\n    sessionSeconds = +sessionMinutes.textContent * 60;\r\n    displayTimeLeft(sessionSeconds, false);\r\n    breakMinutes.textContent = JSON.parse(localStorage.getItem('break'));\r\n    longBreak = JSON.parse(localStorage.getItem('longBreak'));\r\n    // Preferences\r\n    autoStart.checked = JSON.parse(localStorage.getItem('autoStart'));\r\n    notifications.checked = JSON.parse(localStorage.getItem('notifications'));\r\n    tabTitleTime.checked = JSON.parse(localStorage.getItem('tabTitleTime'));\r\n    breakLongBreakLink.checked = JSON.parse(localStorage.getItem('breakLongBreakLink'));\r\n    breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, true)(breakLongBreakLink);\r\n}\r\n\r\n/**\r\n * Runs core logic for displaying and counting down the timer.\r\n * \r\n * @param {number} seconds\r\n * @param {boolean} breakTime\r\n * @param {boolean} returnRunTimerDisplay\r\n * @return {function || void}\r\n */\r\nfunction timerDisplay(seconds, breakTime = true, returnRunTimerDisplay) {\r\n    function runTimerDisplay() {\r\n        if (!timerStarted) timerStarted = true;\r\n        if (breakSelected && pomodorosCount !== 4 && !timerStarted) sessionSeconds = breakMinutes.textContent * 60;\r\n        seconds = sessionSeconds;\r\n        clearInterval(countdown);\r\n        pause.disabled = false;\r\n        stop.disabled = false;\r\n        // Disable time inputs and buttons while timer is running\r\n        autoStart.disabled = true;\r\n        breakLongBreakLink.disabled = true;\r\n        play.disabled = true;\r\n        for (let i = 0; i < timeInputs.length; i++) {\r\n            if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else {\r\n                timeInputs[i].disabled = true;\r\n                timeInputs[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n            }\r\n            if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n            else {\r\n                confirmTimeChanges[i].style.pointerEvents = 'none';\r\n                confirmTimeChanges[i].classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            }\r\n            if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n            else timeInputLabels[i].classList.add('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = true;\r\n        });\r\n        const now = Date.now();\r\n        const then = now + seconds * 1000;\r\n        displayTimeLeft(seconds);\r\n\r\n        countdown = setInterval(() => {\r\n            const secondsLeft = Math.round((then - Date.now()) / 1000);\r\n            // const secondsLeft = Math.round((then - then) / 1000);\r\n            sessionSeconds -= 1;\r\n\r\n            if (secondsLeft < 1) {\r\n                clearInterval(countdown);\r\n                if (autoStart.checked) {\r\n                    currentActive = titleBorderChange(false);\r\n                    if (pomodorosCount === 4) {\r\n                        Push.create('Long break over!', {\r\n                            body: 'Session started.',\r\n                            icon: notificationIcon\r\n                        });\r\n                        breakSelected = false;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        longBreakTimeSelected = false;\r\n                        pomodorosCount = 0;\r\n                        // Reset pomodoros to correct colors\r\n                        pomodoros.forEach((pomodoro) => {\r\n                            if (!customThemeActive) pomodoro.classList.remove(`${currentActive.split('-')[0]}-background`);\r\n                            else pomodoro.setAttribute('style', `background-color: ${customValueBody}; border-color: ${customValueContent};`);\r\n                        });\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    } else if (breakTime && !breakSelected) {\r\n                        // Session finishes, start break or long break\r\n                        breakSelected = true;\r\n                        breakTimeSelected = true;\r\n                        sessionTimeSelected = false;\r\n                        pomodorosCount++;\r\n                        // Fill in next pomodoro\r\n                        if (!customThemeActive) pomodoros[pomodorosCount - 1].classList.add(`${currentActive.split('-')[0]}-background`);\r\n                        else pomodoros[pomodorosCount - 1].setAttribute('style', `background-color: ${customValueContent}; border-color: ${customValueContent};`);\r\n                        if (pomodorosCount === 4) {\r\n                            sessionSeconds = Math.min(longBreak * 60, 6000);\r\n                            Push.create('Session over!', {\r\n                                body: 'Long break started.',\r\n                                icon: notificationIcon\r\n                            });\r\n                            longBreakTimeSelected = true;\r\n                        } else {\r\n                            sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n                            Push.create('Session over!', {\r\n                                body: 'Break started.',\r\n                                icon: notificationIcon\r\n                            });\r\n                        }\r\n                        timerDisplay(sessionSeconds, false, true)();\r\n                        play.disabled = false;\r\n                    } else {\r\n                        Push.create('Break over!', {\r\n                            body: 'Session started.',\r\n                            icon: notificationIcon\r\n                        });\r\n                        breakSelected = false;\r\n                        breakTimeSelected = false;\r\n                        sessionTimeSelected = true;\r\n                        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n                        timerDisplay(sessionSeconds, true, true)();\r\n                        play.disabled = false;\r\n                    }\r\n                }\r\n            }\r\n            displayTimeLeft(secondsLeft);\r\n        }, 1000);\r\n    }\r\n    if (returnRunTimerDisplay) return runTimerDisplay;\r\n    document.addEventListener('keydown', e => {\r\n        if (e.keyCode === 32) {\r\n            if (e.repeat) return;\r\n            if (pause.disabled) runTimerDisplay();\r\n            else pauseTimer(pause, false)();\r\n        }\r\n    });\r\n    play.addEventListener('click', runTimerDisplay);\r\n}\r\n\r\n/**\r\n * Checks seconds to see if the timer font needs adjusting. Adjusts it if so.\r\n * \r\n * @param {number} seconds\r\n * @param {DOM element} timer\r\n * @return {void}\r\n */\r\nfunction checkTimerFont(seconds, timer) {\r\n    if (seconds === 360000 && window.matchMedia('(max-width: 420px)').matches) timer.style.fontSize = '4.688rem';\r\n    else if (seconds >= 3600 && window.matchMedia('(max-width: 420px)').matches) {\r\n        timer.style.fontSize = '5rem';\r\n    } else {\r\n        timer.style.fontSize = '5.625rem';\r\n    }\r\n}\r\n\r\n/**\r\n * Allows selection of a session, break, or long break.\r\n * Displays correct time and selection.\r\n * \r\n * @param {DOM element} sessionTime\r\n * @param {DOM element} breakTime\r\n * @param {DOM element} longBreakPomodoro\r\n * @return {void}\r\n */\r\nfunction sessionBreakSelect(sessionTime, breakTime, longBreakPomodoro) {\r\n    function runSessionSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, true, true);\r\n        if (sessionTimeSelected) null;\r\n        else if (breakTimeSelected) {\r\n            breakTimeSelected = false;\r\n            sessionTimeSelected = true;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        if (sessionSeconds === longBreak * 60) resetPomodoros(pomodoros);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = false;\r\n        sessionSeconds = parseInt(breakMinutes.textContent) * 60;\r\n        pomodorosCount = 0;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    function runLongBreakSelect() {\r\n        if (timerStarted) stopTimerHard(stop, sessionSeconds);\r\n        breakSelected = true;\r\n        longBreakTimeSelected = true;\r\n        sessionSeconds = parseInt(longBreak) * 60;\r\n        displayTimeLeft(sessionSeconds, false);\r\n        timerDisplay(sessionSeconds, false, true);\r\n        currentActive = titleBorderChange(true);\r\n        pomodorosCount = 4;\r\n        // Fill in all four pomodoros\r\n        pomodoros.forEach(pomodoro => {\r\n            if (!customThemeActive) pomodoro.classList.add(`${currentActive.split('-')[0]}-background`);\r\n            else pomodoro.setAttribute('style', `background-color: ${customValueContent}; border-color: ${customValueContent};`);\r\n        });\r\n        if (breakTimeSelected) null;\r\n        else if (sessionTimeSelected) {\r\n            breakTimeSelected = true;\r\n            sessionTimeSelected = false;\r\n            titleBorderChange(false);\r\n        }\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 80) {\r\n            if (e.repeat) return\r\n            runSessionSelect();\r\n        }\r\n    });\r\n    sessionTime.addEventListener('click', runSessionSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 66) {\r\n            if (e.repeat) return\r\n            runBreakSelect();\r\n        }\r\n    });\r\n    breakTime.addEventListener('click', runBreakSelect);\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 76) {\r\n            if (e.repeat) return;\r\n            runLongBreakSelect();\r\n        }\r\n    });\r\n    longBreakPomodoro.addEventListener('click', runLongBreakSelect);\r\n}\r\n\r\n/**\r\n * Changes border under session or select.\r\n * Adjusts colors and classes as needed.\r\n * \r\n * @param {boolean} noTitleToggle\r\n * @return {DOM class || void}\r\n */\r\nfunction titleBorderChange(noTitleToggle) {\r\n    let currentActive;\r\n    if (!customThemeActive) {\r\n        sessionTitle.classList.length >= 1 ?\r\n            currentActive = sessionTitle.classList[sessionTitle.classList.length - 1] :\r\n            currentActive = breakTitle.classList[breakTitle.classList.length - 1];\r\n        if (noTitleToggle) return currentActive;\r\n        breakTitle.classList.toggle(currentActive);\r\n        sessionTitle.classList.toggle(currentActive);\r\n    } else if (noTitleToggle) {\r\n        return;\r\n    } else {\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n        if (customThemeSwitch) {\r\n            customThemeSwitch = false;\r\n            sessionTitle.style.background = '';\r\n            sessionTitle.style.backgroundSize = '';\r\n            sessionTitle.style.backgroundPosition = '';\r\n            breakTitle.style.background = `linear-gradient(to right, ${customValueContent}, ${customValueContent}) no-repeat`;\r\n            breakTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            breakTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        } else {\r\n            customThemeSwitch = true;\r\n            breakTitle.style.background = '';\r\n            breakTitle.style.backgroundSize = '';\r\n            breakTitle.style.backgroundPosition = '';\r\n            sessionTitle.style.background = `linear-gradient(to right, ${customValueContent}, ${customValueContent}) no-repeat`;\r\n            sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n            sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        }\r\n    }\r\n    return currentActive;\r\n}\r\n\r\n/**\r\n * Increase or decrease time relative to the desired time option.\r\n * \r\n * @param {DOM element} increase\r\n * @param {DOM element} minutes\r\n * @param {DOM element} decrease\r\n * @param {boolean} session\r\n * @return {void}\r\n */\r\nfunction timerSession(increase, minutes, decrease, session = true) {\r\n    function runIncrease(isThroughKey = false) {\r\n        const minutesTextContent = parseInt(minutes.textContent);\r\n        if ((parseInt(minutes.textContent) >= 6000 && !longBreakTimeSelected) ||\r\n            (longBreak >= 6000 && longBreakTimeSelected && !session && minutesTextContent >= 6000) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 6000 && !session && minutesTextContent >= 6000)) {\r\n            return;\r\n        } else {\r\n            if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n                sessionSeconds += 60;\r\n                longBreak += 1;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else minutes.textContent = parseInt(minutes.textContent) + 1;\r\n            if (session) {\r\n                if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!breakSelected && !longBreakTimeSelected) sessionSeconds += 60;\r\n            } else if (breakSelected) {\r\n                if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && minutesTextContent < 2000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n                else if (longBreakTimeSelected) null;\r\n                else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n                if (!longBreakTimeSelected) sessionSeconds += 60;\r\n                else if (breakLongBreakLink.checked) null;\r\n                else if (breakLongBreakLink.checked) sessionSeconds += 60 * 3;\r\n            }\r\n        }\r\n        if (breakLongBreakLink.checked && longBreak !== 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    increase.addEventListener('click', () => {\r\n        runIncrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 38 && !timerStarted) {\r\n            runIncrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n\r\n    function runDecrease(isThroughKey = false) {\r\n        if ((parseInt(minutes.textContent) <= 1 && !longBreakTimeSelected) ||\r\n            (longBreak <= 1 && longBreakTimeSelected && !session) ||\r\n            (!session && !breakSelected && isThroughKey) ||\r\n            (session && breakSelected && isThroughKey) ||\r\n            (breakLongBreakLink.checked && longBreak === 3 && !session)) {\r\n            return;\r\n        }\r\n\r\n        const breakMinutesContent = parseInt(breakMinutes.textContent) * 3;\r\n\r\n        if (longBreakTimeSelected && !breakLongBreakLink.checked && !session) {\r\n            sessionSeconds -= 60;\r\n            longBreak -= 1;\r\n            displayTimeLeft(sessionSeconds, false);\r\n        } else minutes.textContent = parseInt(minutes.textContent) - 1;\r\n        if (session) {\r\n            if (!breakSelected) displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!breakSelected && !longBreakTimeSelected) sessionSeconds -= 60;\r\n        } else if (breakSelected) {\r\n            if (breakTimeSelected && longBreakTimeSelected && breakLongBreakLink.checked && breakMinutesContent <= 6000) displayTimeLeft((parseInt(minutes.textContent) * 3) * 60, false);\r\n            else if (longBreakTimeSelected) null;\r\n            else displayTimeLeft(parseInt(minutes.textContent) * 60, false);\r\n            if (!longBreakTimeSelected) sessionSeconds -= 60;\r\n            else if (breakLongBreakLink.checked && breakMinutesContent >= 2000) null;\r\n            else if (breakLongBreakLink.checked) sessionSeconds -= 60 * 3;\r\n        }\r\n        if (breakLongBreakLink.checked && breakMinutesContent <= 6000) longBreak = parseInt(breakMinutes.textContent) * 3;\r\n    }\r\n    decrease.addEventListener('click', () => {\r\n        runDecrease(false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 40 && !timerStarted) {\r\n            runDecrease(true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {number} seconds\r\n * @param {boolean} title\r\n * @return {void}\r\n */\r\nfunction displayTimeLeft(seconds, title = true) {\r\n    let minutes = Math.floor(seconds / 60);\r\n    const remainderSeconds = seconds % 60;\r\n    let display;\r\n    if (minutes >= 60) {\r\n        const hours = Math.floor(minutes / 60);\r\n        minutes %= 60;\r\n        display = `${hours < 10 ? hours.toString().padStart(2, 0) : hours}:${\r\n            minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    } else {\r\n        display = `${minutes < 10 ? minutes.toString().padStart(2, 0) : minutes}:${\r\n            remainderSeconds < 10 ? remainderSeconds.toString().padStart(2, 0) : remainderSeconds}`;\r\n    }\r\n    timer.textContent = display;\r\n    if (!title || !tabTitleTime.checked) return;\r\n    else document.title = `(${display}) Pomodoro`;\r\n}\r\n\r\n/**\r\n * @param {DOM element} pause\r\n * @param {boolean} clickRun\r\n * @return {function || void}\r\n */\r\nfunction pauseTimer(pause, clickRun) {\r\n    function runPauseTimer() {\r\n        clearInterval(countdown);\r\n        // Resume timer for session or break\r\n        sessionTitle.classList >= 1 ? timerDisplay(0, true, true) : timerDisplay(0, false, true);\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n    }\r\n\r\n    if (!clickRun) return runPauseTimer;\r\n    else {\r\n        pause.disabled = true;\r\n        pause.addEventListener('click', runPauseTimer);\r\n    }\r\n}\r\n\r\n/**\r\n * On timer reset, move bottom border indicator to session.\r\n * \r\n * @return {void}\r\n */\r\nfunction breakSessionTitleReset() {\r\n    if (breakTitle.classList.length >= 1) {\r\n        sessionTitle.classList.add(breakTitle.classList[breakTitle.classList.length - 1]);\r\n        breakTitle.classList = '';\r\n    } else if (customThemeActive) {\r\n        sessionTitle.style.background = `linear-gradient(to right, ${customValueContent}, ${customValueContent}) no-repeat`;\r\n        sessionTitle.style.backgroundSize = 'var(--pomodoro-size)';\r\n        sessionTitle.style.backgroundPosition = 'var(--pomodoro-position)';\r\n        breakTitle.style.background = '';\r\n        customThemeSwitch = true;\r\n    }\r\n}\r\n\r\n/**\r\n * @return {void}\r\n */\r\nfunction enableTimeInputs() {\r\n    for (let i = 0; i < timeInputs.length; i++) {\r\n        if (timeInputs[i].id === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else {\r\n            timeInputs[i].disabled = false;\r\n            timeInputs[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n        }\r\n        if (confirmTimeChanges[i].classList.contains('confirm-time-change-long-break') && breakLongBreakLink.checked) null;\r\n        else {\r\n            confirmTimeChanges[i].style.pointerEvents = 'auto';\r\n            confirmTimeChanges[i].classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n        }\r\n        if (timeInputLabels[i].getAttribute('for') === 'long-break-input' && breakLongBreakLink.checked) null;\r\n        else timeInputLabels[i].classList.remove('line-through-long-break', 'opacity-long-break');\r\n    }\r\n}\r\n\r\n/**\r\n * @param {DOM element} stop\r\n * @param {number} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimer(stop, seconds) {\r\n    stop.disabled = true;\r\n\r\n    function runStopTimer() {\r\n        if (breakSelected && pomodorosCount !== 4) seconds = parseInt(breakMinutes.textContent) * 60;\r\n        else if (pomodorosCount === 4) seconds = longBreak * 60;\r\n        else seconds = parseInt(sessionMinutes.textContent) * 60;\r\n        timerStarted = false;\r\n        sessionSeconds = seconds;\r\n        clearInterval(countdown);\r\n        displayTimeLeft(seconds);\r\n        stop.disabled = true;\r\n        pause.disabled = true;\r\n        play.disabled = false;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        enableTimeInputs();\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        document.title = 'Pomodoro';\r\n        if (breakSelected) timerDisplay(seconds, false, true);\r\n        else timerDisplay(seconds, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 83) {\r\n            if (e.repeat) return;\r\n            runStopTimer();\r\n        }\r\n    });\r\n    stop.addEventListener('click', runStopTimer);\r\n}\r\n\r\n/**\r\n * Stops timer and resets pomodoros.\r\n * \r\n * @param {DOM element} stop\r\n * @param {*} seconds\r\n * @return {void}\r\n */\r\nfunction stopTimerHard(stop, seconds) {\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    timerStarted = false;\r\n    seconds = parseInt(sessionMinutes.textContent) * 60;\r\n    sessionSeconds = seconds;\r\n    clearInterval(countdown);\r\n    displayTimeLeft(seconds);\r\n    breakSessionTitleReset();\r\n    resetPomodoros(pomodoros);\r\n    pomodorosCount = 0;\r\n    breakSelected = false;\r\n    sessionTimeSelected = true;\r\n    breakTimeSelected = false;\r\n    longBreakTimeSelected = false;\r\n    stop.disabled = true;\r\n    pause.disabled = true;\r\n    play.disabled = false;\r\n    autoStart.disabled = false;\r\n    breakLongBreakLink.disabled = false;\r\n    enableTimeInputs();\r\n    arrow.forEach(arrow => {\r\n        arrow.disabled = false;\r\n    });\r\n    document.title = 'Pomodoro';\r\n    timerDisplay(seconds, true, true);\r\n    checkTimerFont(sessionSeconds, timer);\r\n}\r\n\r\n/**\r\n * @param {DOM elements} pomodoros\r\n * @return {void}\r\n */\r\nfunction resetPomodoros(pomodoros) {\r\n    pomodoros.forEach((pomodoro) => {\r\n        if (!customThemeActive) {\r\n            const pomodoroBorder = pomodoro.classList[1];\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro', pomodoroBorder);\r\n        } else {\r\n            pomodoro.classList = '';\r\n            pomodoro.classList.add('pomodoro');\r\n            pomodoro.style.backgroundColor = '';\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * @param {DOM element} reset\r\n * @return {void}\r\n */\r\nfunction resetTimer(reset) {\r\n    function runResetTimer() {\r\n        timerStarted = false;\r\n        clearInterval(countdown);\r\n        timer.textContent = '25:00';\r\n        sessionMinutes.textContent = '25';\r\n        breakSessionTitleReset();\r\n        breakSelected = false;\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        longBreakTimeSelected = false;\r\n        enableTimeInputs();\r\n        resetPomodoros(pomodoros);\r\n        pomodorosCount = 0;\r\n        sessionSeconds = parseInt(sessionMinutes.textContent) * 60;\r\n        breakMinutes.textContent = '5';\r\n        longBreak = 15;\r\n        arrow.forEach(arrow => {\r\n            arrow.disabled = false;\r\n        });\r\n        play.disabled = false;\r\n        pause.disabled = true;\r\n        autoStart.disabled = false;\r\n        breakLongBreakLink.disabled = false;\r\n        document.title = 'Pomodoro';\r\n        timerDisplay(parseInt(timer.textContent.split(':')[0]) * 60, true, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n        if (e.altKey && e.keyCode === 82) {\r\n            if (e.repeat) return;\r\n            runResetTimer();\r\n        }\r\n    });\r\n    reset.addEventListener('click', runResetTimer);\r\n}\r\n\r\n/**\r\n * @param {DOM element} notifications\r\n * @return {void}\r\n */\r\nfunction toggleNotifications(notifications) {\r\n    notifications.addEventListener('change', e => {\r\n        if (e.target.checked) Push.Permission.request();\r\n    });\r\n}\r\n\r\n/**\r\n * Change the time of a time option through input.\r\n * \r\n * @param {DOM element} confirmTimeChangeSession\r\n * @param {DOM element} sessionInput\r\n * @param {DOM element} confirmTimeChangeBreak\r\n * @param {DOM element} breakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} longBreakInput\r\n * @return {void}\r\n */\r\nfunction changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput) {\r\n    function checkIsDigit(e) {\r\n        if (e.keyCode === 189 ||\r\n            e.keyCode === 187 ||\r\n            e.keyCode === 69 ||\r\n            e.keyCode === 190) e.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Check which time option is currently selected.\r\n     * Update time option text value, timer display, and session seconds accordingly.\r\n     * \r\n     * @param {DOM element} input\r\n     * @param {DOM element} minutes\r\n     * @param {boolean} isSession\r\n     * @param {boolean} isLongBreak\r\n     * @return {void}\r\n     */\r\n    function runConfirmTimeChange(input, minutes, isSession, isLongBreak) {\r\n        let inputValue = input.value;\r\n        if (inputValue > 6000) {\r\n            inputValue = 6000;\r\n            input.value = 6000;\r\n        } else if (inputValue < 1 || input.length === 0) {\r\n            inputValue = 1;\r\n            input.value = 1;\r\n        }\r\n        if (isSession) {\r\n            if (!breakSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        } else if (!isSession) {\r\n            if (longBreakTimeSelected && breakLongBreakLink.checked) {\r\n                longBreak = Math.min(inputValue * 3, 6000);\r\n                sessionSeconds = longBreak * 60;\r\n                displayTimeLeft(sessionSeconds, false)\r\n            } else if (longBreakTimeSelected && !breakLongBreakLink.checked) {\r\n                if (isLongBreak) {\r\n                    sessionSeconds = inputValue * 60;\r\n                    displayTimeLeft(sessionSeconds, false);\r\n                }\r\n            } else if (breakSelected && !isLongBreak) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            } else if (isLongBreak && longBreakTimeSelected) {\r\n                sessionSeconds = inputValue * 60;\r\n                displayTimeLeft(sessionSeconds, false);\r\n            }\r\n        }\r\n        if (isLongBreak) longBreak = +inputValue;\r\n        if (breakLongBreakLink.checked && !isSession) longBreak = Math.min(inputValue * 3, 6000);\r\n        minutes.textContent = parseInt(inputValue, 10);\r\n    }\r\n\r\n    confirmTimeChangeSession.addEventListener('click', () => {\r\n        runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    sessionInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(sessionInput, sessionMinutes, true, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n\r\n    confirmTimeChangeBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    breakInput.addEventListener('keydown', e => {\r\n        checkIsDigit(e);\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(breakInput, breakMinutes, false, false);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n    confirmTimeChangeLongBreak.addEventListener('click', () => {\r\n        runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n        checkTimerFont(sessionSeconds, timer);\r\n        setStorageTime();\r\n    });\r\n    longBreakInput.addEventListener('keydown', e => {\r\n        if (e.keyCode === 13) {\r\n            if (e.repeat) return;\r\n            runConfirmTimeChange(longBreakInput, longBreak, false, true);\r\n            checkTimerFont(sessionSeconds, timer);\r\n            setStorageTime();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Adjust long break time in conjunction with break if link active.\r\n * \r\n * @param {DOM element} breakLongBreakLink\r\n * @param {DOM element} longBreakInput\r\n * @param {DOM element} confirmTimeChangeLongBreak\r\n * @param {DOM element} timeInputLabelLongBreak\r\n * @param {DOM element} breakMinutes\r\n * @return {void}\r\n */\r\nfunction breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, returnRunBreakLongBreakLinkCheck) {\r\n    function runBreakLongBreakLinkCheck(link) {\r\n        if (link.checked) {\r\n            longBreakInput.classList.add('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.add('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.add('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'none';\r\n            longBreakInput.disabled = true;\r\n            longBreak = Math.min(+breakMinutes.textContent * 3, 6000);\r\n            if (longBreakTimeSelected) {\r\n                displayTimeLeft(longBreak * 60, false);\r\n                sessionSeconds = longBreak * 60;\r\n            }\r\n        } else if (!link.checked) {\r\n            longBreakInput.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            timeInputLabelLongBreak.classList.remove('line-through-long-break', 'opacity-long-break');\r\n            confirmTimeChangeLongBreak.classList.remove('opacity-long-break', 'pointer-events-long-break');\r\n            confirmTimeChangeLongBreak.style.pointerEvents = 'auto';\r\n            longBreakInput.disabled = false;\r\n        }\r\n    }\r\n    breakLongBreakLink.addEventListener('change', () => {\r\n        runBreakLongBreakLinkCheck(breakLongBreakLink);\r\n    });\r\n    if (returnRunBreakLongBreakLinkCheck) return runBreakLongBreakLinkCheck;\r\n}\r\n\r\nfunction mainTimer() {\r\n    setStorage();\r\n    setStoragePreferences();\r\n    loadStorage();\r\n    timerDisplay(sessionSeconds, true, false);\r\n    timerSession(increaseSession, sessionMinutes, decreaseSession, true);\r\n    timerSession(increaseBreak, breakMinutes, decreaseBreak, false);\r\n    sessionBreakSelect(sessionTitle, breakTitle, longBreakPomodoro);\r\n    pauseTimer(pause, true);\r\n    stopTimer(stop, sessionSeconds);\r\n    resetTimer(reset);\r\n    toggleNotifications(notifications);\r\n    changeTimeInput(confirmTimeChangeSession, sessionInput, confirmTimeChangeBreak, breakInput, confirmTimeChangeLongBreak, longBreakInput);\r\n    breakLongBreakLinkCheck(breakLongBreakLink, longBreakInput, confirmTimeChangeLongBreak, timeInputLabelLongBreak, breakMinutes, false);\r\n}\r\n\r\nwindow.onload = mainTimer();\n// TODO: For modal, modularize HTML classes and id's, and JS functions and variables\r\nconst modalSettings = document.querySelector('#simple-modal-settings');\r\nconst modalAbout = document.querySelector('#simple-modal-about');\r\nconst modalBtnSettings = document.querySelector('#modal-btn-settings');\r\nconst modalBtnAbout = document.querySelector('#modal-btn-about');\r\nconst closeBtnSettings = document.querySelector('#close-btn-settings');\r\nconst closeBtnAbout = document.querySelector('#close-btn-about');\r\nconst settings = document.querySelector('.settings');\r\nconst about = document.querySelector('.about');\r\n\r\nfunction modalDisplaySettings(modal, modalBtn, closeBtn, settings) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        settings.style.transform = 'rotate(90deg)';\r\n        body.style.overflow = 'hidden';\r\n        settings.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalSettings(modal, settings);\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === modal) {\r\n            hideModalSettings(modal, settings);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalSettings(modal, settings) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    settings.style.transform = 'rotate(0deg)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction modalDisplayAbout(modal, modalBtn, closeBtn, about) {\r\n    modalBtn.addEventListener('click', () => {\r\n        modal.style.visibility = 'visible';\r\n        modal.style.opacity = '1';\r\n        about.style.transform = 'scale(0.85)';\r\n        body.style.overflow = 'hidden';\r\n        about.blur();\r\n    });\r\n    closeBtn.addEventListener('click', () => {\r\n        hideModalAbout(modal);\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === modal) {\r\n            hideModalAbout(modal);\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideModalAbout(modal) {\r\n    modal.style.opacity = '0';\r\n    setTimeout(() => {\r\n        modal.style.visibility = 'hidden';\r\n    }, 300);\r\n    about.style.transform = 'scale(1)';\r\n    body.style.overflow = 'auto';\r\n}\r\n\r\nfunction mainModal() {\r\n    modalDisplaySettings(modalSettings, modalBtnSettings, closeBtnSettings, settings);\r\n    modalDisplayAbout(modalAbout, modalBtnAbout, closeBtnAbout, about);\r\n}\r\n\r\nwindow.onload = mainModal();\nconst timerFontMediaQuery = window.matchMedia('(max-width: 420px)');\r\n\r\nfunction timerFontListener(e) {\r\n    if (e.matches) {\r\n        if (sessionSeconds === 6000) timer.style.fontSize = '4.688rem';\r\n        else if (sessionSeconds >= 3600) timer.style.fontSize = '5rem';\r\n    } else timer.style.fontSize = '5.625rem';\r\n}\r\n\r\nfunction mediaQueryListener() {\r\n    timerFontMediaQuery.addListener(timerFontListener);\r\n    timerFontListener(timerFontMediaQuery);\r\n}\r\n\r\nwindow.onload = mediaQueryListener();\nconst themes = document.querySelectorAll('.theme');\r\nconst body = document.querySelector('body');\r\nconst themeColor = document.querySelectorAll('.dark-color');\r\nconst themeBackground = document.querySelectorAll('.dark-');\r\nconst themeBorder = document.querySelectorAll('.dark-border');\r\nlet themeActive = document.querySelector('.dark-active');\r\nconst themeTitle = document.querySelector('.dark-title');\r\nconst themeWarningBackground = document.querySelector('.theme-warning-background');\r\nconst acceptRestart = document.querySelector('#accept-restart');\r\nconst declineRestart = document.querySelector('#decline-restart');\r\nlet customValueBody;\r\nlet customValueContent;\r\nconst applyCustomTheme = document.querySelector('#apply-custom-theme');\r\nlet customThemeActive = false;\r\n\r\n// TODO: Modal should also change color OR make it dark mode (not sure which one is better)\r\n\r\nfunction colorPicker() {\r\n    $('#color-picker-body').spectrum({\r\n        color: '#000080',\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    $('#color-picker-content').spectrum({\r\n        color: '#C8C8C8',\r\n        showInput: true,\r\n        showInitial: true,\r\n        showAlpha: true,\r\n        preferredFormat: 'hex'\r\n    });\r\n    customValueBody = $('#color-picker-body').spectrum('get');\r\n    customValueContent = $('#color-picker-content').spectrum('get');\r\n    $('#color-picker-body').on('change.spectrum', () => {\r\n        customValueBody = $('#color-picker-body').spectrum('get');\r\n    });\r\n    $('#color-picker-content').on('change.spectrum', () => {\r\n        customValueContent = $('#color-picker-content').spectrum('get');\r\n    });\r\n    applyCustomTheme.addEventListener('click', () => {\r\n        if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartThemeCustom(acceptRestart, declineRestart, themeWarningBackground, customValueBody, customValueContent);\r\n        else {\r\n            customThemeActive = true;\r\n            customThemeChanger(customValueBody, customValueContent, false);\r\n            if (breakSelected) titleBorderColor(true);\r\n        }\r\n    });\r\n}\r\n\r\nfunction customThemeChanger(bodyValue, contentValue, isTimerStarted) {\r\n    body.setAttribute('style', `background-color: ${bodyValue}; color: ${contentValue};`)\r\n    themeColor.forEach(element => {\r\n        element.setAttribute('style', `color: ${contentValue};`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.setAttribute('style', `border-color: ${contentValue}`);\r\n    });\r\n    if (breakSelected) breakTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    else sessionTitle.setAttribute('style', `background: linear-gradient(to right, ${contentValue}, ${contentValue}) no-repeat; background-size: 100% 1.5px; background-position: left bottom`);\r\n    themeTitle.setAttribute('style', `color: ${contentValue}`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = contentValue;\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.style.backgroundColor = contentValue;\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n}\r\n\r\nfunction removeCustomTheme(fullRemove = false) {\r\n    if (fullRemove) customThemeActive = false;\r\n    body.style.backgroundColor = '';\r\n    body.style.color = '';\r\n    themeColor.forEach(element => {\r\n        element.style.color = '';\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.style.borderColor = '';\r\n    });\r\n    breakTitle.style.background = '';\r\n    themeActive.style.background = '';\r\n    themeActive.style.backgroundSize = '';\r\n    themeActive.style.backgroundPosition = '';\r\n    themeTitle.style.color = '';\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.style.borderColor = '';\r\n        pomodoro.style.backgroundColor = '';\r\n    });\r\n}\r\n\r\nfunction timerRestartTheme(accept, decline, themeWarning, theme) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        stopTimerHard(stop, sessionSeconds);\r\n        executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, true);\r\n        if (customThemeActive) {\r\n            removeCustomTheme(true);\r\n        }\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction timerRestartThemeCustom(accept, decline, themeWarning, bodyValue, contentValue) {\r\n    themeWarning.style.display = 'block';\r\n    accept.addEventListener('click', () => {\r\n        customThemeActive = true;\r\n        removeCustomTheme(false);\r\n        stopTimerHard(stop, sessionSeconds);\r\n        sessionTimeSelected = true;\r\n        breakTimeSelected = false;\r\n        breakSelected = false;\r\n        longBreakTimeSelected = false;\r\n        customThemeChanger(bodyValue, contentValue, true);\r\n        titleBorderColor(true)\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    decline.addEventListener('click', () => {\r\n        themeWarning.style.display = 'none';\r\n    });\r\n    window.addEventListener('click', function (e) {\r\n        if (e.target === themeWarning) themeWarning.style.display = 'none';\r\n    });\r\n}\r\n\r\nfunction changeTheme(themes) {\r\n    themes.forEach(theme => {\r\n        theme.addEventListener('click', function () {\r\n            if (((timerStarted || pomodorosCount >= 1) && !longBreakTimeSelected) || timerStarted) timerRestartTheme(acceptRestart, declineRestart, themeWarningBackground, theme);\r\n            else {\r\n                if (customThemeActive) removeCustomTheme(true);\r\n                setTimeout(() => {\r\n                    if (breakSelected) titleBorderColor(false);\r\n                }, 0);\r\n                executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, false);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction titleBorderColor(customThemeReset) {\r\n    if (!customThemeActive && !customThemeReset) {\r\n        let currentActive = sessionTitle.classList[sessionTitle.classList.length - 1];\r\n        breakTitle.classList = '';\r\n        breakTitle.classList.add(currentActive);\r\n        sessionTitle.classList = '';\r\n    } else if (customThemeReset) {\r\n        if (breakSelected) customThemeSwitch = false;\r\n        else customThemeSwitch = true;\r\n        sessionTitle.classList = '';\r\n        breakTitle.classList = '';\r\n\r\n    }\r\n}\r\n\r\nfunction executeChangeTheme(theme, themeColor, themeBorder, themeActive, themeTitle, pomodoros, modalSettings, isTimerStarted) {\r\n    body.classList = '';\r\n    body.classList.add(theme.classList[1]);\r\n    themeColor.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-color`);\r\n    });\r\n    themeBorder.forEach(element => {\r\n        element.classList.remove(element.classList[element.classList.length - 1]);\r\n        element.classList.add(`${theme.classList[1]}-border`);\r\n    });\r\n    themeActive.classList.remove(themeActive.classList[themeActive.classList.length - 1]);\r\n    themeActive.classList.add(`${theme.classList[1]}-active`);\r\n    themeActive = document.querySelector(`.${theme.classList[1]}-active`);\r\n    themeTitle.classList.remove(themeTitle.classList[themeTitle.classList.length - 1]);\r\n    themeTitle.classList.add(`${theme.classList[1]}-title`);\r\n    pomodoros.forEach(pomodoro => {\r\n        pomodoro.classList = '';\r\n        pomodoro.classList.add('pomodoro', `${theme.classList[1]}-border`);\r\n        if (longBreakTimeSelected && !isTimerStarted) pomodoro.classList.add('pomodoro', `${theme.classList[1]}-background`);\r\n    });\r\n    hideModalSettings(modalSettings, settings);\r\n}\r\n\r\nfunction mainThemes() {\r\n    changeTheme(themes);\r\n    colorPicker();\r\n}\r\n\r\nwindow.onload = mainThemes();})();"]}